

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat May 18 17:29:56 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,inline
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,inline
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,inline
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,inline
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    91   000000                     
    92                           ; Generated 23/03/2023 GMT
    93                           ; 
    94                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution. Publication is not required when
   108                           ;        this file is used in an embedded application.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F4620 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126   000000                     
   127                           	psect	idataCOMRAM
   128   0042FA                     __pidataCOMRAM:
   129                           	callstack 0
   130                           
   131                           ;initializer for spi_master_mode_configuration@F3131
   132   0042FA  2A                 	db	42
   133                           
   134                           ;initializer for _RB7_Flag
   135   0042FB  01                 	db	1
   136                           
   137                           ;initializer for _RB6_Flag
   138   0042FC  01                 	db	1
   139                           
   140                           ;initializer for _RB5_Flag
   141   0042FD  01                 	db	1
   142                           
   143                           ;initializer for _RB4_Flag
   144   0042FE  01                 	db	1
   145                           
   146                           	psect	idataBANK0
   147   004212                     __pidataBANK0:
   148                           	callstack 0
   149                           
   150                           ;initializer for _lat_registers
   151   004212  89                 	db	137
   152   004213  0F                 	db	15
   153   004214  8A                 	db	138
   154   004215  0F                 	db	15
   155   004216  8B                 	db	139
   156   004217  0F                 	db	15
   157   004218  8C                 	db	140
   158   004219  0F                 	db	15
   159   00421A  8D                 	db	141
   160   00421B  0F                 	db	15
   161                           
   162                           ;initializer for _tris_registers
   163   00421C  92                 	db	146
   164   00421D  0F                 	db	15
   165   00421E  93                 	db	147
   166   00421F  0F                 	db	15
   167   004220  94                 	db	148
   168   004221  0F                 	db	15
   169   004222  95                 	db	149
   170   004223  0F                 	db	15
   171   004224  96                 	db	150
   172   004225  0F                 	db	15
   173                           
   174                           ;initializer for spi_slave_mode_configuration@F3145
   175   004226  68                 	db	104
   176                           
   177                           ;initializer for spi_slave_mode_configuration@F3143
   178   004227  5A                 	db	90
   179                           
   180                           ;initializer for spi_slave_mode_configuration@F3141
   181   004228  62                 	db	98
   182                           
   183                           ;initializer for spi_slave_mode_configuration@F3139
   184   004229  2A                 	db	42
   185                           
   186                           ;initializer for spi_master_mode_configuration@F3135
   187   00422A  1A                 	db	26
   188                           
   189                           ;initializer for spi_master_mode_configuration@F3133
   190   00422B  62                 	db	98
   191                           
   192                           ;initializer for _lcd_1
   193   00422C  02                 	db	2
   194   00422D  0A                 	db	10
   195   00422E  1A                 	db	26
   196   00422F  22                 	db	34
   197   004230  2A                 	db	42
   198   004231  32                 	db	50
   199                           
   200                           ;initializer for _motor_1
   201   004232  03                 	db	3
   202   004233  0B                 	db	11
   203                           
   204                           	psect	idataBANK1
   205   0042BC                     __pidataBANK1:
   206                           	callstack 0
   207                           
   208                           ;initializer for _port_registers
   209   0042BC  80                 	db	128
   210   0042BD  0F                 	db	15
   211   0042BE  81                 	db	129
   212   0042BF  0F                 	db	15
   213   0042C0  82                 	db	130
   214   0042C1  0F                 	db	15
   215   0042C2  83                 	db	131
   216   0042C3  0F                 	db	15
   217   0042C4  84                 	db	132
   218   0042C5  0F                 	db	15
   219                           
   220                           ;initializer for _temp_sens
   221   0042C6  00                 	db	0
   222   0042C7  00                 	db	0
   223   0042C8  00                 	db	0
   224   0042C9  00                 	db	0
   225   0042CA  07                 	db	7
   226   0042CB  02                 	db	2
   227   0042CC  01                 	db	1
   228                           
   229                           	psect	smallconst
   230   001000                     __psmallconst:
   231                           	callstack 0
   232   001000  00                 	db	0
   233   001001                     _keypad_values:
   234                           	callstack 0
   235   001001  37                 	db	55
   236   001002  38                 	db	56
   237   001003  39                 	db	57
   238   001004  2F                 	db	47
   239   001005  34                 	db	52
   240   001006  35                 	db	53
   241   001007  36                 	db	54
   242   001008  2A                 	db	42
   243   001009  31                 	db	49
   244   00100A  32                 	db	50
   245   00100B  33                 	db	51
   246   00100C  2D                 	db	45
   247   00100D  63                 	db	99
   248   00100E  30                 	db	48
   249   00100F  3D                 	db	61
   250   001010  2B                 	db	43
   251   001011                     __end_of_keypad_values:
   252                           	callstack 0
   253   000000                     _TMR3L	set	4018
   254   000000                     _TMR3H	set	4019
   255   000000                     _TMR2	set	4044
   256   000000                     _T2CONbits	set	4042
   257   000000                     _TMR1L	set	4046
   258   000000                     _TMR1H	set	4047
   259   000000                     _T1CONbits	set	4045
   260   000000                     _T0CONbits	set	4053
   261   000000                     _SSPBUF	set	4041
   262   000000                     _SSPSTATbits	set	4039
   263   000000                     _SSPCON2bits	set	4037
   264   000000                     _SSPADD	set	4040
   265   000000                     _SSPCON1bits	set	4038
   266   000000                     _INTCON2bits	set	4081
   267   000000                     _INTCON3bits	set	4080
   268   000000                     _SPBRGH	set	4016
   269   000000                     _SPBRG	set	4015
   270   000000                     _BAUDCONbits	set	4024
   271   000000                     _RCREG	set	4014
   272   000000                     _TXREG	set	4013
   273   000000                     _TXSTAbits	set	4012
   274   000000                     _TRISCbits	set	3988
   275   000000                     _RCSTAbits	set	4011
   276   000000                     _EEDATA	set	4008
   277   000000                     _EECON2	set	4007
   278   000000                     _EEADR	set	4009
   279   000000                     _EEADRH	set	4010
   280   000000                     _PR2	set	4043
   281   000000                     _ADCON1bits	set	4033
   282   000000                     _ADRESL	set	4035
   283   000000                     _ADRESH	set	4036
   284   000000                     _INTCONbits	set	4082
   285   000000                     _TRISD	set	3989
   286   000000                     _TRISB	set	3987
   287   000000                     _TRISE	set	3990
   288   000000                     _PORTBbits	set	3969
   289   000000                     _TXSTA1bits	set	4012
   290   000000                     _TRISC	set	3988
   291   000000                     _PIE1bits	set	3997
   292   000000                     _ADCON2bits	set	4032
   293   000000                     _ADCON0bits	set	4034
   294   000000                     _LATA	set	3977
   295   000000                     _PORTE	set	3972
   296   000000                     _PORTD	set	3971
   297   000000                     _PORTC	set	3970
   298   000000                     _PORTB	set	3969
   299   000000                     _PORTA	set	3968
   300   000000                     _TRISA	set	3986
   301   000000                     _PIE2bits	set	4000
   302   000000                     _CCP2CONbits	set	4026
   303   000000                     _CCP1CONbits	set	4029
   304   000000                     _PIR1bits	set	3998
   305   000000                     _CCPR1L	set	4030
   306   000000                     _CCPR2L	set	4027
   307   000000                     _EECON1bits	set	4006
   308   000000                     _T3CONbits	set	4017
   309   000000                     _PIR2bits	set	4001
   310   000000                     _LATE	set	3981
   311   000000                     _LATD	set	3980
   312   000000                     _LATC	set	3979
   313   000000                     _LATB	set	3978
   314   000000                     _TMR0H	set	4055
   315   000000                     _TMR0L	set	4054
   316   001011                     STR_6:
   317   001011  73                 	db	115	;'s'
   318   001012  74                 	db	116	;'t'
   319   001013  20                 	db	32
   320   001014  73                 	db	115	;'s'
   321   001015  70                 	db	112	;'p'
   322   001016  65                 	db	101	;'e'
   323   001017  65                 	db	101	;'e'
   324   001018  64                 	db	100	;'d'
   325   001019  20                 	db	32
   326   00101A  6D                 	db	109	;'m'
   327   00101B  6F                 	db	111	;'o'
   328   00101C  64                 	db	100	;'d'
   329   00101D  65                 	db	101	;'e'
   330   00101E  00                 	db	0
   331   00101F                     STR_10:
   332   00101F  66                 	db	102	;'f'
   333   001020  61                 	db	97	;'a'
   334   001021  6E                 	db	110	;'n'
   335   001022  20                 	db	32
   336   001023  6F                 	db	111	;'o'
   337   001024  66                 	db	102	;'f'
   338   001025  66                 	db	102	;'f'
   339   001026  00                 	db	0
   340   001027                     STR_4:
   341   001027  74                 	db	116	;'t'
   342   001028  65                 	db	101	;'e'
   343   001029  6D                 	db	109	;'m'
   344   00102A  70                 	db	112	;'p'
   345   00102B  20                 	db	32
   346   00102C  3D                 	db	61	;'='
   347   00102D  00                 	db	0
   348   00102E                     STR_8:
   349   00102E  66                 	db	102	;'f'
   350   00102F  61                 	db	97	;'a'
   351   001030  6E                 	db	110	;'n'
   352   001031  20                 	db	32
   353   001032  6F                 	db	111	;'o'
   354   001033  6E                 	db	110	;'n'
   355   001034  00                 	db	0
   356   001035                     STR_1:
   357   001035  25                 	db	37
   358   001036  69                 	db	105	;'i'
   359   001037  00                 	db	0
   360   001038  00                 	db	0	; dummy byte at the end
   361   000000                     
   362                           ; #config settings
   363                           
   364                           	psect	cinit
   365   0039F4                     __pcinit:
   366                           	callstack 0
   367   0039F4                     start_initialization:
   368                           	callstack 0
   369   0039F4                     __initialization:
   370                           	callstack 0
   371                           
   372                           ; Initialize objects allocated to BANK1 (17 bytes)
   373                           ; load TBLPTR registers with __pidataBANK1
   374   0039F4  0EBC               	movlw	low __pidataBANK1
   375   0039F6  6EF6               	movwf	tblptrl,c
   376   0039F8  0E42               	movlw	high __pidataBANK1
   377   0039FA  6EF7               	movwf	tblptrh,c
   378   0039FC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   379   0039FE  6EF8               	movwf	tblptru,c
   380   003A00  EE01  F020         	lfsr	0,__pdataBANK1
   381   003A04  EE10 F011          	lfsr	1,17
   382   003A08                     copy_data0:
   383   003A08  0009               	tblrd		*+
   384   003A0A  CFF5 FFEE          	movff	tablat,postinc0
   385   003A0E  50E5               	movf	postdec1,w,c
   386   003A10  50E1               	movf	fsr1l,w,c
   387   003A12  E1FA               	bnz	copy_data0
   388                           
   389                           ; Initialize objects allocated to BANK0 (34 bytes)
   390                           ; load TBLPTR registers with __pidataBANK0
   391   003A14  0E12               	movlw	low __pidataBANK0
   392   003A16  6EF6               	movwf	tblptrl,c
   393   003A18  0E42               	movlw	high __pidataBANK0
   394   003A1A  6EF7               	movwf	tblptrh,c
   395   003A1C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   396   003A1E  6EF8               	movwf	tblptru,c
   397   003A20  EE00  F0DE         	lfsr	0,__pdataBANK0
   398   003A24  EE10 F022          	lfsr	1,34
   399   003A28                     copy_data1:
   400   003A28  0009               	tblrd		*+
   401   003A2A  CFF5 FFEE          	movff	tablat,postinc0
   402   003A2E  50E5               	movf	postdec1,w,c
   403   003A30  50E1               	movf	fsr1l,w,c
   404   003A32  E1FA               	bnz	copy_data1
   405                           
   406                           ; Initialize objects allocated to COMRAM (5 bytes)
   407                           ; load TBLPTR registers with __pidataCOMRAM
   408   003A34  0EFA               	movlw	low __pidataCOMRAM
   409   003A36  6EF6               	movwf	tblptrl,c
   410   003A38  0E42               	movlw	high __pidataCOMRAM
   411   003A3A  6EF7               	movwf	tblptrh,c
   412   003A3C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   413   003A3E  6EF8               	movwf	tblptru,c
   414   003A40  EE00  F079         	lfsr	0,__pdataCOMRAM
   415   003A44  EE10 F005          	lfsr	1,5
   416   003A48                     copy_data2:
   417   003A48  0009               	tblrd		*+
   418   003A4A  CFF5 FFEE          	movff	tablat,postinc0
   419   003A4E  50E5               	movf	postdec1,w,c
   420   003A50  50E1               	movf	fsr1l,w,c
   421   003A52  E1FA               	bnz	copy_data2
   422                           
   423                           ; Clear objects allocated to BANK1 (32 bytes)
   424   003A54  EE01  F000         	lfsr	0,__pbssBANK1
   425   003A58  0E20               	movlw	32
   426   003A5A                     clear_0:
   427   003A5A  6AEE               	clrf	postinc0,c
   428   003A5C  06E8               	decf	wreg,f,c
   429   003A5E  E1FD               	bnz	clear_0
   430                           
   431                           ; Clear objects allocated to BANK0 (94 bytes)
   432   003A60  EE00  F080         	lfsr	0,__pbssBANK0
   433   003A64  0E5E               	movlw	94
   434   003A66                     clear_1:
   435   003A66  6AEE               	clrf	postinc0,c
   436   003A68  06E8               	decf	wreg,f,c
   437   003A6A  E1FD               	bnz	clear_1
   438                           
   439                           ; Clear objects allocated to COMRAM (17 bytes)
   440   003A6C  EE00  F068         	lfsr	0,__pbssCOMRAM
   441   003A70  0E11               	movlw	17
   442   003A72                     clear_2:
   443   003A72  6AEE               	clrf	postinc0,c
   444   003A74  06E8               	decf	wreg,f,c
   445   003A76  E1FD               	bnz	clear_2
   446   003A78                     end_of_initialization:
   447                           	callstack 0
   448   003A78                     __end_of__initialization:
   449                           	callstack 0
   450   003A78  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   451   003A7A  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   452   003A7C  0100               	movlb	0
   453   003A7E  EF51  F013         	goto	_main	;jump to C main() function
   454                           
   455                           	psect	bssCOMRAM
   456   000068                     __pbssCOMRAM:
   457                           	callstack 0
   458   000068                     _degr_cel:
   459                           	callstack 0
   460   000068                     	ds	2
   461   00006A                     _preload_vall:
   462                           	callstack 0
   463   00006A                     	ds	2
   464   00006C                     _preload_value@hal_timer1$F4037:
   465                           	callstack 0
   466   00006C                     	ds	2
   467   00006E                     _preload_value:
   468                           	callstack 0
   469   00006E                     	ds	2
   470   000070                     _fan_mode:
   471                           	callstack 0
   472   000070                     	ds	1
   473   000071                     _preload_val:
   474                           	callstack 0
   475   000071                     	ds	1
   476   000072                     relay_off@F3062:
   477                           	callstack 0
   478   000072                     	ds	1
   479   000073                     relay_on@F3057:
   480                           	callstack 0
   481   000073                     	ds	1
   482   000074                     relay_initalize@F3052:
   483                           	callstack 0
   484   000074                     	ds	1
   485   000075                     led_toggle@F3069:
   486                           	callstack 0
   487   000075                     	ds	1
   488   000076                     led_off@F3064:
   489                           	callstack 0
   490   000076                     	ds	1
   491   000077                     led_on@F3059:
   492                           	callstack 0
   493   000077                     	ds	1
   494   000078                     led_intalize@F3054:
   495                           	callstack 0
   496   000078                     	ds	1
   497                           
   498                           	psect	dataCOMRAM
   499   000079                     __pdataCOMRAM:
   500                           	callstack 0
   501   000079                     spi_master_mode_configuration@F3131:
   502                           	callstack 0
   503   000079                     	ds	1
   504   00007A                     _RB7_Flag:
   505                           	callstack 0
   506   00007A                     	ds	1
   507   00007B                     _RB6_Flag:
   508                           	callstack 0
   509   00007B                     	ds	1
   510   00007C                     _RB5_Flag:
   511                           	callstack 0
   512   00007C                     	ds	1
   513   00007D                     _RB4_Flag:
   514                           	callstack 0
   515   00007D                     	ds	1
   516                           
   517                           	psect	bssBANK0
   518   000080                     __pbssBANK0:
   519                           	callstack 0
   520   000080                     	ds	6
   521   000086                     _width:
   522                           	callstack 0
   523   000086                     	ds	2
   524   000088                     _prec:
   525                           	callstack 0
   526   000088                     	ds	2
   527   00008A                     _TIMER3_INTERRUPT_HANDLERF:
   528                           	callstack 0
   529   00008A                     	ds	2
   530   00008C                     _TMR2_INTERRUPT_HANDLER:
   531                           	callstack 0
   532   00008C                     	ds	2
   533   00008E                     _TIMER1_INTERRUPPT_HANDLERF:
   534                           	callstack 0
   535   00008E                     	ds	2
   536   000090                     _TIMER0_INTERRUPPT:
   537                           	callstack 0
   538   000090                     	ds	2
   539   000092                     _MSSP_SPI_INTERRUPT_HANDLERF:
   540                           	callstack 0
   541   000092                     	ds	2
   542   000094                     _I2C_INTERRUPT_HANDLERF:
   543                           	callstack 0
   544   000094                     	ds	2
   545   000096                     _I2C_Receive_Overflow_IndicatoR_HANDLERF:
   546                           	callstack 0
   547   000096                     	ds	2
   548   000098                     _I2C_Write_Collision_HANDLERF:
   549                           	callstack 0
   550   000098                     	ds	2
   551   00009A                     _RB7_InterruptHandeler_Low:
   552                           	callstack 0
   553   00009A                     	ds	2
   554   00009C                     _RB7_InterruptHandeler_High:
   555                           	callstack 0
   556   00009C                     	ds	2
   557   00009E                     _RB6_InterruptHandeler_Low:
   558                           	callstack 0
   559   00009E                     	ds	2
   560   0000A0                     _RB6_InterruptHandeler_High:
   561                           	callstack 0
   562   0000A0                     	ds	2
   563   0000A2                     _RB5_InterruptHandeler_Low:
   564                           	callstack 0
   565   0000A2                     	ds	2
   566   0000A4                     _RB5_InterruptHandeler_High:
   567                           	callstack 0
   568   0000A4                     	ds	2
   569   0000A6                     _RB4_InterruptHandeler_Low:
   570                           	callstack 0
   571   0000A6                     	ds	2
   572   0000A8                     _RB4_InterruptHandeler_High:
   573                           	callstack 0
   574   0000A8                     	ds	2
   575   0000AA                     _INT2_InterruptHandeler:
   576                           	callstack 0
   577   0000AA                     	ds	2
   578   0000AC                     _INT1_InterruptHandeler:
   579                           	callstack 0
   580   0000AC                     	ds	2
   581   0000AE                     _INT0_InterruptHandeler:
   582                           	callstack 0
   583   0000AE                     	ds	2
   584   0000B0                     _EUSART_OVERRUN_ERROR_INTERRUPT_HANDLERF:
   585                           	callstack 0
   586   0000B0                     	ds	2
   587   0000B2                     _EUSART_FRAMING_ERROR_INTERRUPT_HANDLERF:
   588                           	callstack 0
   589   0000B2                     	ds	2
   590   0000B4                     _EUSART_RX_INTERRUPT_HANDLERF:
   591                           	callstack 0
   592   0000B4                     	ds	2
   593   0000B6                     _EUSART_TX_INTERRUPT_HANDLERF:
   594                           	callstack 0
   595   0000B6                     	ds	2
   596   0000B8                     _CCP2_INTERRUPT_HANDLERF:
   597                           	callstack 0
   598   0000B8                     	ds	2
   599   0000BA                     _CCP1_INTERRUPT_HANDLERF:
   600                           	callstack 0
   601   0000BA                     	ds	2
   602   0000BC                     _ADC_INTERRUPT_HANDLERF:
   603                           	callstack 0
   604   0000BC                     	ds	2
   605   0000BE                     _flags:
   606                           	callstack 0
   607   0000BE                     	ds	1
   608   0000BF                     _ret:
   609                           	callstack 0
   610   0000BF                     	ds	1
   611   0000C0                     _tmr1_counter:
   612                           	callstack 0
   613   0000C0                     	ds	1
   614   0000C1                     _ccp_obj:
   615                           	callstack 0
   616   0000C1                     	ds	15
   617   0000D0                     _str:
   618                           	callstack 0
   619   0000D0                     	ds	6
   620   0000D6                     _tm2:
   621                           	callstack 0
   622   0000D6                     	ds	6
   623   0000DC                     _sens_res:
   624                           	callstack 0
   625   0000DC                     	ds	2
   626                           
   627                           	psect	dataBANK0
   628   0000DE                     __pdataBANK0:
   629                           	callstack 0
   630   0000DE                     _lat_registers:
   631                           	callstack 0
   632   0000DE                     	ds	10
   633   0000E8                     _tris_registers:
   634                           	callstack 0
   635   0000E8                     	ds	10
   636   0000F2                     spi_slave_mode_configuration@F3145:
   637                           	callstack 0
   638   0000F2                     	ds	1
   639   0000F3                     spi_slave_mode_configuration@F3143:
   640                           	callstack 0
   641   0000F3                     	ds	1
   642   0000F4                     spi_slave_mode_configuration@F3141:
   643                           	callstack 0
   644   0000F4                     	ds	1
   645   0000F5                     spi_slave_mode_configuration@F3139:
   646                           	callstack 0
   647   0000F5                     	ds	1
   648   0000F6                     spi_master_mode_configuration@F3135:
   649                           	callstack 0
   650   0000F6                     	ds	1
   651   0000F7                     spi_master_mode_configuration@F3133:
   652                           	callstack 0
   653   0000F7                     	ds	1
   654   0000F8                     _lcd_1:
   655                           	callstack 0
   656   0000F8                     	ds	6
   657   0000FE                     _motor_1:
   658                           	callstack 0
   659   0000FE                     	ds	2
   660                           
   661                           	psect	bssBANK1
   662   000100                     __pbssBANK1:
   663                           	callstack 0
   664   000100                     _dbuf:
   665                           	callstack 0
   666   000100                     	ds	32
   667                           
   668                           	psect	dataBANK1
   669   000120                     __pdataBANK1:
   670                           	callstack 0
   671   000120                     _port_registers:
   672                           	callstack 0
   673   000120                     	ds	10
   674   00012A                     _temp_sens:
   675                           	callstack 0
   676   00012A                     	ds	7
   677                           
   678                           	psect	cstackBANK1
   679   000131                     __pcstackBANK1:
   680                           	callstack 0
   681   000131                     
   682                           ; 1 bytes @ 0x0
   683   000131                     	ds	1
   684                           
   685                           	psect	cstackCOMRAM
   686   000001                     __pcstackCOMRAM:
   687                           	callstack 0
   688   000001                     RB4_ISR@RB4_source:
   689                           	callstack 0
   690   000001                     RB5_ISR@RB5_source:
   691                           	callstack 0
   692   000001                     RB6_ISR@RB6_source:
   693                           	callstack 0
   694   000001                     RB7_ISR@RB7_source:
   695                           	callstack 0
   696   000001                     
   697                           ; 1 bytes @ 0x0
   698   000001                     	ds	1
   699   000002                     ??_adc_configure_pin:
   700   000002                     ?___awdiv:
   701                           	callstack 0
   702   000002                     ?___awmod:
   703                           	callstack 0
   704   000002                     ?___xxtofl:
   705                           	callstack 0
   706   000002                     START_PWM@_ccp:
   707                           	callstack 0
   708   000002                     ccp_interrupt@_ccp:
   709                           	callstack 0
   710   000002                     selected_timer@_ccp:
   711                           	callstack 0
   712   000002                     gpio_pin_direction_intialize@__pin_t:
   713                           	callstack 0
   714   000002                     gpio_pin_write_logic@_pin_t:
   715                           	callstack 0
   716   000002                     TMR2_Init@TMR:
   717                           	callstack 0
   718   000002                     memset@dest:
   719                           	callstack 0
   720   000002                     Adc_start_conversion@adc_obj:
   721                           	callstack 0
   722   000002                     Adc_Get_conversion_result@adc_obj:
   723                           	callstack 0
   724   000002                     ___awdiv@dividend:
   725                           	callstack 0
   726   000002                     ___awmod@dividend:
   727                           	callstack 0
   728   000002                     fputc@c:
   729                           	callstack 0
   730   000002                     adc_select_format@adc_obj:
   731                           	callstack 0
   732   000002                     adc_select_Voltage@adc_obj:
   733                           	callstack 0
   734   000002                     ___xxtofl@val:
   735                           	callstack 0
   736                           
   737                           ; 4 bytes @ 0x1
   738   000002                     	ds	1
   739   000003                     ??_gpio_pin_direction_intialize:
   740   000003                     ??_TMR2_Init:
   741   000003                     gpio_pin_write_logic@logic:
   742                           	callstack 0
   743   000003                     memset@c:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x2
   747   000003                     	ds	1
   748   000004                     ??_gpio_pin_write_logic:
   749   000004                     Adc_start_conversion@ret:
   750                           	callstack 0
   751   000004                     Adc_Get_conversion_result@conversion_result:
   752                           	callstack 0
   753   000004                     adc_configure_pin@adc_obj:
   754                           	callstack 0
   755   000004                     fputc@fp:
   756                           	callstack 0
   757   000004                     ___awdiv@divisor:
   758                           	callstack 0
   759   000004                     ___awmod@divisor:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x3
   763   000004                     	ds	1
   764   000005                     ??_fputc:
   765   000005                     ??_Adc_Get_conversion_result:
   766   000005                     ADC_INIT@adc_obj:
   767                           	callstack 0
   768   000005                     Adc_select_Channel@adc_obj:
   769                           	callstack 0
   770   000005                     memset@n:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x4
   774   000005                     	ds	1
   775   000006                     ??___xxtofl:
   776   000006                     ___awdiv@counter:
   777                           	callstack 0
   778   000006                     ___awmod@counter:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x5
   782   000006                     	ds	1
   783   000007                     ??_ADC_INIT:
   784   000007                     Adc_select_Channel@channal:
   785                           	callstack 0
   786   000007                     ___awdiv@sign:
   787                           	callstack 0
   788   000007                     ___awmod@sign:
   789                           	callstack 0
   790   000007                     memset@p:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0x6
   794   000007                     	ds	1
   795   000008                     ??_Adc_select_Channel:
   796   000008                     ?_abs:
   797                           	callstack 0
   798   000008                     Adc_Get_conversion_result@ret:
   799                           	callstack 0
   800   000008                     gpio_pin_direction_intialize@ret:
   801                           	callstack 0
   802   000008                     ___awdiv@quotient:
   803                           	callstack 0
   804   000008                     abs@a:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x7
   808   000008                     	ds	1
   809   000009                     Adc_select_Channel@ret:
   810                           	callstack 0
   811   000009                     gpio_pin_write_logic@ret:
   812                           	callstack 0
   813                           
   814                           ; 1 bytes @ 0x8
   815   000009                     	ds	1
   816   00000A                     ??_abs:
   817   00000A                     lcd_send_4bit_command_data@lcd:
   818                           	callstack 0
   819   00000A                     lcd_send_4bit_enable@lcd:
   820                           	callstack 0
   821   00000A                     motor_move_left@motor:
   822                           	callstack 0
   823   00000A                     motor_stop@motor:
   824                           	callstack 0
   825   00000A                     ADC_INIT@ret:
   826                           	callstack 0
   827   00000A                     gpio_pin_intialize@_pin_t:
   828                           	callstack 0
   829   00000A                     ___xxtofl@sign:
   830                           	callstack 0
   831   00000A                     ADC_GetConversion_Blocking@adc_obj:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x9
   835   00000A                     	ds	1
   836   00000B                     ??_gpio_pin_intialize:
   837   00000B                     lcd_send_4bit_command_data@data:
   838                           	callstack 0
   839   00000B                     lcd_send_4bit_enable@ret:
   840                           	callstack 0
   841   00000B                     motor_move_left@ret:
   842                           	callstack 0
   843   00000B                     motor_stop@ret:
   844                           	callstack 0
   845   00000B                     ___xxtofl@exp:
   846                           	callstack 0
   847                           
   848                           ; 1 bytes @ 0xA
   849   00000B                     	ds	1
   850   00000C                     lcd_send_4bit_command_data@ret:
   851                           	callstack 0
   852   00000C                     ADC_GetConversion_Blocking@channel:
   853                           	callstack 0
   854   00000C                     gpio_pin_intialize@ret:
   855                           	callstack 0
   856   00000C                     vfpfcnvrt@fp:
   857                           	callstack 0
   858   00000C                     ___xxtofl@arg:
   859                           	callstack 0
   860                           
   861                           ; 4 bytes @ 0xB
   862   00000C                     	ds	1
   863   00000D                     lcd_4bit_send_command@lcd:
   864                           	callstack 0
   865   00000D                     lcd_4bit_send_data_char@lcd:
   866                           	callstack 0
   867   00000D                     motor_initialize@motor:
   868                           	callstack 0
   869   00000D                     ADC_GetConversion_Blocking@conversion_result:
   870                           	callstack 0
   871   00000D                     vfpfcnvrt@fmt:
   872                           	callstack 0
   873                           
   874                           ; 1 bytes @ 0xC
   875   00000D                     	ds	1
   876   00000E                     lcd_4bit_send_command@command:
   877                           	callstack 0
   878   00000E                     lcd_4bit_send_data_char@data:
   879                           	callstack 0
   880   00000E                     motor_initialize@ret:
   881                           	callstack 0
   882   00000E                     ADC_GetConversion_Blocking@ret:
   883                           	callstack 0
   884   00000E                     vfpfcnvrt@ap:
   885                           	callstack 0
   886                           
   887                           ; 1 bytes @ 0xD
   888   00000E                     	ds	1
   889   00000F                     ??_vfpfcnvrt:
   890   00000F                     lcd_4bit_send_command@ret:
   891                           	callstack 0
   892   00000F                     lcd_4bit_send_data_char@ret:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0xE
   896   00000F                     	ds	1
   897   000010                     ?___flmul:
   898                           	callstack 0
   899   000010                     lcd_4bit_initialize@lcd:
   900                           	callstack 0
   901   000010                     lcd_set_cursor_4bit@lcd:
   902                           	callstack 0
   903   000010                     vfpfcnvrt@done:
   904                           	callstack 0
   905   000010                     ___flmul@b:
   906                           	callstack 0
   907                           
   908                           ; 4 bytes @ 0xF
   909   000010                     	ds	1
   910   000011                     ??_lcd_4bit_initialize:
   911   000011                     lcd_set_cursor_4bit@row:
   912                           	callstack 0
   913   000011                     vfpfcnvrt@cp:
   914                           	callstack 0
   915                           
   916                           ; 1 bytes @ 0x10
   917   000011                     	ds	1
   918   000012                     lcd_4bit_initialize@l_counter:
   919                           	callstack 0
   920   000012                     lcd_set_cursor_4bit@column:
   921                           	callstack 0
   922   000012                     vfpfcnvrt@convarg:
   923                           	callstack 0
   924                           
   925                           ; 4 bytes @ 0x11
   926   000012                     	ds	1
   927   000013                     ??_lcd_set_cursor_4bit:
   928   000013                     lcd_4bit_initialize@ret:
   929                           	callstack 0
   930                           
   931                           ; 1 bytes @ 0x12
   932   000013                     	ds	1
   933   000014                     app_initialize@ret:
   934                           	callstack 0
   935   000014                     ___flmul@a:
   936                           	callstack 0
   937                           
   938                           ; 4 bytes @ 0x13
   939   000014                     	ds	1
   940   000015                     lcd_set_cursor_4bit@ret:
   941                           	callstack 0
   942                           
   943                           ; 1 bytes @ 0x14
   944   000015                     	ds	1
   945   000016                     lcd_4bit_send_data_char_posit@lcd:
   946                           	callstack 0
   947   000016                     lcd_4bit_send_data_string_posit@lcd:
   948                           	callstack 0
   949   000016                     vfpfcnvrt@c:
   950                           	callstack 0
   951                           
   952                           ; 1 bytes @ 0x15
   953   000016                     	ds	1
   954   000017                     ?_vfprintf:
   955                           	callstack 0
   956   000017                     lcd_4bit_send_data_char_posit@row:
   957                           	callstack 0
   958   000017                     lcd_4bit_send_data_string_posit@row:
   959                           	callstack 0
   960   000017                     vfprintf@fp:
   961                           	callstack 0
   962                           
   963                           ; 1 bytes @ 0x16
   964   000017                     	ds	1
   965   000018                     ??___flmul:
   966   000018                     lcd_4bit_send_data_char_posit@colunm:
   967                           	callstack 0
   968   000018                     lcd_4bit_send_data_string_posit@colunm:
   969                           	callstack 0
   970   000018                     vfprintf@fmt:
   971                           	callstack 0
   972                           
   973                           ; 1 bytes @ 0x17
   974   000018                     	ds	1
   975   000019                     lcd_4bit_send_data_char_posit@data:
   976                           	callstack 0
   977   000019                     vfprintf@ap:
   978                           	callstack 0
   979   000019                     lcd_4bit_send_data_string_posit@data:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x18
   983   000019                     	ds	1
   984   00001A                     lcd_4bit_send_data_char_posit@ret:
   985                           	callstack 0
   986   00001A                     vfprintf@cfmt:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x19
   990   00001A                     	ds	1
   991   00001B                     ?_sprintf:
   992                           	callstack 0
   993   00001B                     lcd_4bit_send_data_string_posit@ret:
   994                           	callstack 0
   995   00001B                     sprintf@s:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x1A
   999   00001B                     	ds	1
  1000   00001C                     ___flmul@sign:
  1001                           	callstack 0
  1002   00001C                     sprintf@fmt:
  1003                           	callstack 0
  1004                           
  1005                           ; 1 bytes @ 0x1B
  1006   00001C                     	ds	1
  1007   00001D                     ___flmul@grs:
  1008                           	callstack 0
  1009                           
  1010                           ; 4 bytes @ 0x1C
  1011   00001D                     	ds	2
  1012   00001F                     sprintf@ap:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x1E
  1016   00001F                     	ds	1
  1017   000020                     sprintf@f:
  1018                           	callstack 0
  1019                           
  1020                           ; 12 bytes @ 0x1F
  1021   000020                     	ds	1
  1022   000021                     ___flmul@aexp:
  1023                           	callstack 0
  1024                           
  1025                           ; 1 bytes @ 0x20
  1026   000021                     	ds	1
  1027   000022                     ___flmul@bexp:
  1028                           	callstack 0
  1029                           
  1030                           ; 1 bytes @ 0x21
  1031   000022                     	ds	1
  1032   000023                     ___flmul@prod:
  1033                           	callstack 0
  1034                           
  1035                           ; 4 bytes @ 0x22
  1036   000023                     	ds	4
  1037   000027                     ___flmul@temp:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x26
  1041   000027                     	ds	2
  1042   000029                     ?___fldiv:
  1043                           	callstack 0
  1044   000029                     ___fldiv@b:
  1045                           	callstack 0
  1046                           
  1047                           ; 4 bytes @ 0x28
  1048   000029                     	ds	3
  1049   00002C                     convert_uint16_to_string@num:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x2B
  1053   00002C                     	ds	1
  1054   00002D                     ___fldiv@a:
  1055                           	callstack 0
  1056                           
  1057                           ; 4 bytes @ 0x2C
  1058   00002D                     	ds	1
  1059   00002E                     convert_uint16_to_string@str:
  1060                           	callstack 0
  1061                           
  1062                           ; 1 bytes @ 0x2D
  1063   00002E                     	ds	1
  1064   00002F                     convert_uint16_to_string@temp:
  1065                           	callstack 0
  1066                           
  1067                           ; 6 bytes @ 0x2E
  1068   00002F                     	ds	2
  1069   000031                     ??___fldiv:
  1070                           
  1071                           ; 1 bytes @ 0x30
  1072   000031                     	ds	4
  1073   000035                     convert_uint16_to_string@ret:
  1074                           	callstack 0
  1075   000035                     ___fldiv@rem:
  1076                           	callstack 0
  1077                           
  1078                           ; 4 bytes @ 0x34
  1079   000035                     	ds	1
  1080   000036                     convert_uint16_to_string@counter:
  1081                           	callstack 0
  1082                           
  1083                           ; 1 bytes @ 0x35
  1084   000036                     	ds	3
  1085   000039                     ___fldiv@sign:
  1086                           	callstack 0
  1087                           
  1088                           ; 1 bytes @ 0x38
  1089   000039                     	ds	1
  1090   00003A                     ___fldiv@new_exp:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x39
  1094   00003A                     	ds	2
  1095   00003C                     ___fldiv@grs:
  1096                           	callstack 0
  1097                           
  1098                           ; 4 bytes @ 0x3B
  1099   00003C                     	ds	4
  1100   000040                     ___fldiv@bexp:
  1101                           	callstack 0
  1102                           
  1103                           ; 1 bytes @ 0x3F
  1104   000040                     	ds	1
  1105   000041                     ___fldiv@aexp:
  1106                           	callstack 0
  1107                           
  1108                           ; 1 bytes @ 0x40
  1109   000041                     	ds	1
  1110   000042                     ?___fladd:
  1111                           	callstack 0
  1112   000042                     ___fladd@b:
  1113                           	callstack 0
  1114                           
  1115                           ; 4 bytes @ 0x41
  1116   000042                     	ds	4
  1117   000046                     ___fladd@a:
  1118                           	callstack 0
  1119                           
  1120                           ; 4 bytes @ 0x45
  1121   000046                     	ds	4
  1122   00004A                     ??___fladd:
  1123                           
  1124                           ; 1 bytes @ 0x49
  1125   00004A                     	ds	4
  1126   00004E                     ___fladd@signs:
  1127                           	callstack 0
  1128                           
  1129                           ; 1 bytes @ 0x4D
  1130   00004E                     	ds	1
  1131   00004F                     ___fladd@aexp:
  1132                           	callstack 0
  1133                           
  1134                           ; 1 bytes @ 0x4E
  1135   00004F                     	ds	1
  1136   000050                     ___fladd@bexp:
  1137                           	callstack 0
  1138                           
  1139                           ; 1 bytes @ 0x4F
  1140   000050                     	ds	1
  1141   000051                     ___fladd@grs:
  1142                           	callstack 0
  1143                           
  1144                           ; 1 bytes @ 0x50
  1145   000051                     	ds	1
  1146   000052                     ?___fltol:
  1147                           	callstack 0
  1148   000052                     ___fltol@f1:
  1149                           	callstack 0
  1150                           
  1151                           ; 4 bytes @ 0x51
  1152   000052                     	ds	4
  1153   000056                     ??___fltol:
  1154                           
  1155                           ; 1 bytes @ 0x55
  1156   000056                     	ds	4
  1157   00005A                     ___fltol@sign1:
  1158                           	callstack 0
  1159                           
  1160                           ; 1 bytes @ 0x59
  1161   00005A                     	ds	1
  1162   00005B                     ___fltol@exp1:
  1163                           	callstack 0
  1164                           
  1165                           ; 1 bytes @ 0x5A
  1166   00005B                     	ds	1
  1167   00005C                     PWM_set_Duty@_ccp:
  1168                           	callstack 0
  1169   00005C                     configure_mode@_ccp:
  1170                           	callstack 0
  1171                           
  1172                           ; 1 bytes @ 0x5B
  1173   00005C                     	ds	1
  1174   00005D                     ??_configure_mode:
  1175   00005D                     ??_PWM_set_Duty:
  1176                           
  1177                           ; 1 bytes @ 0x5C
  1178   00005D                     	ds	2
  1179   00005F                     PWM_set_Duty@duty:
  1180                           	callstack 0
  1181   00005F                     _configure_mode$5774:
  1182                           	callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x5E
  1185   00005F                     	ds	1
  1186   000060                     _PWM_set_Duty$5773:
  1187                           	callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x5F
  1190   000060                     	ds	3
  1191   000063                     _configure_mode$5775:
  1192                           	callstack 0
  1193                           
  1194                           ; 4 bytes @ 0x62
  1195   000063                     	ds	1
  1196   000064                     PWM_set_Duty@set_duty_valu:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x63
  1200   000064                     	ds	3
  1201   000067                     CCP_INIt@_ccp:
  1202                           	callstack 0
  1203                           
  1204                           ; 1 bytes @ 0x66
  1205   000067                     	ds	1
  1206   000068                     
  1207                           ; 1 bytes @ 0x67
  1208 ;;
  1209 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1210 ;;
  1211 ;; *************** function _main *****************
  1212 ;; Defined at:
  1213 ;;		line 87 in file "application.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;		None
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;		None
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  2  1778[None  ] int 
  1220 ;; Registers used:
  1221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;Total ram usage:        0 bytes
  1232 ;; Hardware stack levels required when called: 8
  1233 ;; This function calls:
  1234 ;;		_ADC_GetConversion_Blocking
  1235 ;;		_Adc_start_conversion
  1236 ;;		_PWM_set_Duty
  1237 ;;		_TMR_INIT
  1238 ;;		___fldiv
  1239 ;;		___flmul
  1240 ;;		___fltol
  1241 ;;		___xxtofl
  1242 ;;		_app_initialize
  1243 ;;		_ccp_init
  1244 ;;		_convert_uint16_to_string
  1245 ;;		_lcd_4bit_send_data_char_posit
  1246 ;;		_lcd_4bit_send_data_string_posit
  1247 ;;		_motor_move_left
  1248 ;;		_motor_stop
  1249 ;; This function is called by:
  1250 ;;		Startup code after reset
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text0
  1255   0026A2                     __ptext0:
  1256                           	callstack 0
  1257   0026A2                     _main:
  1258                           	callstack 23
  1259   0026A2                     
  1260                           ;application.c: 88:     TMR_INIT();
  1261   0026A2  EC1A  F021         	call	_TMR_INIT	;wreg free
  1262   0026A6                     
  1263                           ;application.c: 89:     ccp_init();
  1264   0026A6  ECA8  F01F         	call	_ccp_init	;wreg free
  1265   0026AA                     
  1266                           ;application.c: 90:      app_initialize();
  1267   0026AA  ECE3  F020         	call	_app_initialize	;wreg free
  1268   0026AE                     
  1269                           ;application.c: 91:     ret|= Adc_start_conversion(&temp_sens);
  1270   0026AE  0E2A               	movlw	low _temp_sens
  1271   0026B0  6E02               	movwf	Adc_start_conversion@adc_obj^0,c
  1272   0026B2  0E01               	movlw	high _temp_sens
  1273   0026B4  6E03               	movwf	(Adc_start_conversion@adc_obj+1)^0,c
  1274   0026B6  ECF7  F020         	call	_Adc_start_conversion	;wreg free
  1275   0026BA  0100               	movlb	0	; () banked
  1276   0026BC  13BF               	iorwf	_ret& (0+255),f,b
  1277   0026BE                     l9406:
  1278                           
  1279                           ; BSR set to: 0
  1280                           ;application.c: 94:        ret|= ADC_GetConversion_Blocking(&temp_sens ,AN0_CHANNEL, &se
      +                          ns_res);
  1281   0026BE  0E2A               	movlw	low _temp_sens
  1282   0026C0  6E0A               	movwf	ADC_GetConversion_Blocking@adc_obj^0,c
  1283   0026C2  0E01               	movlw	high _temp_sens
  1284   0026C4  6E0B               	movwf	(ADC_GetConversion_Blocking@adc_obj+1)^0,c
  1285   0026C6  0E00               	movlw	0
  1286   0026C8  6E0C               	movwf	ADC_GetConversion_Blocking@channel^0,c
  1287   0026CA  0EDC               	movlw	low _sens_res
  1288   0026CC  6E0D               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
  1289   0026CE  ECF4  F01D         	call	_ADC_GetConversion_Blocking	;wreg free
  1290   0026D2  0100               	movlb	0	; () banked
  1291   0026D4  13BF               	iorwf	_ret& (0+255),f,b
  1292   0026D6                     
  1293                           ; BSR set to: 0
  1294                           ;application.c: 95:        degr_cel = (sens_res * 4.88f) ;
  1295   0026D6  0EF6               	movlw	246
  1296   0026D8  6E14               	movwf	___flmul@a^0,c
  1297   0026DA  0E28               	movlw	40
  1298   0026DC  6E15               	movwf	(___flmul@a+1)^0,c
  1299   0026DE  0E9C               	movlw	156
  1300   0026E0  6E16               	movwf	(___flmul@a+2)^0,c
  1301   0026E2  0E40               	movlw	64
  1302   0026E4  6E17               	movwf	(___flmul@a+3)^0,c
  1303   0026E6  C0DC  F002         	movff	_sens_res,___xxtofl@val
  1304   0026EA  C0DD  F003         	movff	_sens_res+1,___xxtofl@val+1
  1305   0026EE  6A04               	clrf	(___xxtofl@val+2)^0,c
  1306   0026F0  6A05               	clrf	(___xxtofl@val+3)^0,c
  1307   0026F2  0E00               	movlw	0
  1308   0026F4  ECC7  F016         	call	___xxtofl
  1309   0026F8  C002  F010         	movff	?___xxtofl,___flmul@b
  1310   0026FC  C003  F011         	movff	?___xxtofl+1,___flmul@b+1
  1311   002700  C004  F012         	movff	?___xxtofl+2,___flmul@b+2
  1312   002704  C005  F013         	movff	?___xxtofl+3,___flmul@b+3
  1313   002708  EC6C  F00D         	call	___flmul	;wreg free
  1314   00270C  C010  F052         	movff	?___flmul,___fltol@f1
  1315   002710  C011  F053         	movff	?___flmul+1,___fltol@f1+1
  1316   002714  C012  F054         	movff	?___flmul+2,___fltol@f1+2
  1317   002718  C013  F055         	movff	?___flmul+3,___fltol@f1+3
  1318   00271C  EC44  F019         	call	___fltol	;wreg free
  1319   002720  C052  F068         	movff	?___fltol,_degr_cel
  1320   002724  C053  F069         	movff	?___fltol+1,_degr_cel+1
  1321   002728                     
  1322                           ;application.c: 96:        degr_cel/=10.0;
  1323   002728  0E00               	movlw	0
  1324   00272A  6E2D               	movwf	___fldiv@a^0,c
  1325   00272C  0E00               	movlw	0
  1326   00272E  6E2E               	movwf	(___fldiv@a+1)^0,c
  1327   002730  0E20               	movlw	32
  1328   002732  6E2F               	movwf	(___fldiv@a+2)^0,c
  1329   002734  0E41               	movlw	65
  1330   002736  6E30               	movwf	(___fldiv@a+3)^0,c
  1331   002738  C068  F002         	movff	_degr_cel,___xxtofl@val
  1332   00273C  C069  F003         	movff	_degr_cel+1,___xxtofl@val+1
  1333   002740  6A04               	clrf	(___xxtofl@val+2)^0,c
  1334   002742  6A05               	clrf	(___xxtofl@val+3)^0,c
  1335   002744  0E00               	movlw	0
  1336   002746  ECC7  F016         	call	___xxtofl
  1337   00274A  C002  F029         	movff	?___xxtofl,___fldiv@b
  1338   00274E  C003  F02A         	movff	?___xxtofl+1,___fldiv@b+1
  1339   002752  C004  F02B         	movff	?___xxtofl+2,___fldiv@b+2
  1340   002756  C005  F02C         	movff	?___xxtofl+3,___fldiv@b+3
  1341   00275A  EC84  F011         	call	___fldiv	;wreg free
  1342   00275E  C029  F052         	movff	?___fldiv,___fltol@f1
  1343   002762  C02A  F053         	movff	?___fldiv+1,___fltol@f1+1
  1344   002766  C02B  F054         	movff	?___fldiv+2,___fltol@f1+2
  1345   00276A  C02C  F055         	movff	?___fldiv+3,___fltol@f1+3
  1346   00276E  EC44  F019         	call	___fltol	;wreg free
  1347   002772  C052  F068         	movff	?___fltol,_degr_cel
  1348   002776  C053  F069         	movff	?___fltol+1,_degr_cel+1
  1349   00277A                     
  1350                           ;application.c: 97:        ret|= lcd_4bit_send_data_string_posit(&lcd_1 , 1 , 1 , "temp 
      +                          =");
  1351   00277A  0EF8               	movlw	low _lcd_1
  1352   00277C  6E16               	movwf	lcd_4bit_send_data_string_posit@lcd^0,c
  1353   00277E  0E01               	movlw	1
  1354   002780  6E17               	movwf	lcd_4bit_send_data_string_posit@row^0,c
  1355   002782  0E01               	movlw	1
  1356   002784  6E18               	movwf	lcd_4bit_send_data_string_posit@colunm^0,c
  1357   002786  0E27               	movlw	low STR_4
  1358   002788  6E19               	movwf	lcd_4bit_send_data_string_posit@data^0,c
  1359   00278A  5019               	movf	lcd_4bit_send_data_string_posit@data^0,w,c
  1360   00278C  A4D8               	btfss	status,2,c
  1361   00278E  0E10               	movlw	high __smallconst
  1362   002790  6E1A               	movwf	(lcd_4bit_send_data_string_posit@data+1)^0,c
  1363   002792  ECAF  F01C         	call	_lcd_4bit_send_data_string_posit	;wreg free
  1364   002796  0100               	movlb	0	; () banked
  1365   002798  13BF               	iorwf	_ret& (0+255),f,b
  1366   00279A                     
  1367                           ; BSR set to: 0
  1368                           ;application.c: 98:         ret|=convert_uint16_to_string(degr_cel ,str );
  1369   00279A  C068  F02C         	movff	_degr_cel,convert_uint16_to_string@num
  1370   00279E  C069  F02D         	movff	_degr_cel+1,convert_uint16_to_string@num+1
  1371   0027A2  0ED0               	movlw	low _str
  1372   0027A4  6E2E               	movwf	convert_uint16_to_string@str^0,c
  1373   0027A6  EC62  F01C         	call	_convert_uint16_to_string	;wreg free
  1374   0027AA  0100               	movlb	0	; () banked
  1375   0027AC  13BF               	iorwf	_ret& (0+255),f,b
  1376   0027AE                     
  1377                           ; BSR set to: 0
  1378                           ;application.c: 99:         ret|=lcd_4bit_send_data_string_posit(&lcd_1 , 1 , 8 , str);
  1379   0027AE  0EF8               	movlw	low _lcd_1
  1380   0027B0  6E16               	movwf	lcd_4bit_send_data_string_posit@lcd^0,c
  1381   0027B2  0E01               	movlw	1
  1382   0027B4  6E17               	movwf	lcd_4bit_send_data_string_posit@row^0,c
  1383   0027B6  0E08               	movlw	8
  1384   0027B8  6E18               	movwf	lcd_4bit_send_data_string_posit@colunm^0,c
  1385   0027BA  0ED0               	movlw	low _str
  1386   0027BC  6E19               	movwf	lcd_4bit_send_data_string_posit@data^0,c
  1387   0027BE  6A1A               	clrf	(lcd_4bit_send_data_string_posit@data+1)^0,c
  1388   0027C0  ECAF  F01C         	call	_lcd_4bit_send_data_string_posit	;wreg free
  1389   0027C4  0100               	movlb	0	; () banked
  1390   0027C6  13BF               	iorwf	_ret& (0+255),f,b
  1391   0027C8                     
  1392                           ; BSR set to: 0
  1393                           ;application.c: 101:        ret|= lcd_4bit_send_data_string_posit(&lcd_1 , 2 , 2, "st sp
      +                          eed mode");
  1394   0027C8  0EF8               	movlw	low _lcd_1
  1395   0027CA  6E16               	movwf	lcd_4bit_send_data_string_posit@lcd^0,c
  1396   0027CC  0E02               	movlw	2
  1397   0027CE  6E17               	movwf	lcd_4bit_send_data_string_posit@row^0,c
  1398   0027D0  0E02               	movlw	2
  1399   0027D2  6E18               	movwf	lcd_4bit_send_data_string_posit@colunm^0,c
  1400   0027D4  0E11               	movlw	low STR_6
  1401   0027D6  6E19               	movwf	lcd_4bit_send_data_string_posit@data^0,c
  1402   0027D8  5019               	movf	lcd_4bit_send_data_string_posit@data^0,w,c
  1403   0027DA  A4D8               	btfss	status,2,c
  1404   0027DC  0E10               	movlw	high __smallconst
  1405   0027DE  6E1A               	movwf	(lcd_4bit_send_data_string_posit@data+1)^0,c
  1406   0027E0  ECAF  F01C         	call	_lcd_4bit_send_data_string_posit	;wreg free
  1407   0027E4  0100               	movlb	0	; () banked
  1408   0027E6  13BF               	iorwf	_ret& (0+255),f,b
  1409   0027E8                     
  1410                           ; BSR set to: 0
  1411                           ;application.c: 102:         if(degr_cel > 80){
  1412   0027E8  5069               	movf	(_degr_cel+1)^0,w,c
  1413   0027EA  E109               	bnz	u9320
  1414   0027EC  0E51               	movlw	81
  1415   0027EE  5C68               	subwf	_degr_cel^0,w,c
  1416   0027F0  A0D8               	btfss	status,0,c
  1417   0027F2  EFFD  F013         	goto	u9321
  1418   0027F6  EFFF  F013         	goto	u9320
  1419   0027FA                     u9321:
  1420   0027FA  EF10  F014         	goto	l9426
  1421   0027FE                     u9320:
  1422   0027FE                     
  1423                           ; BSR set to: 0
  1424                           ;application.c: 103:             ret|=PWM_set_Duty(100, &ccp_obj);
  1425   0027FE  0EC1               	movlw	low _ccp_obj
  1426   002800  6E5C               	movwf	PWM_set_Duty@_ccp^0,c
  1427   002802  0E64               	movlw	100
  1428   002804  ECC3  F014         	call	_PWM_set_Duty
  1429   002808  0100               	movlb	0	; () banked
  1430   00280A  13BF               	iorwf	_ret& (0+255),f,b
  1431                           
  1432                           ;application.c: 104:            ret|= motor_move_left(&motor_1);
  1433   00280C  0EFE               	movlw	low _motor_1
  1434   00280E  6E0A               	movwf	motor_move_left@motor^0,c
  1435   002810  EC63  F020         	call	_motor_move_left	;wreg free
  1436   002814  0100               	movlb	0	; () banked
  1437   002816  13BF               	iorwf	_ret& (0+255),f,b
  1438   002818                     
  1439                           ; BSR set to: 0
  1440                           ;application.c: 105:             fan_mode ='4';
  1441   002818  0E34               	movlw	52
  1442   00281A  6E70               	movwf	_fan_mode^0,c
  1443                           
  1444                           ;application.c: 107:         }else if(degr_cel >= 50 && degr_cel < 80){
  1445   00281C  EF89  F014         	goto	l9452
  1446   002820                     l9426:
  1447                           
  1448                           ; BSR set to: 0
  1449   002820  5069               	movf	(_degr_cel+1)^0,w,c
  1450   002822  E109               	bnz	u9330
  1451   002824  0E32               	movlw	50
  1452   002826  5C68               	subwf	_degr_cel^0,w,c
  1453   002828  A0D8               	btfss	status,0,c
  1454   00282A  EF19  F014         	goto	u9331
  1455   00282E  EF1B  F014         	goto	u9330
  1456   002832                     u9331:
  1457   002832  EF37  F014         	goto	l9434
  1458   002836                     u9330:
  1459   002836                     
  1460                           ; BSR set to: 0
  1461   002836  5069               	movf	(_degr_cel+1)^0,w,c
  1462   002838  E107               	bnz	u9341
  1463   00283A  0E50               	movlw	80
  1464   00283C  5C68               	subwf	_degr_cel^0,w,c
  1465   00283E  B0D8               	btfsc	status,0,c
  1466   002840  EF24  F014         	goto	u9341
  1467   002844  EF26  F014         	goto	u9340
  1468   002848                     u9341:
  1469   002848  EF37  F014         	goto	l9434
  1470   00284C                     u9340:
  1471   00284C                     
  1472                           ; BSR set to: 0
  1473                           ;application.c: 108:           ret|= PWM_set_Duty(80, &ccp_obj);
  1474   00284C  0EC1               	movlw	low _ccp_obj
  1475   00284E  6E5C               	movwf	PWM_set_Duty@_ccp^0,c
  1476   002850  0E50               	movlw	80
  1477   002852  ECC3  F014         	call	_PWM_set_Duty
  1478   002856  0100               	movlb	0	; () banked
  1479   002858  13BF               	iorwf	_ret& (0+255),f,b
  1480                           
  1481                           ;application.c: 109:            ret|= motor_move_left(&motor_1);
  1482   00285A  0EFE               	movlw	low _motor_1
  1483   00285C  6E0A               	movwf	motor_move_left@motor^0,c
  1484   00285E  EC63  F020         	call	_motor_move_left	;wreg free
  1485   002862  0100               	movlb	0	; () banked
  1486   002864  13BF               	iorwf	_ret& (0+255),f,b
  1487   002866                     
  1488                           ; BSR set to: 0
  1489                           ;application.c: 110:           fan_mode ='3';
  1490   002866  0E33               	movlw	51
  1491   002868  6E70               	movwf	_fan_mode^0,c
  1492                           
  1493                           ;application.c: 112:         }else if(degr_cel >= 30 && degr_cel <50){
  1494   00286A  EF89  F014         	goto	l9452
  1495   00286E                     l9434:
  1496                           
  1497                           ; BSR set to: 0
  1498   00286E  5069               	movf	(_degr_cel+1)^0,w,c
  1499   002870  E109               	bnz	u9350
  1500   002872  0E1E               	movlw	30
  1501   002874  5C68               	subwf	_degr_cel^0,w,c
  1502   002876  A0D8               	btfss	status,0,c
  1503   002878  EF40  F014         	goto	u9351
  1504   00287C  EF42  F014         	goto	u9350
  1505   002880                     u9351:
  1506   002880  EF5E  F014         	goto	l9442
  1507   002884                     u9350:
  1508   002884                     
  1509                           ; BSR set to: 0
  1510   002884  5069               	movf	(_degr_cel+1)^0,w,c
  1511   002886  E107               	bnz	u9361
  1512   002888  0E32               	movlw	50
  1513   00288A  5C68               	subwf	_degr_cel^0,w,c
  1514   00288C  B0D8               	btfsc	status,0,c
  1515   00288E  EF4B  F014         	goto	u9361
  1516   002892  EF4D  F014         	goto	u9360
  1517   002896                     u9361:
  1518   002896  EF5E  F014         	goto	l9442
  1519   00289A                     u9360:
  1520   00289A                     
  1521                           ; BSR set to: 0
  1522                           ;application.c: 113:            ret|= PWM_set_Duty(80, &ccp_obj);
  1523   00289A  0EC1               	movlw	low _ccp_obj
  1524   00289C  6E5C               	movwf	PWM_set_Duty@_ccp^0,c
  1525   00289E  0E50               	movlw	80
  1526   0028A0  ECC3  F014         	call	_PWM_set_Duty
  1527   0028A4  0100               	movlb	0	; () banked
  1528   0028A6  13BF               	iorwf	_ret& (0+255),f,b
  1529                           
  1530                           ;application.c: 114:             ret|=motor_move_left(&motor_1);
  1531   0028A8  0EFE               	movlw	low _motor_1
  1532   0028AA  6E0A               	movwf	motor_move_left@motor^0,c
  1533   0028AC  EC63  F020         	call	_motor_move_left	;wreg free
  1534   0028B0  0100               	movlb	0	; () banked
  1535   0028B2  13BF               	iorwf	_ret& (0+255),f,b
  1536   0028B4                     
  1537                           ; BSR set to: 0
  1538                           ;application.c: 115:           fan_mode ='2';
  1539   0028B4  0E32               	movlw	50
  1540   0028B6  6E70               	movwf	_fan_mode^0,c
  1541                           
  1542                           ;application.c: 117:         }else if(degr_cel >= 20){
  1543   0028B8  EF89  F014         	goto	l9452
  1544   0028BC                     l9442:
  1545                           
  1546                           ; BSR set to: 0
  1547   0028BC  5069               	movf	(_degr_cel+1)^0,w,c
  1548   0028BE  E109               	bnz	u9370
  1549   0028C0  0E14               	movlw	20
  1550   0028C2  5C68               	subwf	_degr_cel^0,w,c
  1551   0028C4  A0D8               	btfss	status,0,c
  1552   0028C6  EF67  F014         	goto	u9371
  1553   0028CA  EF69  F014         	goto	u9370
  1554   0028CE                     u9371:
  1555   0028CE  EF7A  F014         	goto	l9448
  1556   0028D2                     u9370:
  1557   0028D2                     
  1558                           ; BSR set to: 0
  1559                           ;application.c: 118:           ret|= PWM_set_Duty(60, &ccp_obj);
  1560   0028D2  0EC1               	movlw	low _ccp_obj
  1561   0028D4  6E5C               	movwf	PWM_set_Duty@_ccp^0,c
  1562   0028D6  0E3C               	movlw	60
  1563   0028D8  ECC3  F014         	call	_PWM_set_Duty
  1564   0028DC  0100               	movlb	0	; () banked
  1565   0028DE  13BF               	iorwf	_ret& (0+255),f,b
  1566                           
  1567                           ;application.c: 119:            ret|= motor_move_left(&motor_1);
  1568   0028E0  0EFE               	movlw	low _motor_1
  1569   0028E2  6E0A               	movwf	motor_move_left@motor^0,c
  1570   0028E4  EC63  F020         	call	_motor_move_left	;wreg free
  1571   0028E8  0100               	movlb	0	; () banked
  1572   0028EA  13BF               	iorwf	_ret& (0+255),f,b
  1573   0028EC                     
  1574                           ; BSR set to: 0
  1575                           ;application.c: 120:          fan_mode ='1';
  1576   0028EC  0E31               	movlw	49
  1577   0028EE  6E70               	movwf	_fan_mode^0,c
  1578                           
  1579                           ;application.c: 121:         }
  1580   0028F0  EF89  F014         	goto	l9452
  1581   0028F4                     l9448:
  1582                           
  1583                           ; BSR set to: 0
  1584                           ;application.c: 123:         ret|= PWM_set_Duty(0, &ccp_obj);
  1585   0028F4  0EC1               	movlw	low _ccp_obj
  1586   0028F6  6E5C               	movwf	PWM_set_Duty@_ccp^0,c
  1587   0028F8  0E00               	movlw	0
  1588   0028FA  ECC3  F014         	call	_PWM_set_Duty
  1589   0028FE  0100               	movlb	0	; () banked
  1590   002900  13BF               	iorwf	_ret& (0+255),f,b
  1591                           
  1592                           ;application.c: 124:           ret|= motor_stop(&motor_1);
  1593   002902  0EFE               	movlw	low _motor_1
  1594   002904  6E0A               	movwf	motor_stop@motor^0,c
  1595   002906  EC47  F020         	call	_motor_stop	;wreg free
  1596   00290A  0100               	movlb	0	; () banked
  1597   00290C  13BF               	iorwf	_ret& (0+255),f,b
  1598   00290E                     
  1599                           ; BSR set to: 0
  1600                           ;application.c: 125:        fan_mode ='0';
  1601   00290E  0E30               	movlw	48
  1602   002910  6E70               	movwf	_fan_mode^0,c
  1603   002912                     l9452:
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;application.c: 127:        ret|= lcd_4bit_send_data_char_posit(&lcd_1 , 2 , 1 ,fan_mode
      +                           );
  1607   002912  0EF8               	movlw	low _lcd_1
  1608   002914  6E16               	movwf	lcd_4bit_send_data_char_posit@lcd^0,c
  1609   002916  0E02               	movlw	2
  1610   002918  6E17               	movwf	lcd_4bit_send_data_char_posit@row^0,c
  1611   00291A  0E01               	movlw	1
  1612   00291C  6E18               	movwf	lcd_4bit_send_data_char_posit@colunm^0,c
  1613   00291E  C070  F019         	movff	_fan_mode,lcd_4bit_send_data_char_posit@data
  1614   002922  EC0C  F020         	call	_lcd_4bit_send_data_char_posit	;wreg free
  1615   002926  0100               	movlb	0	; () banked
  1616   002928  13BF               	iorwf	_ret& (0+255),f,b
  1617                           
  1618                           ;application.c: 128:         if(fan_mode){
  1619   00292A  5070               	movf	_fan_mode^0,w,c
  1620   00292C  B4D8               	btfsc	status,2,c
  1621   00292E  EF9B  F014         	goto	u9381
  1622   002932  EF9D  F014         	goto	u9380
  1623   002936                     u9381:
  1624   002936  EFAF  F014         	goto	l9456
  1625   00293A                     u9380:
  1626   00293A                     
  1627                           ; BSR set to: 0
  1628                           ;application.c: 129:        ret|= lcd_4bit_send_data_string_posit(&lcd_1 , 1 , 11 , "fan
      +                           on");
  1629   00293A  0EF8               	movlw	low _lcd_1
  1630   00293C  6E16               	movwf	lcd_4bit_send_data_string_posit@lcd^0,c
  1631   00293E  0E01               	movlw	1
  1632   002940  6E17               	movwf	lcd_4bit_send_data_string_posit@row^0,c
  1633   002942  0E0B               	movlw	11
  1634   002944  6E18               	movwf	lcd_4bit_send_data_string_posit@colunm^0,c
  1635   002946  0E2E               	movlw	low STR_8
  1636   002948  6E19               	movwf	lcd_4bit_send_data_string_posit@data^0,c
  1637   00294A  5019               	movf	lcd_4bit_send_data_string_posit@data^0,w,c
  1638   00294C  A4D8               	btfss	status,2,c
  1639   00294E  0E10               	movlw	high __smallconst
  1640   002950  6E1A               	movwf	(lcd_4bit_send_data_string_posit@data+1)^0,c
  1641   002952  ECAF  F01C         	call	_lcd_4bit_send_data_string_posit	;wreg free
  1642   002956  0100               	movlb	0	; () banked
  1643   002958  13BF               	iorwf	_ret& (0+255),f,b
  1644                           
  1645                           ;application.c: 130:         }else{
  1646   00295A  EF5F  F013         	goto	l9406
  1647   00295E                     l9456:
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;application.c: 131:        ret|= lcd_4bit_send_data_string_posit(&lcd_1 , 1 , 11 , "fan
      +                           off");
  1651   00295E  0EF8               	movlw	low _lcd_1
  1652   002960  6E16               	movwf	lcd_4bit_send_data_string_posit@lcd^0,c
  1653   002962  0E01               	movlw	1
  1654   002964  6E17               	movwf	lcd_4bit_send_data_string_posit@row^0,c
  1655   002966  0E0B               	movlw	11
  1656   002968  6E18               	movwf	lcd_4bit_send_data_string_posit@colunm^0,c
  1657   00296A  0E1F               	movlw	low STR_10
  1658   00296C  6E19               	movwf	lcd_4bit_send_data_string_posit@data^0,c
  1659   00296E  5019               	movf	lcd_4bit_send_data_string_posit@data^0,w,c
  1660   002970  A4D8               	btfss	status,2,c
  1661   002972  0E10               	movlw	high __smallconst
  1662   002974  6E1A               	movwf	(lcd_4bit_send_data_string_posit@data+1)^0,c
  1663   002976  ECAF  F01C         	call	_lcd_4bit_send_data_string_posit	;wreg free
  1664   00297A  0100               	movlb	0	; () banked
  1665   00297C  13BF               	iorwf	_ret& (0+255),f,b
  1666   00297E  EF5F  F013         	goto	l9406
  1667   002982  EF07  F000         	goto	start
  1668   002986                     __end_of_main:
  1669                           	callstack 0
  1670                           
  1671 ;; *************** function _motor_stop *****************
  1672 ;; Defined at:
  1673 ;;		line 53 in file "ECU_Layer/DC_MOTOR/ecu_dc_motor.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  motor           1    9[COMRAM] PTR const struct .
  1676 ;;		 -> motor_1(2), 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  ret             1   10[COMRAM] unsigned char 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      unsigned char 
  1681 ;; Registers used:
  1682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1688 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;Total ram usage:        2 bytes
  1693 ;; Hardware stack levels used: 1
  1694 ;; Hardware stack levels required when called: 3
  1695 ;; This function calls:
  1696 ;;		_gpio_pin_write_logic
  1697 ;; This function is called by:
  1698 ;;		_main
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text1
  1703   00408E                     __ptext1:
  1704                           	callstack 0
  1705   00408E                     _motor_stop:
  1706                           	callstack 27
  1707   00408E                     
  1708                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 55:     if(((void*)0)== motor)
  1709   00408E  500A               	movf	motor_stop@motor^0,w,c
  1710   004090  A4D8               	btfss	status,2,c
  1711   004092  EF4D  F020         	goto	u7011
  1712   004096  EF4F  F020         	goto	u7010
  1713   00409A                     u7011:
  1714   00409A  EF53  F020         	goto	l7556
  1715   00409E                     u7010:
  1716   00409E                     
  1717                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 56:     {;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 57:    
      +                           ret = (Std_ReturnType)0x00 ;
  1718   00409E  0E00               	movlw	0
  1719   0040A0  6E0B               	movwf	motor_stop@ret^0,c
  1720                           
  1721                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 58:     }else
  1722   0040A2  EF61  F020         	goto	l7560
  1723   0040A6                     l7556:
  1724                           
  1725                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 59:     {;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 60:    
      +                            gpio_pin_write_logic(&(motor->motors[0]),LOGIC_LOW);
  1726   0040A6  C00A  F002         	movff	motor_stop@motor,gpio_pin_write_logic@_pin_t
  1727   0040AA  0E00               	movlw	0
  1728   0040AC  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1729   0040AE  EC34  F018         	call	_gpio_pin_write_logic	;wreg free
  1730                           
  1731                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 61:         gpio_pin_write_logic(&(motor->motors[1])
      +                          ,LOGIC_LOW);
  1732   0040B2  280A               	incf	motor_stop@motor^0,w,c
  1733   0040B4  6E02               	movwf	gpio_pin_write_logic@_pin_t^0,c
  1734   0040B6  0E00               	movlw	0
  1735   0040B8  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1736   0040BA  EC34  F018         	call	_gpio_pin_write_logic	;wreg free
  1737   0040BE                     
  1738                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 62:         ret = (Std_ReturnType)0x01 ;
  1739   0040BE  0E01               	movlw	1
  1740   0040C0  6E0B               	movwf	motor_stop@ret^0,c
  1741   0040C2                     l7560:
  1742                           
  1743                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 64:     return ret;
  1744   0040C2  500B               	movf	motor_stop@ret^0,w,c
  1745   0040C4  0012               	return		;funcret
  1746   0040C6                     __end_of_motor_stop:
  1747                           	callstack 0
  1748                           
  1749 ;; *************** function _motor_move_left *****************
  1750 ;; Defined at:
  1751 ;;		line 40 in file "ECU_Layer/DC_MOTOR/ecu_dc_motor.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  motor           1    9[COMRAM] PTR const struct .
  1754 ;;		 -> motor_1(2), 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  ret             1   10[COMRAM] unsigned char 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      unsigned char 
  1759 ;; Registers used:
  1760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1766 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;Total ram usage:        2 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; Hardware stack levels required when called: 3
  1773 ;; This function calls:
  1774 ;;		_gpio_pin_write_logic
  1775 ;; This function is called by:
  1776 ;;		_main
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text2
  1781   0040C6                     __ptext2:
  1782                           	callstack 0
  1783   0040C6                     _motor_move_left:
  1784                           	callstack 27
  1785   0040C6                     
  1786                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 42:     if(((void*)0)== motor)
  1787   0040C6  500A               	movf	motor_move_left@motor^0,w,c
  1788   0040C8  A4D8               	btfss	status,2,c
  1789   0040CA  EF69  F020         	goto	u7001
  1790   0040CE  EF6B  F020         	goto	u7000
  1791   0040D2                     u7001:
  1792   0040D2  EF6F  F020         	goto	l7544
  1793   0040D6                     u7000:
  1794   0040D6                     
  1795                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 43:     {;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 44:    
      +                           ret = (Std_ReturnType)0x00 ;
  1796   0040D6  0E00               	movlw	0
  1797   0040D8  6E0B               	movwf	motor_move_left@ret^0,c
  1798                           
  1799                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 45:     }else
  1800   0040DA  EF7D  F020         	goto	l7548
  1801   0040DE                     l7544:
  1802                           
  1803                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 46:     {;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 47:    
      +                            gpio_pin_write_logic(&(motor->motors[0]),LOGIC_LOW);
  1804   0040DE  C00A  F002         	movff	motor_move_left@motor,gpio_pin_write_logic@_pin_t
  1805   0040E2  0E00               	movlw	0
  1806   0040E4  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1807   0040E6  EC34  F018         	call	_gpio_pin_write_logic	;wreg free
  1808                           
  1809                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 48:         gpio_pin_write_logic(&(motor->motors[1])
      +                          ,LOGIC_HIGH);
  1810   0040EA  280A               	incf	motor_move_left@motor^0,w,c
  1811   0040EC  6E02               	movwf	gpio_pin_write_logic@_pin_t^0,c
  1812   0040EE  0E01               	movlw	1
  1813   0040F0  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1814   0040F2  EC34  F018         	call	_gpio_pin_write_logic	;wreg free
  1815   0040F6                     
  1816                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 49:          ret = (Std_ReturnType)0x01 ;
  1817   0040F6  0E01               	movlw	1
  1818   0040F8  6E0B               	movwf	motor_move_left@ret^0,c
  1819   0040FA                     l7548:
  1820                           
  1821                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 51:     return ret;
  1822   0040FA  500B               	movf	motor_move_left@ret^0,w,c
  1823   0040FC  0012               	return		;funcret
  1824   0040FE                     __end_of_motor_move_left:
  1825                           	callstack 0
  1826                           
  1827 ;; *************** function _lcd_4bit_send_data_string_posit *****************
  1828 ;; Defined at:
  1829 ;;		line 100 in file "ECU_Layer/CHR_LCD/ecu_chr_lcd.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  lcd             1   21[COMRAM] PTR const struct .
  1832 ;;		 -> lcd_1(6), 
  1833 ;;  row             1   22[COMRAM] unsigned char 
  1834 ;;  colunm          1   23[COMRAM] unsigned char 
  1835 ;;  data            2   24[COMRAM] PTR unsigned char 
  1836 ;;		 -> STR_11(8), STR_9(7), STR_7(14), str(6), 
  1837 ;;		 -> STR_5(7), 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  ret             1   26[COMRAM] unsigned char 
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1    wreg      unsigned char 
  1842 ;; Registers used:
  1843 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1849 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1853 ;;Total ram usage:        6 bytes
  1854 ;; Hardware stack levels used: 1
  1855 ;; Hardware stack levels required when called: 6
  1856 ;; This function calls:
  1857 ;;		_lcd_4bit_send_data_char
  1858 ;;		_lcd_set_cursor_4bit
  1859 ;; This function is called by:
  1860 ;;		_main
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           	psect	text3
  1865   00395E                     __ptext3:
  1866                           	callstack 0
  1867   00395E                     _lcd_4bit_send_data_string_posit:
  1868                           	callstack 24
  1869   00395E                     
  1870                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 102:     if((((void*)0)==lcd)){
  1871   00395E  5016               	movf	lcd_4bit_send_data_string_posit@lcd^0,w,c
  1872   003960  A4D8               	btfss	status,2,c
  1873   003962  EFB5  F01C         	goto	u6871
  1874   003966  EFB7  F01C         	goto	u6870
  1875   00396A                     u6871:
  1876   00396A  EFBB  F01C         	goto	l7448
  1877   00396E                     u6870:
  1878   00396E                     
  1879                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 103:         ret =(Std_ReturnType)0x00 ;
  1880   00396E  0E00               	movlw	0
  1881   003970  6E1B               	movwf	lcd_4bit_send_data_string_posit@ret^0,c
  1882                           
  1883                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 104:     }else {
  1884   003972  EFF8  F01C         	goto	l7456
  1885   003976                     l7448:
  1886                           
  1887                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 105:          ret = lcd_set_cursor_4bit(lcd ,row , col
      +                          unm);
  1888   003976  C016  F010         	movff	lcd_4bit_send_data_string_posit@lcd,lcd_set_cursor_4bit@lcd
  1889   00397A  C017  F011         	movff	lcd_4bit_send_data_string_posit@row,lcd_set_cursor_4bit@row
  1890   00397E  C018  F012         	movff	lcd_4bit_send_data_string_posit@colunm,lcd_set_cursor_4bit@column
  1891   003982  EC14  F01C         	call	_lcd_set_cursor_4bit	;wreg free
  1892   003986  6E1B               	movwf	lcd_4bit_send_data_string_posit@ret^0,c
  1893                           
  1894                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 106:     while(*data)
  1895   003988  EFDF  F01C         	goto	l7454
  1896   00398C                     l7450:
  1897                           
  1898                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 107:         {;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 108:  
      +                                     ret = lcd_4bit_send_data_char(lcd , *data++);
  1899   00398C  C016  F00D         	movff	lcd_4bit_send_data_string_posit@lcd,lcd_4bit_send_data_char@lcd
  1900   003990  C019  FFF6         	movff	lcd_4bit_send_data_string_posit@data,tblptrl
  1901   003994  C01A  FFF7         	movff	lcd_4bit_send_data_string_posit@data+1,tblptrh
  1902   003998  0E00               	movlw	low (__smallconst shr (0+16))
  1903   00399A  6EF8               	movwf	tblptru,c
  1904   00399C  0E0F               	movlw	(high __ramtop+-1)
  1905   00399E  64F7               	cpfsgt	tblptrh,c
  1906   0039A0  D003               	bra	u6887
  1907   0039A2  0008               	tblrd		*
  1908   0039A4  50F5               	movf	tablat,w,c
  1909   0039A6  D005               	bra	u6880
  1910   0039A8                     u6887:
  1911   0039A8  CFF6 FFE9          	movff	tblptrl,fsr0l
  1912   0039AC  CFF7 FFEA          	movff	tblptrh,fsr0h
  1913   0039B0  50EF               	movf	indf0,w,c
  1914   0039B2                     u6880:
  1915   0039B2  6E0E               	movwf	lcd_4bit_send_data_char@data^0,c
  1916   0039B4  ECFC  F01E         	call	_lcd_4bit_send_data_char	;wreg free
  1917   0039B8  6E1B               	movwf	lcd_4bit_send_data_string_posit@ret^0,c
  1918   0039BA  4A19               	infsnz	lcd_4bit_send_data_string_posit@data^0,f,c
  1919   0039BC  2A1A               	incf	(lcd_4bit_send_data_string_posit@data+1)^0,f,c
  1920   0039BE                     l7454:
  1921                           
  1922                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 106:     while(*data)
  1923   0039BE  C019  FFF6         	movff	lcd_4bit_send_data_string_posit@data,tblptrl
  1924   0039C2  C01A  FFF7         	movff	lcd_4bit_send_data_string_posit@data+1,tblptrh
  1925   0039C6  0E00               	movlw	low (__smallconst shr (0+16))
  1926   0039C8  6EF8               	movwf	tblptru,c
  1927   0039CA  0E0F               	movlw	(high __ramtop+-1)
  1928   0039CC  64F7               	cpfsgt	tblptrh,c
  1929   0039CE  D003               	bra	u6897
  1930   0039D0  0008               	tblrd		*
  1931   0039D2  50F5               	movf	tablat,w,c
  1932   0039D4  D005               	bra	u6890
  1933   0039D6                     u6897:
  1934   0039D6  CFF6 FFE9          	movff	tblptrl,fsr0l
  1935   0039DA  CFF7 FFEA          	movff	tblptrh,fsr0h
  1936   0039DE  50EF               	movf	indf0,w,c
  1937   0039E0                     u6890:
  1938   0039E0  0900               	iorlw	0
  1939   0039E2  A4D8               	btfss	status,2,c
  1940   0039E4  EFF6  F01C         	goto	u6901
  1941   0039E8  EFF8  F01C         	goto	u6900
  1942   0039EC                     u6901:
  1943   0039EC  EFC6  F01C         	goto	l7450
  1944   0039F0                     u6900:
  1945   0039F0                     l7456:
  1946                           
  1947                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 113:     return ret ;
  1948   0039F0  501B               	movf	lcd_4bit_send_data_string_posit@ret^0,w,c
  1949   0039F2  0012               	return		;funcret
  1950   0039F4                     __end_of_lcd_4bit_send_data_string_posit:
  1951                           	callstack 0
  1952                           
  1953 ;; *************** function _lcd_4bit_send_data_char_posit *****************
  1954 ;; Defined at:
  1955 ;;		line 75 in file "ECU_Layer/CHR_LCD/ecu_chr_lcd.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;  lcd             1   21[COMRAM] PTR const struct .
  1958 ;;		 -> lcd_1(6), 
  1959 ;;  row             1   22[COMRAM] unsigned char 
  1960 ;;  colunm          1   23[COMRAM] unsigned char 
  1961 ;;  data            1   24[COMRAM] unsigned char 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  ret             1   25[COMRAM] unsigned char 
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      unsigned char 
  1966 ;; Registers used:
  1967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1973 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;Total ram usage:        5 bytes
  1978 ;; Hardware stack levels used: 1
  1979 ;; Hardware stack levels required when called: 6
  1980 ;; This function calls:
  1981 ;;		_lcd_4bit_send_data_char
  1982 ;;		_lcd_set_cursor_4bit
  1983 ;; This function is called by:
  1984 ;;		_main
  1985 ;;		_lcd_4bit_send_custom_char
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text4
  1990   004018                     __ptext4:
  1991                           	callstack 0
  1992   004018                     _lcd_4bit_send_data_char_posit:
  1993                           	callstack 24
  1994   004018                     
  1995                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 77:     if((((void*)0)==lcd)){
  1996   004018  5016               	movf	lcd_4bit_send_data_char_posit@lcd^0,w,c
  1997   00401A  A4D8               	btfss	status,2,c
  1998   00401C  EF12  F020         	goto	u6861
  1999   004020  EF14  F020         	goto	u6860
  2000   004024                     u6861:
  2001   004024  EF18  F020         	goto	l7438
  2002   004028                     u6860:
  2003   004028                     
  2004                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 78:         ret =(Std_ReturnType)0x00 ;
  2005   004028  0E00               	movlw	0
  2006   00402A  6E1A               	movwf	lcd_4bit_send_data_char_posit@ret^0,c
  2007                           
  2008                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 79:     }else {
  2009   00402C  EF28  F020         	goto	l7440
  2010   004030                     l7438:
  2011                           
  2012                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 81:       ret = lcd_set_cursor_4bit(lcd ,row , colunm)
      +                          ;
  2013   004030  C016  F010         	movff	lcd_4bit_send_data_char_posit@lcd,lcd_set_cursor_4bit@lcd
  2014   004034  C017  F011         	movff	lcd_4bit_send_data_char_posit@row,lcd_set_cursor_4bit@row
  2015   004038  C018  F012         	movff	lcd_4bit_send_data_char_posit@colunm,lcd_set_cursor_4bit@column
  2016   00403C  EC14  F01C         	call	_lcd_set_cursor_4bit	;wreg free
  2017   004040  6E1A               	movwf	lcd_4bit_send_data_char_posit@ret^0,c
  2018                           
  2019                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 82:         ret = lcd_4bit_send_data_char(lcd , data);
  2020   004042  C016  F00D         	movff	lcd_4bit_send_data_char_posit@lcd,lcd_4bit_send_data_char@lcd
  2021   004046  C019  F00E         	movff	lcd_4bit_send_data_char_posit@data,lcd_4bit_send_data_char@data
  2022   00404A  ECFC  F01E         	call	_lcd_4bit_send_data_char	;wreg free
  2023   00404E  6E1A               	movwf	lcd_4bit_send_data_char_posit@ret^0,c
  2024   004050                     l7440:
  2025                           
  2026                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 84:     return ret ;
  2027   004050  501A               	movf	lcd_4bit_send_data_char_posit@ret^0,w,c
  2028   004052  0012               	return		;funcret
  2029   004054                     __end_of_lcd_4bit_send_data_char_posit:
  2030                           	callstack 0
  2031                           
  2032 ;; *************** function _lcd_set_cursor_4bit *****************
  2033 ;; Defined at:
  2034 ;;		line 326 in file "ECU_Layer/CHR_LCD/ecu_chr_lcd.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  lcd             1   15[COMRAM] PTR const struct .
  2037 ;;		 -> lcd_1(6), 
  2038 ;;  row             1   16[COMRAM] unsigned char 
  2039 ;;  column          1   17[COMRAM] unsigned char 
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;  ret             1   20[COMRAM] unsigned char 
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      unsigned char 
  2044 ;; Registers used:
  2045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2051 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;Total ram usage:        6 bytes
  2056 ;; Hardware stack levels used: 1
  2057 ;; Hardware stack levels required when called: 5
  2058 ;; This function calls:
  2059 ;;		_lcd_4bit_send_command
  2060 ;; This function is called by:
  2061 ;;		_lcd_4bit_send_data_char_posit
  2062 ;;		_lcd_4bit_send_data_string_posit
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text5
  2067   003828                     __ptext5:
  2068                           	callstack 0
  2069   003828                     _lcd_set_cursor_4bit:
  2070                           	callstack 24
  2071   003828                     
  2072                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 328:          column-- ;
  2073   003828  0612               	decf	lcd_set_cursor_4bit@column^0,f,c
  2074                           
  2075                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 329:         switch(row){
  2076   00382A  EF43  F01C         	goto	l7212
  2077   00382E                     l7202:
  2078   00382E  C010  F00D         	movff	lcd_set_cursor_4bit@lcd,lcd_4bit_send_command@lcd
  2079   003832  5012               	movf	lcd_set_cursor_4bit@column^0,w,c
  2080   003834  0F80               	addlw	128
  2081   003836  6E0E               	movwf	lcd_4bit_send_command@command^0,c
  2082   003838  EC2A  F01F         	call	_lcd_4bit_send_command	;wreg free
  2083   00383C  6E15               	movwf	lcd_set_cursor_4bit@ret^0,c
  2084   00383E  EF60  F01C         	goto	l7214
  2085   003842                     l7204:
  2086   003842  C010  F00D         	movff	lcd_set_cursor_4bit@lcd,lcd_4bit_send_command@lcd
  2087   003846  5012               	movf	lcd_set_cursor_4bit@column^0,w,c
  2088   003848  0FC0               	addlw	192
  2089   00384A  6E0E               	movwf	lcd_4bit_send_command@command^0,c
  2090   00384C  EC2A  F01F         	call	_lcd_4bit_send_command	;wreg free
  2091   003850  6E15               	movwf	lcd_set_cursor_4bit@ret^0,c
  2092   003852  EF60  F01C         	goto	l7214
  2093   003856                     l7206:
  2094   003856  C010  F00D         	movff	lcd_set_cursor_4bit@lcd,lcd_4bit_send_command@lcd
  2095   00385A  5012               	movf	lcd_set_cursor_4bit@column^0,w,c
  2096   00385C  0F90               	addlw	144
  2097   00385E  6E0E               	movwf	lcd_4bit_send_command@command^0,c
  2098   003860  EC2A  F01F         	call	_lcd_4bit_send_command	;wreg free
  2099   003864  6E15               	movwf	lcd_set_cursor_4bit@ret^0,c
  2100   003866  EF60  F01C         	goto	l7214
  2101   00386A                     l7208:
  2102   00386A  C010  F00D         	movff	lcd_set_cursor_4bit@lcd,lcd_4bit_send_command@lcd
  2103   00386E  5012               	movf	lcd_set_cursor_4bit@column^0,w,c
  2104   003870  0FD0               	addlw	208
  2105   003872  6E0E               	movwf	lcd_4bit_send_command@command^0,c
  2106   003874  EC2A  F01F         	call	_lcd_4bit_send_command	;wreg free
  2107   003878  6E15               	movwf	lcd_set_cursor_4bit@ret^0,c
  2108   00387A  EF60  F01C         	goto	l7214
  2109   00387E                     l7210:
  2110                           
  2111                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 337:         ret= (Std_ReturnType)0x01 ;
  2112   00387E  0E01               	movlw	1
  2113   003880  6E15               	movwf	lcd_set_cursor_4bit@ret^0,c
  2114                           
  2115                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 338:     }
  2116   003882  EF60  F01C         	goto	l7214
  2117   003886                     l7212:
  2118   003886  5011               	movf	lcd_set_cursor_4bit@row^0,w,c
  2119   003888  6E13               	movwf	??_lcd_set_cursor_4bit^0,c
  2120   00388A  6A14               	clrf	(??_lcd_set_cursor_4bit+1)^0,c
  2121                           
  2122                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2123                           ; Switch size 1, requested type "simple"
  2124                           ; Number of cases is 1, Range of values is 0 to 0
  2125                           ; switch strategies available:
  2126                           ; Name         Instructions Cycles
  2127                           ; simple_byte            4     3 (average)
  2128                           ;	Chosen strategy is simple_byte
  2129   00388C  5014               	movf	(??_lcd_set_cursor_4bit+1)^0,w,c
  2130   00388E  0A00               	xorlw	0	; case 0
  2131   003890  B4D8               	btfsc	status,2,c
  2132   003892  EF4D  F01C         	goto	l9618
  2133   003896  EF3F  F01C         	goto	l7210
  2134   00389A                     l9618:
  2135                           
  2136                           ; Switch size 1, requested type "simple"
  2137                           ; Number of cases is 4, Range of values is 1 to 4
  2138                           ; switch strategies available:
  2139                           ; Name         Instructions Cycles
  2140                           ; simple_byte           13     7 (average)
  2141                           ;	Chosen strategy is simple_byte
  2142   00389A  5013               	movf	??_lcd_set_cursor_4bit^0,w,c
  2143   00389C  0A01               	xorlw	1	; case 1
  2144   00389E  B4D8               	btfsc	status,2,c
  2145   0038A0  EF17  F01C         	goto	l7202
  2146   0038A4  0A03               	xorlw	3	; case 2
  2147   0038A6  B4D8               	btfsc	status,2,c
  2148   0038A8  EF21  F01C         	goto	l7204
  2149   0038AC  0A01               	xorlw	1	; case 3
  2150   0038AE  B4D8               	btfsc	status,2,c
  2151   0038B0  EF2B  F01C         	goto	l7206
  2152   0038B4  0A07               	xorlw	7	; case 4
  2153   0038B6  B4D8               	btfsc	status,2,c
  2154   0038B8  EF35  F01C         	goto	l7208
  2155   0038BC  EF3F  F01C         	goto	l7210
  2156   0038C0                     l7214:
  2157                           
  2158                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 339:     return ret ;
  2159   0038C0  5015               	movf	lcd_set_cursor_4bit@ret^0,w,c
  2160   0038C2  0012               	return		;funcret
  2161   0038C4                     __end_of_lcd_set_cursor_4bit:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function _lcd_4bit_send_data_char *****************
  2165 ;; Defined at:
  2166 ;;		line 60 in file "ECU_Layer/CHR_LCD/ecu_chr_lcd.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  lcd             1   12[COMRAM] PTR const struct .
  2169 ;;		 -> lcd_1(6), 
  2170 ;;  data            1   13[COMRAM] unsigned char 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  ret             1   14[COMRAM] unsigned char 
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  1    wreg      unsigned char 
  2175 ;; Registers used:
  2176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2182 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;Total ram usage:        3 bytes
  2187 ;; Hardware stack levels used: 1
  2188 ;; Hardware stack levels required when called: 4
  2189 ;; This function calls:
  2190 ;;		_gpio_pin_write_logic
  2191 ;;		_lcd_send_4bit_command_data
  2192 ;;		_lcd_send_4bit_enable
  2193 ;; This function is called by:
  2194 ;;		_lcd_4bit_send_data_char_posit
  2195 ;;		_lcd_4bit_send_data_string_posit
  2196 ;;		_lcd_4bit_send_data_string
  2197 ;;		_lcd_4bit_send_custom_char
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           	psect	text6
  2202   003DF8                     __ptext6:
  2203                           	callstack 0
  2204   003DF8                     _lcd_4bit_send_data_char:
  2205                           	callstack 25
  2206   003DF8                     
  2207                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 62:     if((((void*)0)==lcd)){
  2208   003DF8  500D               	movf	lcd_4bit_send_data_char@lcd^0,w,c
  2209   003DFA  A4D8               	btfss	status,2,c
  2210   003DFC  EF02  F01F         	goto	u6631
  2211   003E00  EF04  F01F         	goto	u6630
  2212   003E04                     u6631:
  2213   003E04  EF08  F01F         	goto	l7192
  2214   003E08                     u6630:
  2215   003E08                     
  2216                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 63:         ret =(Std_ReturnType)0x00 ;
  2217   003E08  0E00               	movlw	0
  2218   003E0A  6E0F               	movwf	lcd_4bit_send_data_char@ret^0,c
  2219                           
  2220                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 64:     }else {
  2221   003E0C  EF28  F01F         	goto	l7194
  2222   003E10                     l7192:
  2223                           
  2224                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 65:        ret = gpio_pin_write_logic(&(lcd->pin_Rs) ,
      +                           LOGIC_HIGH);
  2225   003E10  C00D  F002         	movff	lcd_4bit_send_data_char@lcd,gpio_pin_write_logic@_pin_t
  2226   003E14  0E01               	movlw	1
  2227   003E16  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2228   003E18  EC34  F018         	call	_gpio_pin_write_logic	;wreg free
  2229   003E1C  6E0F               	movwf	lcd_4bit_send_data_char@ret^0,c
  2230                           
  2231                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 66:         ret = lcd_send_4bit_command_data((lcd) , d
      +                          ata >> 4);
  2232   003E1E  C00D  F00A         	movff	lcd_4bit_send_data_char@lcd,lcd_send_4bit_command_data@lcd
  2233   003E22  380E               	swapf	lcd_4bit_send_data_char@data^0,w,c
  2234   003E24  0B0F               	andlw	15
  2235   003E26  6E0B               	movwf	lcd_send_4bit_command_data@data^0,c
  2236   003E28  EC2C  F01E         	call	_lcd_send_4bit_command_data	;wreg free
  2237   003E2C  6E0F               	movwf	lcd_4bit_send_data_char@ret^0,c
  2238                           
  2239                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 67:         ret = lcd_send_4bit_enable((lcd));
  2240   003E2E  C00D  F00A         	movff	lcd_4bit_send_data_char@lcd,lcd_send_4bit_enable@lcd
  2241   003E32  ECEC  F01F         	call	_lcd_send_4bit_enable	;wreg free
  2242   003E36  6E0F               	movwf	lcd_4bit_send_data_char@ret^0,c
  2243                           
  2244                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 68:         ret = lcd_send_4bit_command_data((lcd) , d
      +                          ata);
  2245   003E38  C00D  F00A         	movff	lcd_4bit_send_data_char@lcd,lcd_send_4bit_command_data@lcd
  2246   003E3C  C00E  F00B         	movff	lcd_4bit_send_data_char@data,lcd_send_4bit_command_data@data
  2247   003E40  EC2C  F01E         	call	_lcd_send_4bit_command_data	;wreg free
  2248   003E44  6E0F               	movwf	lcd_4bit_send_data_char@ret^0,c
  2249                           
  2250                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 69:         ret = lcd_send_4bit_enable((lcd));
  2251   003E46  C00D  F00A         	movff	lcd_4bit_send_data_char@lcd,lcd_send_4bit_enable@lcd
  2252   003E4A  ECEC  F01F         	call	_lcd_send_4bit_enable	;wreg free
  2253   003E4E  6E0F               	movwf	lcd_4bit_send_data_char@ret^0,c
  2254   003E50                     l7194:
  2255                           
  2256                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 71:     return ret ;
  2257   003E50  500F               	movf	lcd_4bit_send_data_char@ret^0,w,c
  2258   003E52  0012               	return		;funcret
  2259   003E54                     __end_of_lcd_4bit_send_data_char:
  2260                           	callstack 0
  2261                           
  2262 ;; *************** function _convert_uint16_to_string *****************
  2263 ;; Defined at:
  2264 ;;		line 257 in file "ECU_Layer/CHR_LCD/ecu_chr_lcd.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  num             2   43[COMRAM] unsigned short 
  2267 ;;  str             1   45[COMRAM] PTR unsigned char 
  2268 ;;		 -> str(6), 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  temp            6   46[COMRAM] unsigned char [6]
  2271 ;;  counter         1   53[COMRAM] unsigned char 
  2272 ;;  ret             1   52[COMRAM] unsigned char 
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      unsigned char 
  2275 ;; Registers used:
  2276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2282 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2283 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2285 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2286 ;;Total ram usage:       11 bytes
  2287 ;; Hardware stack levels used: 1
  2288 ;; Hardware stack levels required when called: 7
  2289 ;; This function calls:
  2290 ;;		_memset
  2291 ;;		_sprintf
  2292 ;; This function is called by:
  2293 ;;		_main
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text7
  2298   0038C4                     __ptext7:
  2299                           	callstack 0
  2300   0038C4                     _convert_uint16_to_string:
  2301                           	callstack 23
  2302   0038C4                     
  2303                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 258:  Std_ReturnType ret = (Std_ReturnType)0x01 ;
  2304   0038C4  0E01               	movlw	1
  2305   0038C6  6E35               	movwf	convert_uint16_to_string@ret^0,c
  2306   0038C8                     
  2307                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 259:  uint8 temp[6]={0};
  2308   0038C8  EE20  F02F         	lfsr	2,convert_uint16_to_string@temp
  2309   0038CC  0E05               	movlw	5
  2310   0038CE                     u6971:
  2311   0038CE  6ADE               	clrf	postinc2,c
  2312   0038D0  06E8               	decf	wreg,f,c
  2313   0038D2  E2FD               	bc	u6971
  2314   0038D4                     
  2315                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 260:  uint8 counter =0 ;
  2316   0038D4  0E00               	movlw	0
  2317   0038D6  6E36               	movwf	convert_uint16_to_string@counter^0,c
  2318   0038D8                     
  2319                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 261:     if((((void*)0)==str)){
  2320   0038D8  502E               	movf	convert_uint16_to_string@str^0,w,c
  2321   0038DA  A4D8               	btfss	status,2,c
  2322   0038DC  EF72  F01C         	goto	u6981
  2323   0038E0  EF74  F01C         	goto	u6980
  2324   0038E4                     u6981:
  2325   0038E4  EF78  F01C         	goto	l7524
  2326   0038E8                     u6980:
  2327   0038E8                     
  2328                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 262:         ret =(Std_ReturnType)0x00 ;
  2329   0038E8  0E00               	movlw	0
  2330   0038EA  6E35               	movwf	convert_uint16_to_string@ret^0,c
  2331                           
  2332                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 263:     }else {
  2333   0038EC  EFAD  F01C         	goto	l7536
  2334   0038F0                     l7524:
  2335                           
  2336                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 265:         memset(str , ' ', 5);
  2337   0038F0  C02E  F002         	movff	convert_uint16_to_string@str,memset@dest
  2338   0038F4  0E00               	movlw	0
  2339   0038F6  6E04               	movwf	(memset@c+1)^0,c
  2340   0038F8  0E20               	movlw	32
  2341   0038FA  6E03               	movwf	memset@c^0,c
  2342   0038FC  0E00               	movlw	0
  2343   0038FE  6E06               	movwf	(memset@n+1)^0,c
  2344   003900  0E05               	movlw	5
  2345   003902  6E05               	movwf	memset@n^0,c
  2346   003904  ECB3  F020         	call	_memset	;wreg free
  2347   003908                     
  2348                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 266:         str[5]='\0';
  2349   003908  502E               	movf	convert_uint16_to_string@str^0,w,c
  2350   00390A  6ED9               	movwf	fsr2l,c
  2351   00390C  6ADA               	clrf	fsr2h,c
  2352   00390E  0E05               	movlw	5
  2353   003910  26D9               	addwf	fsr2l,f,c
  2354   003912  6ADF               	clrf	indf2,c
  2355   003914                     
  2356                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 267:         sprintf( (char *)temp , "%i" , num);
  2357   003914  0E2F               	movlw	low convert_uint16_to_string@temp
  2358   003916  6E1B               	movwf	sprintf@s^0,c
  2359   003918  0E35               	movlw	low STR_1
  2360   00391A  6E1C               	movwf	sprintf@fmt^0,c
  2361   00391C  C02C  F01D         	movff	convert_uint16_to_string@num,?_sprintf+2
  2362   003920  C02D  F01E         	movff	convert_uint16_to_string@num+1,?_sprintf+3
  2363   003924  EC7F  F020         	call	_sprintf	;wreg free
  2364                           
  2365                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 268:         while(temp[counter]!='\0'){
  2366   003928  EFA1  F01C         	goto	l7534
  2367   00392C                     l7530:
  2368                           
  2369                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 269:         str[counter]= temp[counter] ;
  2370   00392C  5036               	movf	convert_uint16_to_string@counter^0,w,c
  2371   00392E  0F2F               	addlw	low convert_uint16_to_string@temp
  2372   003930  6ED9               	movwf	fsr2l,c
  2373   003932  6ADA               	clrf	fsr2h,c
  2374   003934  502E               	movf	convert_uint16_to_string@str^0,w,c
  2375   003936  2436               	addwf	convert_uint16_to_string@counter^0,w,c
  2376   003938  6EE1               	movwf	fsr1l,c
  2377   00393A  6AE2               	clrf	fsr1h,c
  2378   00393C  CFDF FFE7          	movff	indf2,indf1
  2379   003940                     
  2380                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 270:         counter++;
  2381   003940  2A36               	incf	convert_uint16_to_string@counter^0,f,c
  2382   003942                     l7534:
  2383                           
  2384                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 268:         while(temp[counter]!='\0'){
  2385   003942  5036               	movf	convert_uint16_to_string@counter^0,w,c
  2386   003944  0F2F               	addlw	low convert_uint16_to_string@temp
  2387   003946  6ED9               	movwf	fsr2l,c
  2388   003948  6ADA               	clrf	fsr2h,c
  2389   00394A  50DF               	movf	indf2,w,c
  2390   00394C  A4D8               	btfss	status,2,c
  2391   00394E  EFAB  F01C         	goto	u6991
  2392   003952  EFAD  F01C         	goto	u6990
  2393   003956                     u6991:
  2394   003956  EF96  F01C         	goto	l7530
  2395   00395A                     u6990:
  2396   00395A                     l7536:
  2397                           
  2398                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 273:     return ret;
  2399   00395A  5035               	movf	convert_uint16_to_string@ret^0,w,c
  2400   00395C  0012               	return		;funcret
  2401   00395E                     __end_of_convert_uint16_to_string:
  2402                           	callstack 0
  2403                           
  2404 ;; *************** function _sprintf *****************
  2405 ;; Defined at:
  2406 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  s               1   26[COMRAM] PTR unsigned char 
  2409 ;;		 -> convert_uint16_to_string@temp(6), 
  2410 ;;  fmt             1   27[COMRAM] PTR const unsigned char 
  2411 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  f              12   31[COMRAM] struct _IO_FILE
  2414 ;;  ret             2    0        int 
  2415 ;;  ap              1   30[COMRAM] PTR void [1]
  2416 ;;		 -> ?_sprintf(2), 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  2   26[COMRAM] int 
  2419 ;; Registers used:
  2420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2426 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;Total ram usage:       17 bytes
  2431 ;; Hardware stack levels used: 1
  2432 ;; Hardware stack levels required when called: 6
  2433 ;; This function calls:
  2434 ;;		_vfprintf
  2435 ;; This function is called by:
  2436 ;;		_convert_uint16_to_string
  2437 ;;		_convert_uint8_to_string
  2438 ;;		_convert_uint32_to_string
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text8
  2443   0040FE                     __ptext8:
  2444                           	callstack 0
  2445   0040FE                     _sprintf:
  2446                           	callstack 23
  2447   0040FE  0E1D               	movlw	low (?_sprintf+2)
  2448   004100  6E1F               	movwf	sprintf@ap^0,c
  2449   004102  C01B  F020         	movff	sprintf@s,sprintf@f
  2450   004106  0E00               	movlw	0
  2451   004108  6E24               	movwf	(sprintf@f+4)^0,c
  2452   00410A  0E00               	movlw	0
  2453   00410C  6E23               	movwf	(sprintf@f+3)^0,c
  2454   00410E  0E00               	movlw	0
  2455   004110  6E2B               	movwf	(sprintf@f+11)^0,c
  2456   004112  0E00               	movlw	0
  2457   004114  6E2A               	movwf	(sprintf@f+10)^0,c
  2458   004116  0E20               	movlw	low sprintf@f
  2459   004118  6E17               	movwf	vfprintf@fp^0,c
  2460   00411A  C01C  F018         	movff	sprintf@fmt,vfprintf@fmt
  2461   00411E  0E1F               	movlw	low sprintf@ap
  2462   004120  6E19               	movwf	vfprintf@ap^0,c
  2463   004122  ECCC  F01F         	call	_vfprintf	;wreg free
  2464   004126  501B               	movf	sprintf@s^0,w,c
  2465   004128  2423               	addwf	(sprintf@f+3)^0,w,c
  2466   00412A  6ED9               	movwf	fsr2l,c
  2467   00412C  6ADA               	clrf	fsr2h,c
  2468   00412E  6ADF               	clrf	indf2,c
  2469   004130  0012               	return		;funcret
  2470   004132                     __end_of_sprintf:
  2471                           	callstack 0
  2472                           
  2473 ;; *************** function _vfprintf *****************
  2474 ;; Defined at:
  2475 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  2478 ;;		 -> sprintf@f(12), 
  2479 ;;  fmt             1   23[COMRAM] PTR const unsigned char 
  2480 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2481 ;;  ap              1   24[COMRAM] PTR PTR void 
  2482 ;;		 -> sprintf@ap(1), 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  cfmt            1   25[COMRAM] PTR unsigned char 
  2485 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  2   22[COMRAM] int 
  2488 ;; Registers used:
  2489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2495 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;Total ram usage:        4 bytes
  2500 ;; Hardware stack levels used: 1
  2501 ;; Hardware stack levels required when called: 5
  2502 ;; This function calls:
  2503 ;;		_vfpfcnvrt
  2504 ;; This function is called by:
  2505 ;;		_sprintf
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text9
  2510   003F98                     __ptext9:
  2511                           	callstack 0
  2512   003F98                     _vfprintf:
  2513                           	callstack 23
  2514   003F98                     
  2515                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2516   003F98  C018  F01A         	movff	vfprintf@fmt,vfprintf@cfmt
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2519   003F9C  EFD8  F01F         	goto	l7138
  2520   003FA0                     l7136:
  2521                           
  2522                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2523   003FA0  C017  F00C         	movff	vfprintf@fp,vfpfcnvrt@fp
  2524   003FA4  0E1A               	movlw	low vfprintf@cfmt
  2525   003FA6  6E0D               	movwf	vfpfcnvrt@fmt^0,c
  2526   003FA8  C019  F00E         	movff	vfprintf@ap,vfpfcnvrt@ap
  2527   003FAC  ECE0  F015         	call	_vfpfcnvrt	;wreg free
  2528   003FB0                     l7138:
  2529                           
  2530                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2531   003FB0  C01A  FFF6         	movff	vfprintf@cfmt,tblptrl
  2532   003FB4                     	if	1	;There is more than 1 active tblptr byte
  2533   003FB4  0E10               	movlw	high __smallconst
  2534   003FB6  6EF7               	movwf	tblptrh,c
  2535   003FB8                     	endif
  2536   003FB8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2537   003FB8  6AF8               	clrf	tblptru,c
  2538   003FBA                     	endif
  2539   003FBA                     	if	0	;tblptru may be non-zero
  2540   003FBA                     	endif
  2541   003FBA  0008               	tblrd		*
  2542   003FBC  50F5               	movf	tablat,w,c
  2543   003FBE  0900               	iorlw	0
  2544   003FC0  A4D8               	btfss	status,2,c
  2545   003FC2  EFE5  F01F         	goto	u6601
  2546   003FC6  EFE7  F01F         	goto	u6600
  2547   003FCA                     u6601:
  2548   003FCA  EFD0  F01F         	goto	l7136
  2549   003FCE                     u6600:
  2550   003FCE                     
  2551                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2552   003FCE  0E00               	movlw	0
  2553   003FD0  6E18               	movwf	(?_vfprintf+1)^0,c
  2554   003FD2  0E00               	movlw	0
  2555   003FD4  6E17               	movwf	?_vfprintf^0,c
  2556   003FD6  0012               	return		;funcret
  2557   003FD8                     __end_of_vfprintf:
  2558                           	callstack 0
  2559                           
  2560 ;; *************** function _vfpfcnvrt *****************
  2561 ;; Defined at:
  2562 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
  2565 ;;		 -> sprintf@f(12), 
  2566 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
  2567 ;;		 -> vfprintf@cfmt(1), 
  2568 ;;  ap              1   13[COMRAM] PTR PTR void 
  2569 ;;		 -> sprintf@ap(1), 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  convarg         4   17[COMRAM] struct .
  2572 ;;  c               1   21[COMRAM] unsigned char 
  2573 ;;  cp              1   16[COMRAM] PTR unsigned char 
  2574 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2575 ;;  done            1   15[COMRAM] _Bool 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2585 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;Total ram usage:       11 bytes
  2590 ;; Hardware stack levels used: 1
  2591 ;; Hardware stack levels required when called: 4
  2592 ;; This function calls:
  2593 ;;		___awdiv
  2594 ;;		___awmod
  2595 ;;		_abs
  2596 ;;		_fputc
  2597 ;; This function is called by:
  2598 ;;		_vfprintf
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text10
  2603   002BC0                     __ptext10:
  2604                           	callstack 0
  2605   002BC0                     _vfpfcnvrt:
  2606                           	callstack 23
  2607   002BC0                     
  2608                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2609   002BC0  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2610   002BC2  6ED9               	movwf	fsr2l,c
  2611   002BC4  6ADA               	clrf	fsr2h,c
  2612   002BC6  CFDF FFF6          	movff	indf2,tblptrl
  2613   002BCA                     	if	1	;There is more than 1 active tblptr byte
  2614   002BCA  0E10               	movlw	high __smallconst
  2615   002BCC  6EF7               	movwf	tblptrh,c
  2616   002BCE                     	endif
  2617   002BCE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2618   002BCE  6AF8               	clrf	tblptru,c
  2619   002BD0                     	endif
  2620   002BD0                     	if	0	;tblptru may be non-zero
  2621   002BD0                     	endif
  2622   002BD0  0008               	tblrd		*
  2623   002BD2  50F5               	movf	tablat,w,c
  2624   002BD4  0A25               	xorlw	37
  2625   002BD6  A4D8               	btfss	status,2,c
  2626   002BD8  EFF0  F015         	goto	u6291
  2627   002BDC  EFF2  F015         	goto	u6290
  2628   002BE0                     u6291:
  2629   002BE0  EFB4  F016         	goto	l6914
  2630   002BE4                     u6290:
  2631   002BE4                     
  2632                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2633   002BE4  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2634   002BE6  6ED9               	movwf	fsr2l,c
  2635   002BE8  6ADA               	clrf	fsr2h,c
  2636   002BEA  2ADF               	incf	indf2,f,c
  2637   002BEC                     
  2638                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2639   002BEC  0E00               	movlw	0
  2640   002BEE  0100               	movlb	0	; () banked
  2641   002BF0  6F87               	movwf	(_width+1)& (0+255),b
  2642   002BF2  0E00               	movlw	0
  2643   002BF4  6F86               	movwf	_width& (0+255),b
  2644   002BF6  C086  F0BE         	movff	_width,_flags
  2645   002BFA                     
  2646                           ; BSR set to: 0
  2647                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2648   002BFA  6988               	setf	_prec& (0+255),b
  2649   002BFC  6989               	setf	(_prec+1)& (0+255),b
  2650   002BFE                     
  2651                           ; BSR set to: 0
  2652                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2653   002BFE  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2654   002C00  6ED9               	movwf	fsr2l,c
  2655   002C02  6ADA               	clrf	fsr2h,c
  2656   002C04  50DF               	movf	indf2,w,c
  2657   002C06  6E11               	movwf	vfpfcnvrt@cp^0,c
  2658   002C08                     
  2659                           ; BSR set to: 0
  2660                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2661   002C08  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2662   002C0C                     	if	1	;There is more than 1 active tblptr byte
  2663   002C0C  0E10               	movlw	high __smallconst
  2664   002C0E  6EF7               	movwf	tblptrh,c
  2665   002C10                     	endif
  2666   002C10                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2667   002C10  6AF8               	clrf	tblptru,c
  2668   002C12                     	endif
  2669   002C12                     	if	0	;tblptru may be non-zero
  2670   002C12                     	endif
  2671   002C12  0008               	tblrd		*
  2672   002C14  50F5               	movf	tablat,w,c
  2673   002C16  0A64               	xorlw	100
  2674   002C18  B4D8               	btfsc	status,2,c
  2675   002C1A  EF11  F016         	goto	u6301
  2676   002C1E  EF13  F016         	goto	u6300
  2677   002C22                     u6301:
  2678   002C22  EF22  F016         	goto	l6884
  2679   002C26                     u6300:
  2680   002C26                     
  2681                           ; BSR set to: 0
  2682   002C26  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2683   002C2A                     	if	1	;There is more than 1 active tblptr byte
  2684   002C2A  0E10               	movlw	high __smallconst
  2685   002C2C  6EF7               	movwf	tblptrh,c
  2686   002C2E                     	endif
  2687   002C2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2688   002C2E  6AF8               	clrf	tblptru,c
  2689   002C30                     	endif
  2690   002C30                     	if	0	;tblptru may be non-zero
  2691   002C30                     	endif
  2692   002C30  0008               	tblrd		*
  2693   002C32  50F5               	movf	tablat,w,c
  2694   002C34  0A69               	xorlw	105
  2695   002C36  A4D8               	btfss	status,2,c
  2696   002C38  EF20  F016         	goto	u6311
  2697   002C3C  EF22  F016         	goto	u6310
  2698   002C40                     u6311:
  2699   002C40  EFAE  F016         	goto	l6910
  2700   002C44                     u6310:
  2701   002C44                     l6884:
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2705   002C44  500E               	movf	vfpfcnvrt@ap^0,w,c
  2706   002C46  6ED9               	movwf	fsr2l,c
  2707   002C48  6ADA               	clrf	fsr2h,c
  2708   002C4A  0E02               	movlw	2
  2709   002C4C  26DF               	addwf	indf2,f,c
  2710   002C4E  5CDF               	subwf	indf2,w,c
  2711   002C50  6ED9               	movwf	fsr2l,c
  2712   002C52  6ADA               	clrf	fsr2h,c
  2713   002C54  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg
  2714   002C58  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg+1
  2715   002C5C                     
  2716                           ; BSR set to: 0
  2717                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2718   002C5C  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2719   002C5E  6ED9               	movwf	fsr2l,c
  2720   002C60  6ADA               	clrf	fsr2h,c
  2721   002C62  2811               	incf	vfpfcnvrt@cp^0,w,c
  2722   002C64  6EDF               	movwf	indf2,c
  2723   002C66                     
  2724                           ; BSR set to: 0
  2725                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2726   002C66  0E20               	movlw	32
  2727   002C68  6E16               	movwf	vfpfcnvrt@c^0,c
  2728                           
  2729                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2730   002C6A  BE13               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2731   002C6C  EF3A  F016         	goto	u6321
  2732   002C70  EF3D  F016         	goto	u6320
  2733   002C74                     u6321:
  2734   002C74  0E01               	movlw	1
  2735   002C76  EF3E  F016         	goto	u6330
  2736   002C7A                     u6320:
  2737   002C7A  0E00               	movlw	0
  2738   002C7C                     u6330:
  2739   002C7C  6E10               	movwf	vfpfcnvrt@done^0,c
  2740   002C7E                     l6890:
  2741                           
  2742                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2743   002C7E  0616               	decf	vfpfcnvrt@c^0,f,c
  2744   002C80  0E00               	movlw	low _dbuf
  2745   002C82  2416               	addwf	vfpfcnvrt@c^0,w,c
  2746   002C84  6ED9               	movwf	fsr2l,c
  2747   002C86  6ADA               	clrf	fsr2h,c
  2748   002C88  0E01               	movlw	high _dbuf
  2749   002C8A  22DA               	addwfc	fsr2h,f,c
  2750   002C8C  C012  F002         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2751   002C90  C013  F003         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2752   002C94  0E00               	movlw	0
  2753   002C96  6E05               	movwf	(___awmod@divisor+1)^0,c
  2754   002C98  0E0A               	movlw	10
  2755   002C9A  6E04               	movwf	___awmod@divisor^0,c
  2756   002C9C  EC67  F01B         	call	___awmod	;wreg free
  2757   002CA0  C002  F008         	movff	?___awmod,abs@a
  2758   002CA4  C003  F009         	movff	?___awmod+1,abs@a+1
  2759   002CA8  EC99  F020         	call	_abs	;wreg free
  2760   002CAC  5008               	movf	?_abs^0,w,c
  2761   002CAE  0F30               	addlw	48
  2762   002CB0  6EDF               	movwf	indf2,c
  2763   002CB2                     
  2764                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2765   002CB2  C012  F002         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2766   002CB6  C013  F003         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2767   002CBA  0E00               	movlw	0
  2768   002CBC  6E05               	movwf	(___awdiv@divisor+1)^0,c
  2769   002CBE  0E0A               	movlw	10
  2770   002CC0  6E04               	movwf	___awdiv@divisor^0,c
  2771   002CC2  ECA6  F01A         	call	___awdiv	;wreg free
  2772   002CC6  C002  F012         	movff	?___awdiv,vfpfcnvrt@convarg
  2773   002CCA  C003  F013         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2774   002CCE                     
  2775                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2776   002CCE  5012               	movf	vfpfcnvrt@convarg^0,w,c
  2777   002CD0  1013               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2778   002CD2  B4D8               	btfsc	status,2,c
  2779   002CD4  EF6E  F016         	goto	u6341
  2780   002CD8  EF70  F016         	goto	u6340
  2781   002CDC                     u6341:
  2782   002CDC  EF78  F016         	goto	l6898
  2783   002CE0                     u6340:
  2784   002CE0  5016               	movf	vfpfcnvrt@c^0,w,c
  2785   002CE2  A4D8               	btfss	status,2,c
  2786   002CE4  EF76  F016         	goto	u6351
  2787   002CE8  EF78  F016         	goto	u6350
  2788   002CEC                     u6351:
  2789   002CEC  EF3F  F016         	goto	l6890
  2790   002CF0                     u6350:
  2791   002CF0                     l6898:
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2794   002CF0  5016               	movf	vfpfcnvrt@c^0,w,c
  2795   002CF2  B4D8               	btfsc	status,2,c
  2796   002CF4  EF7E  F016         	goto	u6361
  2797   002CF8  EF80  F016         	goto	u6360
  2798   002CFC                     u6361:
  2799   002CFC  EFA3  F016         	goto	l6908
  2800   002D00                     u6360:
  2801   002D00  5010               	movf	vfpfcnvrt@done^0,w,c
  2802   002D02  B4D8               	btfsc	status,2,c
  2803   002D04  EF86  F016         	goto	u6371
  2804   002D08  EF88  F016         	goto	u6370
  2805   002D0C                     u6371:
  2806   002D0C  EFA3  F016         	goto	l6908
  2807   002D10                     u6370:
  2808   002D10                     
  2809                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2810   002D10  0616               	decf	vfpfcnvrt@c^0,f,c
  2811   002D12  0E00               	movlw	low _dbuf
  2812   002D14  2416               	addwf	vfpfcnvrt@c^0,w,c
  2813   002D16  6ED9               	movwf	fsr2l,c
  2814   002D18  6ADA               	clrf	fsr2h,c
  2815   002D1A  0E01               	movlw	high _dbuf
  2816   002D1C  22DA               	addwfc	fsr2h,f,c
  2817   002D1E  0E2D               	movlw	45
  2818   002D20  6EDF               	movwf	indf2,c
  2819   002D22  EFA3  F016         	goto	l6908
  2820   002D26                     l6904:
  2821                           
  2822                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2823   002D26  0E00               	movlw	low _dbuf
  2824   002D28  2416               	addwf	vfpfcnvrt@c^0,w,c
  2825   002D2A  6ED9               	movwf	fsr2l,c
  2826   002D2C  6ADA               	clrf	fsr2h,c
  2827   002D2E  0E01               	movlw	high _dbuf
  2828   002D30  22DA               	addwfc	fsr2h,f,c
  2829   002D32  50DF               	movf	indf2,w,c
  2830   002D34  6E0F               	movwf	??_vfpfcnvrt^0,c
  2831   002D36  500F               	movf	??_vfpfcnvrt^0,w,c
  2832   002D38  6E02               	movwf	fputc@c^0,c
  2833   002D3A  6A03               	clrf	(fputc@c+1)^0,c
  2834   002D3C  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2835   002D40  ECBF  F01B         	call	_fputc	;wreg free
  2836   002D44  2A16               	incf	vfpfcnvrt@c^0,f,c
  2837   002D46                     l6908:
  2838                           
  2839                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2840   002D46  0E20               	movlw	32
  2841   002D48  1816               	xorwf	vfpfcnvrt@c^0,w,c
  2842   002D4A  A4D8               	btfss	status,2,c
  2843   002D4C  EFAA  F016         	goto	u6381
  2844   002D50  EFAC  F016         	goto	u6380
  2845   002D54                     u6381:
  2846   002D54  EF93  F016         	goto	l6904
  2847   002D58                     u6380:
  2848   002D58  EFC6  F016         	goto	l2520
  2849   002D5C                     l6910:
  2850                           
  2851                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2852   002D5C  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2853   002D5E  6ED9               	movwf	fsr2l,c
  2854   002D60  6ADA               	clrf	fsr2h,c
  2855   002D62  2ADF               	incf	indf2,f,c
  2856   002D64  EFC6  F016         	goto	l2520
  2857   002D68                     l6914:
  2858                           
  2859                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2860   002D68  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2861   002D6A  6ED9               	movwf	fsr2l,c
  2862   002D6C  6ADA               	clrf	fsr2h,c
  2863   002D6E  CFDF FFF6          	movff	indf2,tblptrl
  2864   002D72                     	if	1	;There is more than 1 active tblptr byte
  2865   002D72  0E10               	movlw	high __smallconst
  2866   002D74  6EF7               	movwf	tblptrh,c
  2867   002D76                     	endif
  2868   002D76                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2869   002D76  6AF8               	clrf	tblptru,c
  2870   002D78                     	endif
  2871   002D78                     	if	0	;tblptru may be non-zero
  2872   002D78                     	endif
  2873   002D78  0008               	tblrd		*
  2874   002D7A  50F5               	movf	tablat,w,c
  2875   002D7C  6E02               	movwf	fputc@c^0,c
  2876   002D7E  6A03               	clrf	(fputc@c+1)^0,c
  2877   002D80  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2878   002D84  ECBF  F01B         	call	_fputc	;wreg free
  2879   002D88  EFAE  F016         	goto	l6910
  2880   002D8C                     l2520:
  2881   002D8C  0012               	return		;funcret
  2882   002D8E                     __end_of_vfpfcnvrt:
  2883                           	callstack 0
  2884                           
  2885 ;; *************** function _fputc *****************
  2886 ;; Defined at:
  2887 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  c               2    1[COMRAM] int 
  2890 ;;  fp              1    3[COMRAM] PTR struct _IO_FILE
  2891 ;;		 -> sprintf@f(12), 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;		None
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  2    1[COMRAM] int 
  2896 ;; Registers used:
  2897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2903 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2905 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2906 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;Total ram usage:        8 bytes
  2908 ;; Hardware stack levels used: 1
  2909 ;; Hardware stack levels required when called: 3
  2910 ;; This function calls:
  2911 ;;		_putch
  2912 ;; This function is called by:
  2913 ;;		_vfpfcnvrt
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text11
  2918   00377E                     __ptext11:
  2919                           	callstack 0
  2920   00377E                     _fputc:
  2921                           	callstack 23
  2922   00377E  5004               	movf	fputc@fp^0,w,c
  2923   003780  B4D8               	btfsc	status,2,c
  2924   003782  EFC5  F01B         	goto	u5151
  2925   003786  EFC7  F01B         	goto	u5150
  2926   00378A                     u5151:
  2927   00378A  EFCF  F01B         	goto	l6234
  2928   00378E                     u5150:
  2929   00378E  5004               	movf	fputc@fp^0,w,c
  2930   003790  A4D8               	btfss	status,2,c
  2931   003792  EFCD  F01B         	goto	u5161
  2932   003796  EFCF  F01B         	goto	u5160
  2933   00379A                     u5161:
  2934   00379A  EFD4  F01B         	goto	l6236
  2935   00379E                     u5160:
  2936   00379E                     l6234:
  2937   00379E  5002               	movf	fputc@c^0,w,c
  2938   0037A0  EC94  F021         	call	_putch
  2939   0037A4  EF13  F01C         	goto	l2545
  2940   0037A8                     l6236:
  2941   0037A8  5004               	movf	fputc@fp^0,w,c
  2942   0037AA  6ED9               	movwf	fsr2l,c
  2943   0037AC  6ADA               	clrf	fsr2h,c
  2944   0037AE  0E0A               	movlw	10
  2945   0037B0  26D9               	addwf	fsr2l,f,c
  2946   0037B2  50DE               	movf	postinc2,w,c
  2947   0037B4  10DE               	iorwf	postinc2,w,c
  2948   0037B6  B4D8               	btfsc	status,2,c
  2949   0037B8  EFE0  F01B         	goto	u5171
  2950   0037BC  EFE2  F01B         	goto	u5170
  2951   0037C0                     u5171:
  2952   0037C0  EFFB  F01B         	goto	l6240
  2953   0037C4                     u5170:
  2954   0037C4  5004               	movf	fputc@fp^0,w,c
  2955   0037C6  6ED9               	movwf	fsr2l,c
  2956   0037C8  6ADA               	clrf	fsr2h,c
  2957   0037CA  0E0A               	movlw	10
  2958   0037CC  26D9               	addwf	fsr2l,f,c
  2959   0037CE  5004               	movf	fputc@fp^0,w,c
  2960   0037D0  6EE1               	movwf	fsr1l,c
  2961   0037D2  6AE2               	clrf	fsr1h,c
  2962   0037D4  0E03               	movlw	3
  2963   0037D6  26E1               	addwf	fsr1l,f,c
  2964   0037D8  50DE               	movf	postinc2,w,c
  2965   0037DA  5CE6               	subwf	postinc1,w,c
  2966   0037DC  50E6               	movf	postinc1,w,c
  2967   0037DE  0A80               	xorlw	128
  2968   0037E0  6E09               	movwf	(??_fputc+4)^0,c
  2969   0037E2  50DE               	movf	postinc2,w,c
  2970   0037E4  0A80               	xorlw	128
  2971   0037E6  5809               	subwfb	(??_fputc+4)^0,w,c
  2972   0037E8  B0D8               	btfsc	status,0,c
  2973   0037EA  EFF9  F01B         	goto	u5181
  2974   0037EE  EFFB  F01B         	goto	u5180
  2975   0037F2                     u5181:
  2976   0037F2  EF13  F01C         	goto	l2545
  2977   0037F6                     u5180:
  2978   0037F6                     l6240:
  2979   0037F6  5004               	movf	fputc@fp^0,w,c
  2980   0037F8  6ED9               	movwf	fsr2l,c
  2981   0037FA  6ADA               	clrf	fsr2h,c
  2982   0037FC  0E03               	movlw	3
  2983   0037FE  26D9               	addwf	fsr2l,f,c
  2984   003800  50DF               	movf	indf2,w,c
  2985   003802  6E05               	movwf	??_fputc^0,c
  2986   003804  5004               	movf	fputc@fp^0,w,c
  2987   003806  6ED9               	movwf	fsr2l,c
  2988   003808  6ADA               	clrf	fsr2h,c
  2989   00380A  50DF               	movf	indf2,w,c
  2990   00380C  2405               	addwf	??_fputc^0,w,c
  2991   00380E  6ED9               	movwf	fsr2l,c
  2992   003810  6ADA               	clrf	fsr2h,c
  2993   003812  C002  FFDF         	movff	fputc@c,indf2
  2994   003816  5004               	movf	fputc@fp^0,w,c
  2995   003818  6ED9               	movwf	fsr2l,c
  2996   00381A  6ADA               	clrf	fsr2h,c
  2997   00381C  0E03               	movlw	3
  2998   00381E  26D9               	addwf	fsr2l,f,c
  2999   003820  2ADE               	incf	postinc2,f,c
  3000   003822  0E00               	movlw	0
  3001   003824  22DD               	addwfc	postdec2,f,c
  3002   003826                     l2545:
  3003   003826  0012               	return		;funcret
  3004   003828                     __end_of_fputc:
  3005                           	callstack 0
  3006                           
  3007 ;; *************** function _putch *****************
  3008 ;; Defined at:
  3009 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  c               1    wreg     unsigned char 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  c               1    0[COMRAM] unsigned char 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		wreg
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3027 ;;Total ram usage:        0 bytes
  3028 ;; Hardware stack levels used: 1
  3029 ;; Hardware stack levels required when called: 2
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_fputc
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text12
  3038   004328                     __ptext12:
  3039                           	callstack 0
  3040   004328                     _putch:
  3041                           	callstack 23
  3042   004328  0012               	return		;funcret
  3043   00432A                     __end_of_putch:
  3044                           	callstack 0
  3045                           
  3046 ;; *************** function _abs *****************
  3047 ;; Defined at:
  3048 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;  a               2    7[COMRAM] int 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  2    7[COMRAM] int 
  3055 ;; Registers used:
  3056 ;;		wreg, status,2, status,0
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3065 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;Total ram usage:        4 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; Hardware stack levels required when called: 2
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_vfpfcnvrt
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text13
  3077   004132                     __ptext13:
  3078                           	callstack 0
  3079   004132                     _abs:
  3080                           	callstack 24
  3081   004132  BE09               	btfsc	(abs@a+1)^0,7,c
  3082   004134  EF9E  F020         	goto	u5191
  3083   004138  EFA0  F020         	goto	u5190
  3084   00413C                     u5191:
  3085   00413C  EFA6  F020         	goto	l2530
  3086   004140                     u5190:
  3087   004140  C008  F008         	movff	abs@a,?_abs
  3088   004144  C009  F009         	movff	abs@a+1,?_abs+1
  3089   004148  EFB2  F020         	goto	l2533
  3090   00414C                     l2530:
  3091   00414C  C008  F00A         	movff	abs@a,??_abs
  3092   004150  C009  F00B         	movff	abs@a+1,??_abs+1
  3093   004154  1E0A               	comf	??_abs^0,f,c
  3094   004156  1E0B               	comf	(??_abs+1)^0,f,c
  3095   004158  4A0A               	infsnz	??_abs^0,f,c
  3096   00415A  2A0B               	incf	(??_abs+1)^0,f,c
  3097   00415C  C00A  F008         	movff	??_abs,?_abs
  3098   004160  C00B  F009         	movff	??_abs+1,?_abs+1
  3099   004164                     l2533:
  3100   004164  0012               	return		;funcret
  3101   004166                     __end_of_abs:
  3102                           	callstack 0
  3103                           
  3104 ;; *************** function ___awmod *****************
  3105 ;; Defined at:
  3106 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  dividend        2    1[COMRAM] int 
  3109 ;;  divisor         2    3[COMRAM] int 
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;  sign            1    6[COMRAM] unsigned char 
  3112 ;;  counter         1    5[COMRAM] unsigned char 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  2    1[COMRAM] int 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3122 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3123 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3126 ;;Total ram usage:        6 bytes
  3127 ;; Hardware stack levels used: 1
  3128 ;; Hardware stack levels required when called: 2
  3129 ;; This function calls:
  3130 ;;		Nothing
  3131 ;; This function is called by:
  3132 ;;		_vfpfcnvrt
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           	psect	text14
  3137   0036CE                     __ptext14:
  3138                           	callstack 0
  3139   0036CE                     ___awmod:
  3140                           	callstack 24
  3141   0036CE  0E00               	movlw	0
  3142   0036D0  6E07               	movwf	___awmod@sign^0,c
  3143   0036D2  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  3144   0036D4  EF70  F01B         	goto	u5090
  3145   0036D8  EF6E  F01B         	goto	u5091
  3146   0036DC                     u5091:
  3147   0036DC  EF76  F01B         	goto	l6202
  3148   0036E0                     u5090:
  3149   0036E0  6C02               	negf	___awmod@dividend^0,c
  3150   0036E2  1E03               	comf	(___awmod@dividend+1)^0,f,c
  3151   0036E4  B0D8               	btfsc	status,0,c
  3152   0036E6  2A03               	incf	(___awmod@dividend+1)^0,f,c
  3153   0036E8  0E01               	movlw	1
  3154   0036EA  6E07               	movwf	___awmod@sign^0,c
  3155   0036EC                     l6202:
  3156   0036EC  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  3157   0036EE  EF7D  F01B         	goto	u5100
  3158   0036F2  EF7B  F01B         	goto	u5101
  3159   0036F6                     u5101:
  3160   0036F6  EF81  F01B         	goto	l6206
  3161   0036FA                     u5100:
  3162   0036FA  6C04               	negf	___awmod@divisor^0,c
  3163   0036FC  1E05               	comf	(___awmod@divisor+1)^0,f,c
  3164   0036FE  B0D8               	btfsc	status,0,c
  3165   003700  2A05               	incf	(___awmod@divisor+1)^0,f,c
  3166   003702                     l6206:
  3167   003702  5004               	movf	___awmod@divisor^0,w,c
  3168   003704  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  3169   003706  B4D8               	btfsc	status,2,c
  3170   003708  EF88  F01B         	goto	u5111
  3171   00370C  EF8A  F01B         	goto	u5110
  3172   003710                     u5111:
  3173   003710  EFAE  F01B         	goto	l6222
  3174   003714                     u5110:
  3175   003714  0E01               	movlw	1
  3176   003716  6E06               	movwf	___awmod@counter^0,c
  3177   003718  EF92  F01B         	goto	l6212
  3178   00371C                     l6210:
  3179   00371C  90D8               	bcf	status,0,c
  3180   00371E  3604               	rlcf	___awmod@divisor^0,f,c
  3181   003720  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  3182   003722  2A06               	incf	___awmod@counter^0,f,c
  3183   003724                     l6212:
  3184   003724  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  3185   003726  EF97  F01B         	goto	u5121
  3186   00372A  EF99  F01B         	goto	u5120
  3187   00372E                     u5121:
  3188   00372E  EF8E  F01B         	goto	l6210
  3189   003732                     u5120:
  3190   003732                     l6214:
  3191   003732  5004               	movf	___awmod@divisor^0,w,c
  3192   003734  5C02               	subwf	___awmod@dividend^0,w,c
  3193   003736  5005               	movf	(___awmod@divisor+1)^0,w,c
  3194   003738  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  3195   00373A  A0D8               	btfss	status,0,c
  3196   00373C  EFA2  F01B         	goto	u5131
  3197   003740  EFA4  F01B         	goto	u5130
  3198   003744                     u5131:
  3199   003744  EFA8  F01B         	goto	l6218
  3200   003748                     u5130:
  3201   003748  5004               	movf	___awmod@divisor^0,w,c
  3202   00374A  5E02               	subwf	___awmod@dividend^0,f,c
  3203   00374C  5005               	movf	(___awmod@divisor+1)^0,w,c
  3204   00374E  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  3205   003750                     l6218:
  3206   003750  90D8               	bcf	status,0,c
  3207   003752  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  3208   003754  3204               	rrcf	___awmod@divisor^0,f,c
  3209   003756  2E06               	decfsz	___awmod@counter^0,f,c
  3210   003758  EF99  F01B         	goto	l6214
  3211   00375C                     l6222:
  3212   00375C  5007               	movf	___awmod@sign^0,w,c
  3213   00375E  B4D8               	btfsc	status,2,c
  3214   003760  EFB4  F01B         	goto	u5141
  3215   003764  EFB6  F01B         	goto	u5140
  3216   003768                     u5141:
  3217   003768  EFBA  F01B         	goto	l6226
  3218   00376C                     u5140:
  3219   00376C  6C02               	negf	___awmod@dividend^0,c
  3220   00376E  1E03               	comf	(___awmod@dividend+1)^0,f,c
  3221   003770  B0D8               	btfsc	status,0,c
  3222   003772  2A03               	incf	(___awmod@dividend+1)^0,f,c
  3223   003774                     l6226:
  3224   003774  C002  F002         	movff	___awmod@dividend,?___awmod
  3225   003778  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  3226   00377C  0012               	return		;funcret
  3227   00377E                     __end_of___awmod:
  3228                           	callstack 0
  3229                           
  3230 ;; *************** function ___awdiv *****************
  3231 ;; Defined at:
  3232 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  dividend        2    1[COMRAM] int 
  3235 ;;  divisor         2    3[COMRAM] int 
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;  quotient        2    7[COMRAM] int 
  3238 ;;  sign            1    6[COMRAM] unsigned char 
  3239 ;;  counter         1    5[COMRAM] unsigned char 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  2    1[COMRAM] int 
  3242 ;; Registers used:
  3243 ;;		wreg, status,2, status,0
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3249 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3250 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;Total ram usage:        8 bytes
  3254 ;; Hardware stack levels used: 1
  3255 ;; Hardware stack levels required when called: 2
  3256 ;; This function calls:
  3257 ;;		Nothing
  3258 ;; This function is called by:
  3259 ;;		_vfpfcnvrt
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           	psect	text15
  3264   00354C                     __ptext15:
  3265                           	callstack 0
  3266   00354C                     ___awdiv:
  3267                           	callstack 24
  3268   00354C  0E00               	movlw	0
  3269   00354E  6E07               	movwf	___awdiv@sign^0,c
  3270   003550  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  3271   003552  EFAF  F01A         	goto	u5030
  3272   003556  EFAD  F01A         	goto	u5031
  3273   00355A                     u5031:
  3274   00355A  EFB5  F01A         	goto	l6158
  3275   00355E                     u5030:
  3276   00355E  6C04               	negf	___awdiv@divisor^0,c
  3277   003560  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  3278   003562  B0D8               	btfsc	status,0,c
  3279   003564  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  3280   003566  0E01               	movlw	1
  3281   003568  6E07               	movwf	___awdiv@sign^0,c
  3282   00356A                     l6158:
  3283   00356A  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  3284   00356C  EFBC  F01A         	goto	u5040
  3285   003570  EFBA  F01A         	goto	u5041
  3286   003574                     u5041:
  3287   003574  EFC2  F01A         	goto	l6164
  3288   003578                     u5040:
  3289   003578  6C02               	negf	___awdiv@dividend^0,c
  3290   00357A  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  3291   00357C  B0D8               	btfsc	status,0,c
  3292   00357E  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  3293   003580  0E01               	movlw	1
  3294   003582  1A07               	xorwf	___awdiv@sign^0,f,c
  3295   003584                     l6164:
  3296   003584  0E00               	movlw	0
  3297   003586  6E09               	movwf	(___awdiv@quotient+1)^0,c
  3298   003588  0E00               	movlw	0
  3299   00358A  6E08               	movwf	___awdiv@quotient^0,c
  3300   00358C  5004               	movf	___awdiv@divisor^0,w,c
  3301   00358E  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  3302   003590  B4D8               	btfsc	status,2,c
  3303   003592  EFCD  F01A         	goto	u5051
  3304   003596  EFCF  F01A         	goto	u5050
  3305   00359A                     u5051:
  3306   00359A  EFF7  F01A         	goto	l6186
  3307   00359E                     u5050:
  3308   00359E  0E01               	movlw	1
  3309   0035A0  6E06               	movwf	___awdiv@counter^0,c
  3310   0035A2  EFD7  F01A         	goto	l6172
  3311   0035A6                     l6170:
  3312   0035A6  90D8               	bcf	status,0,c
  3313   0035A8  3604               	rlcf	___awdiv@divisor^0,f,c
  3314   0035AA  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  3315   0035AC  2A06               	incf	___awdiv@counter^0,f,c
  3316   0035AE                     l6172:
  3317   0035AE  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  3318   0035B0  EFDC  F01A         	goto	u5061
  3319   0035B4  EFDE  F01A         	goto	u5060
  3320   0035B8                     u5061:
  3321   0035B8  EFD3  F01A         	goto	l6170
  3322   0035BC                     u5060:
  3323   0035BC                     l6174:
  3324   0035BC  90D8               	bcf	status,0,c
  3325   0035BE  3608               	rlcf	___awdiv@quotient^0,f,c
  3326   0035C0  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  3327   0035C2  5004               	movf	___awdiv@divisor^0,w,c
  3328   0035C4  5C02               	subwf	___awdiv@dividend^0,w,c
  3329   0035C6  5005               	movf	(___awdiv@divisor+1)^0,w,c
  3330   0035C8  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  3331   0035CA  A0D8               	btfss	status,0,c
  3332   0035CC  EFEA  F01A         	goto	u5071
  3333   0035D0  EFEC  F01A         	goto	u5070
  3334   0035D4                     u5071:
  3335   0035D4  EFF1  F01A         	goto	l6182
  3336   0035D8                     u5070:
  3337   0035D8  5004               	movf	___awdiv@divisor^0,w,c
  3338   0035DA  5E02               	subwf	___awdiv@dividend^0,f,c
  3339   0035DC  5005               	movf	(___awdiv@divisor+1)^0,w,c
  3340   0035DE  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  3341   0035E0  8008               	bsf	___awdiv@quotient^0,0,c
  3342   0035E2                     l6182:
  3343   0035E2  90D8               	bcf	status,0,c
  3344   0035E4  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  3345   0035E6  3204               	rrcf	___awdiv@divisor^0,f,c
  3346   0035E8  2E06               	decfsz	___awdiv@counter^0,f,c
  3347   0035EA  EFDE  F01A         	goto	l6174
  3348   0035EE                     l6186:
  3349   0035EE  5007               	movf	___awdiv@sign^0,w,c
  3350   0035F0  B4D8               	btfsc	status,2,c
  3351   0035F2  EFFD  F01A         	goto	u5081
  3352   0035F6  EFFF  F01A         	goto	u5080
  3353   0035FA                     u5081:
  3354   0035FA  EF03  F01B         	goto	l6190
  3355   0035FE                     u5080:
  3356   0035FE  6C08               	negf	___awdiv@quotient^0,c
  3357   003600  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  3358   003602  B0D8               	btfsc	status,0,c
  3359   003604  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  3360   003606                     l6190:
  3361   003606  C008  F002         	movff	___awdiv@quotient,?___awdiv
  3362   00360A  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  3363   00360E  0012               	return		;funcret
  3364   003610                     __end_of___awdiv:
  3365                           	callstack 0
  3366                           
  3367 ;; *************** function _memset *****************
  3368 ;; Defined at:
  3369 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  dest            1    1[COMRAM] PTR void 
  3372 ;;		 -> str(6), 
  3373 ;;  c               2    2[COMRAM] int 
  3374 ;;  n               2    4[COMRAM] unsigned int 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  p               1    6[COMRAM] PTR unsigned char 
  3377 ;;		 -> str(6), 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      PTR void 
  3380 ;; Registers used:
  3381 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3387 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;Total ram usage:        6 bytes
  3392 ;; Hardware stack levels used: 1
  3393 ;; Hardware stack levels required when called: 2
  3394 ;; This function calls:
  3395 ;;		Nothing
  3396 ;; This function is called by:
  3397 ;;		_convert_uint16_to_string
  3398 ;;		_convert_uint8_to_string
  3399 ;;		_convert_uint32_to_string
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           	psect	text16
  3404   004166                     __ptext16:
  3405                           	callstack 0
  3406   004166                     _memset:
  3407                           	callstack 27
  3408   004166  C002  F007         	movff	memset@dest,memset@p
  3409   00416A  EFBD  F020         	goto	l7272
  3410   00416E                     l7268:
  3411   00416E  5007               	movf	memset@p^0,w,c
  3412   004170  6ED9               	movwf	fsr2l,c
  3413   004172  6ADA               	clrf	fsr2h,c
  3414   004174  C003  FFDF         	movff	memset@c,indf2
  3415   004178  2A07               	incf	memset@p^0,f,c
  3416   00417A                     l7272:
  3417   00417A  0605               	decf	memset@n^0,f,c
  3418   00417C  A0D8               	btfss	status,0,c
  3419   00417E  0606               	decf	(memset@n+1)^0,f,c
  3420   004180  2805               	incf	memset@n^0,w,c
  3421   004182  E106               	bnz	u6681
  3422   004184  2806               	incf	(memset@n+1)^0,w,c
  3423   004186  A4D8               	btfss	status,2,c
  3424   004188  EFC8  F020         	goto	u6681
  3425   00418C  EFCA  F020         	goto	u6680
  3426   004190                     u6681:
  3427   004190  EFB7  F020         	goto	l7268
  3428   004194                     u6680:
  3429   004194  0012               	return		;funcret
  3430   004196                     __end_of_memset:
  3431                           	callstack 0
  3432                           
  3433 ;; *************** function _ccp_init *****************
  3434 ;; Defined at:
  3435 ;;		line 68 in file "application.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;		None
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;		None
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  1    wreg      void 
  3442 ;; Registers used:
  3443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;Total ram usage:        0 bytes
  3454 ;; Hardware stack levels used: 1
  3455 ;; Hardware stack levels required when called: 5
  3456 ;; This function calls:
  3457 ;;		_CCP_INIt
  3458 ;;		_START_PWM
  3459 ;; This function is called by:
  3460 ;;		_main
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text17
  3465   003F50                     __ptext17:
  3466                           	callstack 0
  3467   003F50                     _ccp_init:
  3468                           	callstack 25
  3469   003F50                     
  3470                           ;application.c: 69: ccp_obj.PWM_Freq =5000 ;
  3471   003F50  0E13               	movlw	19
  3472   003F52  0100               	movlb	0	; () banked
  3473   003F54  6FC8               	movwf	(_ccp_obj+7)& (0+255),b
  3474   003F56  0E88               	movlw	136
  3475   003F58  6FC7               	movwf	(_ccp_obj+6)& (0+255),b
  3476                           
  3477                           ;application.c: 70: ccp_obj.CCP_Mode = CCP_MODULE_PWM_MODE ;
  3478   003F5A  0E02               	movlw	2
  3479   003F5C  6FCC               	movwf	(_ccp_obj+11)& (0+255),b
  3480                           
  3481                           ;application.c: 71: ccp_obj.Sub_mode = (uint8)(0x0C) ;
  3482   003F5E  51CD               	movf	(_ccp_obj+12)& (0+255),w,b
  3483   003F60  0BF0               	andlw	-16
  3484   003F62  090C               	iorlw	12
  3485   003F64  6FCD               	movwf	(_ccp_obj+12)& (0+255),b
  3486                           
  3487                           ;application.c: 72: ccp_obj.ccp_inst= CCP1_INST ;
  3488   003F66  0E00               	movlw	0
  3489   003F68  6FCB               	movwf	(_ccp_obj+10)& (0+255),b
  3490                           
  3491                           ;application.c: 73: ccp_obj.timer2_postscaler = CCP_TIMER2_POSTSCALER_DIV_1 ;
  3492   003F6A  0E01               	movlw	1
  3493   003F6C  6FCA               	movwf	(_ccp_obj+9)& (0+255),b
  3494                           
  3495                           ;application.c: 74: ccp_obj.timer2_prescaler =CCP_TIMER2_PRESCALER_DIV_1 ;
  3496   003F6E  0E01               	movlw	1
  3497   003F70  6FC9               	movwf	(_ccp_obj+8)& (0+255),b
  3498   003F72                     
  3499                           ; BSR set to: 0
  3500                           ;application.c: 75: ccp_obj.ccp_pin.direction = OUTPUT ;
  3501   003F72  9DCF               	bcf	(_ccp_obj+14)& (0+255),6,b
  3502   003F74                     
  3503                           ; BSR set to: 0
  3504                           ;application.c: 76: ccp_obj.ccp_pin.logic = LOGIC_LOW ;
  3505   003F74  9FCF               	bcf	(_ccp_obj+14)& (0+255),7,b
  3506                           
  3507                           ;application.c: 77: ccp_obj.ccp_pin.pin =PIN2;
  3508   003F76  51CF               	movf	(_ccp_obj+14)& (0+255),w,b
  3509   003F78  0BC7               	andlw	-57
  3510   003F7A  0910               	iorlw	16
  3511   003F7C  6FCF               	movwf	(_ccp_obj+14)& (0+255),b
  3512                           
  3513                           ;application.c: 78: ccp_obj.ccp_pin.port =PORTC_INDEX ;
  3514   003F7E  51CF               	movf	(_ccp_obj+14)& (0+255),w,b
  3515   003F80  0BF8               	andlw	-8
  3516   003F82  0902               	iorlw	2
  3517   003F84  6FCF               	movwf	(_ccp_obj+14)& (0+255),b
  3518   003F86                     
  3519                           ; BSR set to: 0
  3520                           ;application.c: 79: CCP_INIt(&ccp_obj);
  3521   003F86  0EC1               	movlw	low _ccp_obj
  3522   003F88  6E67               	movwf	CCP_INIt@_ccp^0,c
  3523   003F8A  ECBC  F01D         	call	_CCP_INIt	;wreg free
  3524   003F8E                     
  3525                           ;application.c: 80: START_PWM(&ccp_obj);
  3526   003F8E  0EC1               	movlw	low _ccp_obj
  3527   003F90  6E02               	movwf	START_PWM@_ccp^0,c
  3528   003F92  EC83  F01F         	call	_START_PWM	;wreg free
  3529   003F96  0012               	return		;funcret
  3530   003F98                     __end_of_ccp_init:
  3531                           	callstack 0
  3532                           
  3533 ;; *************** function _START_PWM *****************
  3534 ;; Defined at:
  3535 ;;		line 53 in file "MCAL_Layer/CPP1/hal_ccp.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  _ccp            1    1[COMRAM] PTR const struct .
  3538 ;;		 -> ccp_obj(15), 
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;  ret             1    0        unsigned char 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  1    wreg      unsigned char 
  3543 ;; Registers used:
  3544 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3550 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3552 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3553 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3554 ;;Total ram usage:        2 bytes
  3555 ;; Hardware stack levels used: 1
  3556 ;; Hardware stack levels required when called: 2
  3557 ;; This function calls:
  3558 ;;		Nothing
  3559 ;; This function is called by:
  3560 ;;		_ccp_init
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           	psect	text18
  3565   003F06                     __ptext18:
  3566                           	callstack 0
  3567   003F06                     _START_PWM:
  3568                           	callstack 27
  3569   003F06                     
  3570                           ;MCAL_Layer/CPP1/hal_ccp.c: 55: if(CCP1_INST ==_ccp->ccp_inst ){
  3571   003F06  5002               	movf	START_PWM@_ccp^0,w,c
  3572   003F08  6ED9               	movwf	fsr2l,c
  3573   003F0A  6ADA               	clrf	fsr2h,c
  3574   003F0C  0E0A               	movlw	10
  3575   003F0E  26D9               	addwf	fsr2l,f,c
  3576   003F10  50DF               	movf	indf2,w,c
  3577   003F12  A4D8               	btfss	status,2,c
  3578   003F14  EF8E  F01F         	goto	u6831
  3579   003F18  EF90  F01F         	goto	u6830
  3580   003F1C                     u6831:
  3581   003F1C  EF96  F01F         	goto	l7408
  3582   003F20                     u6830:
  3583   003F20                     
  3584                           ;MCAL_Layer/CPP1/hal_ccp.c: 56: (CCP1CONbits.CCP1M =(uint8)(0x0C));
  3585   003F20  50BD               	movf	189,w,c	;volatile
  3586   003F22  0BF0               	andlw	-16
  3587   003F24  090C               	iorlw	12
  3588   003F26  6EBD               	movwf	189,c	;volatile
  3589                           
  3590                           ;MCAL_Layer/CPP1/hal_ccp.c: 57: }else if(CCP2_INST ==_ccp->ccp_inst ){
  3591   003F28  EFA7  F01F         	goto	l509
  3592   003F2C                     l7408:
  3593   003F2C  5002               	movf	START_PWM@_ccp^0,w,c
  3594   003F2E  6ED9               	movwf	fsr2l,c
  3595   003F30  6ADA               	clrf	fsr2h,c
  3596   003F32  0E0A               	movlw	10
  3597   003F34  26D9               	addwf	fsr2l,f,c
  3598   003F36  04DE               	decf	postinc2,w,c
  3599   003F38  A4D8               	btfss	status,2,c
  3600   003F3A  EFA1  F01F         	goto	u6841
  3601   003F3E  EFA3  F01F         	goto	u6840
  3602   003F42                     u6841:
  3603   003F42  EFA7  F01F         	goto	l509
  3604   003F46                     u6840:
  3605   003F46                     
  3606                           ;MCAL_Layer/CPP1/hal_ccp.c: 58: (CCP2CONbits.CCP2M =(uint8)(0x0C));
  3607   003F46  50BA               	movf	186,w,c	;volatile
  3608   003F48  0BF0               	andlw	-16
  3609   003F4A  090C               	iorlw	12
  3610   003F4C  6EBA               	movwf	186,c	;volatile
  3611   003F4E                     l509:
  3612   003F4E  0012               	return		;funcret
  3613   003F50                     __end_of_START_PWM:
  3614                           	callstack 0
  3615                           
  3616 ;; *************** function _CCP_INIt *****************
  3617 ;; Defined at:
  3618 ;;		line 11 in file "MCAL_Layer/CPP1/hal_ccp.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  _ccp            1  102[COMRAM] PTR const struct .
  3621 ;;		 -> ccp_obj(15), 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  ret             1    0        unsigned char 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  1    wreg      unsigned char 
  3626 ;; Registers used:
  3627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3633 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Totals:         1       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;Total ram usage:        2 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; Hardware stack levels required when called: 4
  3640 ;; This function calls:
  3641 ;;		_ccp_interrupt
  3642 ;;		_configure_mode
  3643 ;;		_gpio_pin_intialize
  3644 ;; This function is called by:
  3645 ;;		_ccp_init
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text19
  3650   003B78                     __ptext19:
  3651                           	callstack 0
  3652   003B78                     _CCP_INIt:
  3653                           	callstack 25
  3654   003B78                     
  3655                           ;MCAL_Layer/CPP1/hal_ccp.c: 13:     if(((void*)0) == _ccp){
  3656   003B78  5067               	movf	CCP_INIt@_ccp^0,w,c
  3657   003B7A  A4D8               	btfss	status,2,c
  3658   003B7C  EFC2  F01D         	goto	u9251
  3659   003B80  EFC4  F01D         	goto	u9250
  3660   003B84                     u9251:
  3661   003B84  EFC6  F01D         	goto	l9334
  3662   003B88                     u9250:
  3663   003B88                     
  3664                           ;MCAL_Layer/CPP1/hal_ccp.c: 15:     }else{
  3665   003B88  EFF3  F01D         	goto	l495
  3666   003B8C                     l9334:
  3667                           
  3668                           ;MCAL_Layer/CPP1/hal_ccp.c: 17:         if(CCP1_INST==_ccp->ccp_inst){
  3669   003B8C  5067               	movf	CCP_INIt@_ccp^0,w,c
  3670   003B8E  6ED9               	movwf	fsr2l,c
  3671   003B90  6ADA               	clrf	fsr2h,c
  3672   003B92  0E0A               	movlw	10
  3673   003B94  26D9               	addwf	fsr2l,f,c
  3674   003B96  50DF               	movf	indf2,w,c
  3675   003B98  A4D8               	btfss	status,2,c
  3676   003B9A  EFD1  F01D         	goto	u9261
  3677   003B9E  EFD3  F01D         	goto	u9260
  3678   003BA2                     u9261:
  3679   003BA2  EFD7  F01D         	goto	l9338
  3680   003BA6                     u9260:
  3681   003BA6                     
  3682                           ;MCAL_Layer/CPP1/hal_ccp.c: 18:         (CCP1CONbits.CCP1M =(uint8)(0x00));
  3683   003BA6  0EF0               	movlw	-16
  3684   003BA8  16BD               	andwf	189,f,c	;volatile
  3685                           
  3686                           ;MCAL_Layer/CPP1/hal_ccp.c: 19:         }else
  3687   003BAA  EFE6  F01D         	goto	l9342
  3688   003BAE                     l9338:
  3689                           
  3690                           ;MCAL_Layer/CPP1/hal_ccp.c: 20:              if(CCP2_INST==_ccp->ccp_inst){
  3691   003BAE  5067               	movf	CCP_INIt@_ccp^0,w,c
  3692   003BB0  6ED9               	movwf	fsr2l,c
  3693   003BB2  6ADA               	clrf	fsr2h,c
  3694   003BB4  0E0A               	movlw	10
  3695   003BB6  26D9               	addwf	fsr2l,f,c
  3696   003BB8  04DE               	decf	postinc2,w,c
  3697   003BBA  A4D8               	btfss	status,2,c
  3698   003BBC  EFE2  F01D         	goto	u9271
  3699   003BC0  EFE4  F01D         	goto	u9270
  3700   003BC4                     u9271:
  3701   003BC4  EFE6  F01D         	goto	l9342
  3702   003BC8                     u9270:
  3703   003BC8                     
  3704                           ;MCAL_Layer/CPP1/hal_ccp.c: 21:         (CCP2CONbits.CCP2M =(uint8)(0x00));
  3705   003BC8  0EF0               	movlw	-16
  3706   003BCA  16BA               	andwf	186,f,c	;volatile
  3707   003BCC                     l9342:
  3708   003BCC  5067               	movf	CCP_INIt@_ccp^0,w,c
  3709   003BCE  0F0E               	addlw	14
  3710   003BD0  6E0A               	movwf	gpio_pin_intialize@_pin_t^0,c
  3711   003BD2  ECCD  F01E         	call	_gpio_pin_intialize	;wreg free
  3712   003BD6                     
  3713                           ;MCAL_Layer/CPP1/hal_ccp.c: 25:       configure_mode(_ccp);
  3714   003BD6  C067  F05C         	movff	CCP_INIt@_ccp,configure_mode@_ccp
  3715   003BDA  EC1D  F008         	call	_configure_mode	;wreg free
  3716   003BDE                     
  3717                           ;MCAL_Layer/CPP1/hal_ccp.c: 26:       ccp_interrupt(_ccp);
  3718   003BDE  C067  F002         	movff	CCP_INIt@_ccp,ccp_interrupt@_ccp
  3719   003BE2  EC58  F01F         	call	_ccp_interrupt	;wreg free
  3720   003BE6                     l495:
  3721   003BE6  0012               	return		;funcret
  3722   003BE8                     __end_of_CCP_INIt:
  3723                           	callstack 0
  3724                           
  3725 ;; *************** function _configure_mode *****************
  3726 ;; Defined at:
  3727 ;;		line 197 in file "MCAL_Layer/CPP1/hal_ccp.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;  _ccp            1   91[COMRAM] PTR const struct .
  3730 ;;		 -> ccp_obj(15), 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;		None
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      void 
  3735 ;; Registers used:
  3736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3742 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3743 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3746 ;;Total ram usage:       11 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; Hardware stack levels required when called: 3
  3749 ;; This function calls:
  3750 ;;		___fladd
  3751 ;;		___fldiv
  3752 ;;		___flmul
  3753 ;;		___fltol
  3754 ;;		___xxtofl
  3755 ;;		_selected_timer
  3756 ;; This function is called by:
  3757 ;;		_CCP_INIt
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761                           	psect	text20
  3762   00103A                     __ptext20:
  3763                           	callstack 0
  3764   00103A                     _configure_mode:
  3765                           	callstack 25
  3766   00103A                     
  3767                           ;MCAL_Layer/CPP1/hal_ccp.c: 198:         if(CCP1_INST ==_ccp->ccp_inst ){
  3768   00103A  505C               	movf	configure_mode@_ccp^0,w,c
  3769   00103C  6ED9               	movwf	fsr2l,c
  3770   00103E  6ADA               	clrf	fsr2h,c
  3771   001040  0E0A               	movlw	10
  3772   001042  26D9               	addwf	fsr2l,f,c
  3773   001044  50DF               	movf	indf2,w,c
  3774   001046  A4D8               	btfss	status,2,c
  3775   001048  EF28  F008         	goto	u6481
  3776   00104C  EF2A  F008         	goto	u6480
  3777   001050                     u6481:
  3778   001050  EF99  F009         	goto	l7054
  3779   001054                     u6480:
  3780   001054                     
  3781                           ;MCAL_Layer/CPP1/hal_ccp.c: 200:     if(0x00 == _ccp->CCP_Mode){
  3782   001054  505C               	movf	configure_mode@_ccp^0,w,c
  3783   001056  6ED9               	movwf	fsr2l,c
  3784   001058  6ADA               	clrf	fsr2h,c
  3785   00105A  0E0B               	movlw	11
  3786   00105C  26D9               	addwf	fsr2l,f,c
  3787   00105E  50DF               	movf	indf2,w,c
  3788   001060  A4D8               	btfss	status,2,c
  3789   001062  EF35  F008         	goto	u6491
  3790   001066  EF37  F008         	goto	u6490
  3791   00106A                     u6491:
  3792   00106A  EF84  F008         	goto	l7030
  3793   00106E                     u6490:
  3794   00106E  EF57  F008         	goto	l7026
  3795   001072                     l7016:
  3796                           
  3797                           ;MCAL_Layer/CPP1/hal_ccp.c: 204:                     (CCP1CONbits.CCP1M =(uint8)(0x02));
  3798   001072  50BD               	movf	189,w,c	;volatile
  3799   001074  0BF0               	andlw	-16
  3800   001076  0902               	iorlw	2
  3801   001078  6EBD               	movwf	189,c	;volatile
  3802                           
  3803                           ;MCAL_Layer/CPP1/hal_ccp.c: 205:                     break ;
  3804   00107A  EF7E  F008         	goto	l7028
  3805   00107E                     l7018:
  3806                           
  3807                           ;MCAL_Layer/CPP1/hal_ccp.c: 207:                         (CCP1CONbits.CCP1M =(uint8)(0x0
      +                          8));
  3808   00107E  50BD               	movf	189,w,c	;volatile
  3809   001080  0BF0               	andlw	-16
  3810   001082  0908               	iorlw	8
  3811   001084  6EBD               	movwf	189,c	;volatile
  3812                           
  3813                           ;MCAL_Layer/CPP1/hal_ccp.c: 208:                     break ;
  3814   001086  EF7E  F008         	goto	l7028
  3815   00108A                     l7020:
  3816                           
  3817                           ;MCAL_Layer/CPP1/hal_ccp.c: 210:                         (CCP1CONbits.CCP1M =(uint8)(0x0
      +                          9));
  3818   00108A  50BD               	movf	189,w,c	;volatile
  3819   00108C  0BF0               	andlw	-16
  3820   00108E  0909               	iorlw	9
  3821   001090  6EBD               	movwf	189,c	;volatile
  3822                           
  3823                           ;MCAL_Layer/CPP1/hal_ccp.c: 211:                     break ;
  3824   001092  EF7E  F008         	goto	l7028
  3825   001096                     l7022:
  3826                           
  3827                           ;MCAL_Layer/CPP1/hal_ccp.c: 213:                         (CCP1CONbits.CCP1M =(uint8)(0x0
      +                          A));
  3828   001096  50BD               	movf	189,w,c	;volatile
  3829   001098  0BF0               	andlw	-16
  3830   00109A  090A               	iorlw	10
  3831   00109C  6EBD               	movwf	189,c	;volatile
  3832                           
  3833                           ;MCAL_Layer/CPP1/hal_ccp.c: 214:                     break ;
  3834   00109E  EF7E  F008         	goto	l7028
  3835   0010A2                     l7024:
  3836                           
  3837                           ;MCAL_Layer/CPP1/hal_ccp.c: 216:                          (CCP1CONbits.CCP1M =(uint8)(0x
      +                          0B));
  3838   0010A2  50BD               	movf	189,w,c	;volatile
  3839   0010A4  0BF0               	andlw	-16
  3840   0010A6  090B               	iorlw	11
  3841   0010A8  6EBD               	movwf	189,c	;volatile
  3842                           
  3843                           ;MCAL_Layer/CPP1/hal_ccp.c: 217:                     break ;
  3844   0010AA  EF7E  F008         	goto	l7028
  3845   0010AE                     l7026:
  3846   0010AE  505C               	movf	configure_mode@_ccp^0,w,c
  3847   0010B0  6ED9               	movwf	fsr2l,c
  3848   0010B2  6ADA               	clrf	fsr2h,c
  3849   0010B4  0E0C               	movlw	12
  3850   0010B6  26D9               	addwf	fsr2l,f,c
  3851   0010B8  50DF               	movf	223,w,c
  3852   0010BA  0B0F               	andlw	15
  3853   0010BC  6E5D               	movwf	??_configure_mode^0,c
  3854   0010BE  6A5E               	clrf	(??_configure_mode+1)^0,c
  3855                           
  3856                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3857                           ; Switch size 1, requested type "simple"
  3858                           ; Number of cases is 1, Range of values is 0 to 0
  3859                           ; switch strategies available:
  3860                           ; Name         Instructions Cycles
  3861                           ; simple_byte            4     3 (average)
  3862                           ;	Chosen strategy is simple_byte
  3863   0010C0  505E               	movf	(??_configure_mode+1)^0,w,c
  3864   0010C2  0A00               	xorlw	0	; case 0
  3865   0010C4  B4D8               	btfsc	status,2,c
  3866   0010C6  EF67  F008         	goto	l9620
  3867   0010CA  EF7E  F008         	goto	l7028
  3868   0010CE                     l9620:
  3869                           
  3870                           ; Switch size 1, requested type "simple"
  3871                           ; Number of cases is 5, Range of values is 2 to 11
  3872                           ; switch strategies available:
  3873                           ; Name         Instructions Cycles
  3874                           ; simple_byte           16     9 (average)
  3875                           ;	Chosen strategy is simple_byte
  3876   0010CE  505D               	movf	??_configure_mode^0,w,c
  3877   0010D0  0A02               	xorlw	2	; case 2
  3878   0010D2  B4D8               	btfsc	status,2,c
  3879   0010D4  EF39  F008         	goto	l7016
  3880   0010D8  0A0A               	xorlw	10	; case 8
  3881   0010DA  B4D8               	btfsc	status,2,c
  3882   0010DC  EF3F  F008         	goto	l7018
  3883   0010E0  0A01               	xorlw	1	; case 9
  3884   0010E2  B4D8               	btfsc	status,2,c
  3885   0010E4  EF45  F008         	goto	l7020
  3886   0010E8  0A03               	xorlw	3	; case 10
  3887   0010EA  B4D8               	btfsc	status,2,c
  3888   0010EC  EF4B  F008         	goto	l7022
  3889   0010F0  0A01               	xorlw	1	; case 11
  3890   0010F2  B4D8               	btfsc	status,2,c
  3891   0010F4  EF51  F008         	goto	l7024
  3892   0010F8  EF7E  F008         	goto	l7028
  3893   0010FC                     l7028:
  3894                           
  3895                           ;MCAL_Layer/CPP1/hal_ccp.c: 221:             selected_timer(_ccp);
  3896   0010FC  C05C  F002         	movff	configure_mode@_ccp,selected_timer@_ccp
  3897   001100  EC9A  F01E         	call	_selected_timer	;wreg free
  3898                           
  3899                           ;MCAL_Layer/CPP1/hal_ccp.c: 222:         }else if(0x01 == _ccp->CCP_Mode){
  3900   001104  EF0B  F00B         	goto	l581
  3901   001108                     l7030:
  3902   001108  505C               	movf	configure_mode@_ccp^0,w,c
  3903   00110A  6ED9               	movwf	fsr2l,c
  3904   00110C  6ADA               	clrf	fsr2h,c
  3905   00110E  0E0B               	movlw	11
  3906   001110  26D9               	addwf	fsr2l,f,c
  3907   001112  04DE               	decf	postinc2,w,c
  3908   001114  A4D8               	btfss	status,2,c
  3909   001116  EF8F  F008         	goto	u6501
  3910   00111A  EF91  F008         	goto	u6500
  3911   00111E                     u6501:
  3912   00111E  EFCE  F008         	goto	l7046
  3913   001122                     u6500:
  3914   001122  EFAB  F008         	goto	l7042
  3915   001126                     l7034:
  3916                           
  3917                           ;MCAL_Layer/CPP1/hal_ccp.c: 226:                     (CCP1CONbits.CCP1M =(uint8)(0x04));
  3918   001126  50BD               	movf	189,w,c	;volatile
  3919   001128  0BF0               	andlw	-16
  3920   00112A  0904               	iorlw	4
  3921   00112C  6EBD               	movwf	189,c	;volatile
  3922                           
  3923                           ;MCAL_Layer/CPP1/hal_ccp.c: 227:                     break ;
  3924   00112E  EF7E  F008         	goto	l7028
  3925   001132                     l7036:
  3926                           
  3927                           ;MCAL_Layer/CPP1/hal_ccp.c: 229:                         (CCP1CONbits.CCP1M =(uint8)(0x0
      +                          5));
  3928   001132  50BD               	movf	189,w,c	;volatile
  3929   001134  0BF0               	andlw	-16
  3930   001136  0905               	iorlw	5
  3931   001138  6EBD               	movwf	189,c	;volatile
  3932                           
  3933                           ;MCAL_Layer/CPP1/hal_ccp.c: 230:                     break ;
  3934   00113A  EF7E  F008         	goto	l7028
  3935   00113E                     l7038:
  3936                           
  3937                           ;MCAL_Layer/CPP1/hal_ccp.c: 232:                         (CCP1CONbits.CCP1M =(uint8)(0x0
      +                          6));
  3938   00113E  50BD               	movf	189,w,c	;volatile
  3939   001140  0BF0               	andlw	-16
  3940   001142  0906               	iorlw	6
  3941   001144  6EBD               	movwf	189,c	;volatile
  3942                           
  3943                           ;MCAL_Layer/CPP1/hal_ccp.c: 233:                     break ;
  3944   001146  EF7E  F008         	goto	l7028
  3945   00114A                     l7040:
  3946                           
  3947                           ;MCAL_Layer/CPP1/hal_ccp.c: 235:                         (CCP1CONbits.CCP1M =(uint8)(0x0
      +                          7));
  3948   00114A  50BD               	movf	189,w,c	;volatile
  3949   00114C  0BF0               	andlw	-16
  3950   00114E  0907               	iorlw	7
  3951   001150  6EBD               	movwf	189,c	;volatile
  3952                           
  3953                           ;MCAL_Layer/CPP1/hal_ccp.c: 236:                     break ;
  3954   001152  EF7E  F008         	goto	l7028
  3955   001156                     l7042:
  3956   001156  505C               	movf	configure_mode@_ccp^0,w,c
  3957   001158  6ED9               	movwf	fsr2l,c
  3958   00115A  6ADA               	clrf	fsr2h,c
  3959   00115C  0E0C               	movlw	12
  3960   00115E  26D9               	addwf	fsr2l,f,c
  3961   001160  50DF               	movf	223,w,c
  3962   001162  0B0F               	andlw	15
  3963   001164  6E5D               	movwf	??_configure_mode^0,c
  3964   001166  6A5E               	clrf	(??_configure_mode+1)^0,c
  3965                           
  3966                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3967                           ; Switch size 1, requested type "simple"
  3968                           ; Number of cases is 1, Range of values is 0 to 0
  3969                           ; switch strategies available:
  3970                           ; Name         Instructions Cycles
  3971                           ; simple_byte            4     3 (average)
  3972                           ;	Chosen strategy is simple_byte
  3973   001168  505E               	movf	(??_configure_mode+1)^0,w,c
  3974   00116A  0A00               	xorlw	0	; case 0
  3975   00116C  B4D8               	btfsc	status,2,c
  3976   00116E  EFBB  F008         	goto	l9622
  3977   001172  EF7E  F008         	goto	l7028
  3978   001176                     l9622:
  3979                           
  3980                           ; Switch size 1, requested type "simple"
  3981                           ; Number of cases is 4, Range of values is 4 to 7
  3982                           ; switch strategies available:
  3983                           ; Name         Instructions Cycles
  3984                           ; simple_byte           13     7 (average)
  3985                           ;	Chosen strategy is simple_byte
  3986   001176  505D               	movf	??_configure_mode^0,w,c
  3987   001178  0A04               	xorlw	4	; case 4
  3988   00117A  B4D8               	btfsc	status,2,c
  3989   00117C  EF93  F008         	goto	l7034
  3990   001180  0A01               	xorlw	1	; case 5
  3991   001182  B4D8               	btfsc	status,2,c
  3992   001184  EF99  F008         	goto	l7036
  3993   001188  0A03               	xorlw	3	; case 6
  3994   00118A  B4D8               	btfsc	status,2,c
  3995   00118C  EF9F  F008         	goto	l7038
  3996   001190  0A01               	xorlw	1	; case 7
  3997   001192  B4D8               	btfsc	status,2,c
  3998   001194  EFA5  F008         	goto	l7040
  3999   001198  EF7E  F008         	goto	l7028
  4000   00119C                     l7046:
  4001   00119C  505C               	movf	configure_mode@_ccp^0,w,c
  4002   00119E  6ED9               	movwf	fsr2l,c
  4003   0011A0  6ADA               	clrf	fsr2h,c
  4004   0011A2  0E0B               	movlw	11
  4005   0011A4  26D9               	addwf	fsr2l,f,c
  4006   0011A6  0E02               	movlw	2
  4007   0011A8  18DE               	xorwf	postinc2,w,c
  4008   0011AA  A4D8               	btfss	status,2,c
  4009   0011AC  EFDA  F008         	goto	u6511
  4010   0011B0  EFDC  F008         	goto	u6510
  4011   0011B4                     u6511:
  4012   0011B4  EF97  F009         	goto	l544
  4013   0011B8                     u6510:
  4014   0011B8                     
  4015                           ;MCAL_Layer/CPP1/hal_ccp.c: 243:            if((uint8)(0x0C) == _ccp->Sub_mode){
  4016   0011B8  505C               	movf	configure_mode@_ccp^0,w,c
  4017   0011BA  6ED9               	movwf	fsr2l,c
  4018   0011BC  6ADA               	clrf	fsr2h,c
  4019   0011BE  0E0C               	movlw	12
  4020   0011C0  26D9               	addwf	fsr2l,f,c
  4021   0011C2  50DF               	movf	223,w,c
  4022   0011C4  0B0F               	andlw	15
  4023   0011C6  0A0C               	xorlw	12
  4024   0011C8  A4D8               	btfss	status,2,c
  4025   0011CA  EFE9  F008         	goto	u6521
  4026   0011CE  EFEB  F008         	goto	u6520
  4027   0011D2                     u6521:
  4028   0011D2  EFEF  F008         	goto	l7052
  4029   0011D6                     u6520:
  4030   0011D6                     
  4031                           ;MCAL_Layer/CPP1/hal_ccp.c: 244:         (CCP1CONbits.CCP1M =(uint8)(0x0C));
  4032   0011D6  50BD               	movf	189,w,c	;volatile
  4033   0011D8  0BF0               	andlw	-16
  4034   0011DA  090C               	iorlw	12
  4035   0011DC  6EBD               	movwf	189,c	;volatile
  4036   0011DE                     l7052:
  4037                           
  4038                           ;MCAL_Layer/CPP1/hal_ccp.c: 249:          PR2 =(uint8 )((8000000UL/(_ccp->PWM_Freq * 4.0
      +                           * _ccp->timer2_prescaler *_ccp->timer2_postscaler))-1);
  4039   0011DE  0E00               	movlw	0
  4040   0011E0  6E14               	movwf	___flmul@a^0,c
  4041   0011E2  0E00               	movlw	0
  4042   0011E4  6E15               	movwf	(___flmul@a+1)^0,c
  4043   0011E6  0E80               	movlw	128
  4044   0011E8  6E16               	movwf	(___flmul@a+2)^0,c
  4045   0011EA  0E40               	movlw	64
  4046   0011EC  6E17               	movwf	(___flmul@a+3)^0,c
  4047   0011EE  505C               	movf	configure_mode@_ccp^0,w,c
  4048   0011F0  6ED9               	movwf	fsr2l,c
  4049   0011F2  6ADA               	clrf	fsr2h,c
  4050   0011F4  0E06               	movlw	6
  4051   0011F6  26D9               	addwf	fsr2l,f,c
  4052   0011F8  CFDE F05D          	movff	postinc2,??_configure_mode
  4053   0011FC  CFDD F05E          	movff	postdec2,??_configure_mode+1
  4054   001200  C05D  F002         	movff	??_configure_mode,___xxtofl@val
  4055   001204  C05E  F003         	movff	??_configure_mode+1,___xxtofl@val+1
  4056   001208  6A04               	clrf	(___xxtofl@val+2)^0,c
  4057   00120A  6A05               	clrf	(___xxtofl@val+3)^0,c
  4058   00120C  0E00               	movlw	0
  4059   00120E  ECC7  F016         	call	___xxtofl
  4060   001212  C002  F010         	movff	?___xxtofl,___flmul@b
  4061   001216  C003  F011         	movff	?___xxtofl+1,___flmul@b+1
  4062   00121A  C004  F012         	movff	?___xxtofl+2,___flmul@b+2
  4063   00121E  C005  F013         	movff	?___xxtofl+3,___flmul@b+3
  4064   001222  EC6C  F00D         	call	___flmul	;wreg free
  4065   001226  C010  F05F         	movff	?___flmul,_configure_mode$5774
  4066   00122A  C011  F060         	movff	?___flmul+1,_configure_mode$5774+1
  4067   00122E  C012  F061         	movff	?___flmul+2,_configure_mode$5774+2
  4068   001232  C013  F062         	movff	?___flmul+3,_configure_mode$5774+3
  4069                           
  4070                           ;MCAL_Layer/CPP1/hal_ccp.c: 249:          PR2 =(uint8 )((8000000UL/(_ccp->PWM_Freq * 4.0
      +                           * _ccp->timer2_prescaler *_ccp->timer2_postscaler))-1);
  4071   001236  505C               	movf	configure_mode@_ccp^0,w,c
  4072   001238  6ED9               	movwf	fsr2l,c
  4073   00123A  6ADA               	clrf	fsr2h,c
  4074   00123C  0E08               	movlw	8
  4075   00123E  26D9               	addwf	fsr2l,f,c
  4076   001240  50DF               	movf	indf2,w,c
  4077   001242  6E5D               	movwf	??_configure_mode^0,c
  4078   001244  505D               	movf	??_configure_mode^0,w,c
  4079   001246  6E02               	movwf	___xxtofl@val^0,c
  4080   001248  6A03               	clrf	(___xxtofl@val+1)^0,c
  4081   00124A  6A04               	clrf	(___xxtofl@val+2)^0,c
  4082   00124C  6A05               	clrf	(___xxtofl@val+3)^0,c
  4083   00124E  0E00               	movlw	0
  4084   001250  ECC7  F016         	call	___xxtofl
  4085   001254  C002  F014         	movff	?___xxtofl,___flmul@a
  4086   001258  C003  F015         	movff	?___xxtofl+1,___flmul@a+1
  4087   00125C  C004  F016         	movff	?___xxtofl+2,___flmul@a+2
  4088   001260  C005  F017         	movff	?___xxtofl+3,___flmul@a+3
  4089   001264  C05F  F010         	movff	_configure_mode$5774,___flmul@b
  4090   001268  C060  F011         	movff	_configure_mode$5774+1,___flmul@b+1
  4091   00126C  C061  F012         	movff	_configure_mode$5774+2,___flmul@b+2
  4092   001270  C062  F013         	movff	_configure_mode$5774+3,___flmul@b+3
  4093   001274  EC6C  F00D         	call	___flmul	;wreg free
  4094   001278  C010  F063         	movff	?___flmul,_configure_mode$5775
  4095   00127C  C011  F064         	movff	?___flmul+1,_configure_mode$5775+1
  4096   001280  C012  F065         	movff	?___flmul+2,_configure_mode$5775+2
  4097   001284  C013  F066         	movff	?___flmul+3,_configure_mode$5775+3
  4098                           
  4099                           ;MCAL_Layer/CPP1/hal_ccp.c: 249:          PR2 =(uint8 )((8000000UL/(_ccp->PWM_Freq * 4.0
      +                           * _ccp->timer2_prescaler *_ccp->timer2_postscaler))-1);
  4100   001288  0E00               	movlw	0
  4101   00128A  6E46               	movwf	___fladd@a^0,c
  4102   00128C  0E00               	movlw	0
  4103   00128E  6E47               	movwf	(___fladd@a+1)^0,c
  4104   001290  0E80               	movlw	128
  4105   001292  6E48               	movwf	(___fladd@a+2)^0,c
  4106   001294  0EBF               	movlw	191
  4107   001296  6E49               	movwf	(___fladd@a+3)^0,c
  4108   001298  505C               	movf	configure_mode@_ccp^0,w,c
  4109   00129A  6ED9               	movwf	fsr2l,c
  4110   00129C  6ADA               	clrf	fsr2h,c
  4111   00129E  0E09               	movlw	9
  4112   0012A0  26D9               	addwf	fsr2l,f,c
  4113   0012A2  50DF               	movf	indf2,w,c
  4114   0012A4  6E5D               	movwf	??_configure_mode^0,c
  4115   0012A6  505D               	movf	??_configure_mode^0,w,c
  4116   0012A8  6E02               	movwf	___xxtofl@val^0,c
  4117   0012AA  6A03               	clrf	(___xxtofl@val+1)^0,c
  4118   0012AC  6A04               	clrf	(___xxtofl@val+2)^0,c
  4119   0012AE  6A05               	clrf	(___xxtofl@val+3)^0,c
  4120   0012B0  0E00               	movlw	0
  4121   0012B2  ECC7  F016         	call	___xxtofl
  4122   0012B6  C002  F014         	movff	?___xxtofl,___flmul@a
  4123   0012BA  C003  F015         	movff	?___xxtofl+1,___flmul@a+1
  4124   0012BE  C004  F016         	movff	?___xxtofl+2,___flmul@a+2
  4125   0012C2  C005  F017         	movff	?___xxtofl+3,___flmul@a+3
  4126   0012C6  C063  F010         	movff	_configure_mode$5775,___flmul@b
  4127   0012CA  C064  F011         	movff	_configure_mode$5775+1,___flmul@b+1
  4128   0012CE  C065  F012         	movff	_configure_mode$5775+2,___flmul@b+2
  4129   0012D2  C066  F013         	movff	_configure_mode$5775+3,___flmul@b+3
  4130   0012D6  EC6C  F00D         	call	___flmul	;wreg free
  4131   0012DA  C010  F02D         	movff	?___flmul,___fldiv@a
  4132   0012DE  C011  F02E         	movff	?___flmul+1,___fldiv@a+1
  4133   0012E2  C012  F02F         	movff	?___flmul+2,___fldiv@a+2
  4134   0012E6  C013  F030         	movff	?___flmul+3,___fldiv@a+3
  4135   0012EA  0E00               	movlw	0
  4136   0012EC  6E29               	movwf	___fldiv@b^0,c
  4137   0012EE  0E24               	movlw	36
  4138   0012F0  6E2A               	movwf	(___fldiv@b+1)^0,c
  4139   0012F2  0EF4               	movlw	244
  4140   0012F4  6E2B               	movwf	(___fldiv@b+2)^0,c
  4141   0012F6  0E4A               	movlw	74
  4142   0012F8  6E2C               	movwf	(___fldiv@b+3)^0,c
  4143   0012FA  EC84  F011         	call	___fldiv	;wreg free
  4144   0012FE  C029  F042         	movff	?___fldiv,___fladd@b
  4145   001302  C02A  F043         	movff	?___fldiv+1,___fladd@b+1
  4146   001306  C02B  F044         	movff	?___fldiv+2,___fladd@b+2
  4147   00130A  C02C  F045         	movff	?___fldiv+3,___fladd@b+3
  4148   00130E  EC0C  F00B         	call	___fladd	;wreg free
  4149   001312  C042  F052         	movff	?___fladd,___fltol@f1
  4150   001316  C043  F053         	movff	?___fladd+1,___fltol@f1+1
  4151   00131A  C044  F054         	movff	?___fladd+2,___fltol@f1+2
  4152   00131E  C045  F055         	movff	?___fladd+3,___fltol@f1+3
  4153   001322  EC44  F019         	call	___fltol	;wreg free
  4154   001326  5052               	movf	?___fltol^0,w,c
  4155   001328  6ECB               	movwf	203,c	;volatile
  4156   00132A  EF0B  F00B         	goto	l581
  4157   00132E                     l544:
  4158                           
  4159                           ;MCAL_Layer/CPP1/hal_ccp.c: 254:         }
  4160   00132E  EF0B  F00B         	goto	l581
  4161   001332                     l7054:
  4162   001332  505C               	movf	configure_mode@_ccp^0,w,c
  4163   001334  6ED9               	movwf	fsr2l,c
  4164   001336  6ADA               	clrf	fsr2h,c
  4165   001338  0E0A               	movlw	10
  4166   00133A  26D9               	addwf	fsr2l,f,c
  4167   00133C  04DE               	decf	postinc2,w,c
  4168   00133E  A4D8               	btfss	status,2,c
  4169   001340  EFA4  F009         	goto	u6531
  4170   001344  EFA6  F009         	goto	u6530
  4171   001348                     u6531:
  4172   001348  EF0B  F00B         	goto	l581
  4173   00134C                     u6530:
  4174   00134C                     
  4175                           ;MCAL_Layer/CPP1/hal_ccp.c: 256:          if(0x00 == _ccp->CCP_Mode){
  4176   00134C  505C               	movf	configure_mode@_ccp^0,w,c
  4177   00134E  6ED9               	movwf	fsr2l,c
  4178   001350  6ADA               	clrf	fsr2h,c
  4179   001352  0E0B               	movlw	11
  4180   001354  26D9               	addwf	fsr2l,f,c
  4181   001356  50DF               	movf	indf2,w,c
  4182   001358  A4D8               	btfss	status,2,c
  4183   00135A  EFB1  F009         	goto	u6541
  4184   00135E  EFB3  F009         	goto	u6540
  4185   001362                     u6541:
  4186   001362  EFFA  F009         	goto	l7074
  4187   001366                     u6540:
  4188   001366  EFD3  F009         	goto	l7070
  4189   00136A                     l7060:
  4190                           
  4191                           ;MCAL_Layer/CPP1/hal_ccp.c: 260:                     (CCP2CONbits.CCP2M =(uint8)(0x02));
  4192   00136A  50BA               	movf	186,w,c	;volatile
  4193   00136C  0BF0               	andlw	-16
  4194   00136E  0902               	iorlw	2
  4195   001370  6EBA               	movwf	186,c	;volatile
  4196                           
  4197                           ;MCAL_Layer/CPP1/hal_ccp.c: 261:                     break ;
  4198   001372  EF7E  F008         	goto	l7028
  4199   001376                     l7062:
  4200                           
  4201                           ;MCAL_Layer/CPP1/hal_ccp.c: 263:                         (CCP2CONbits.CCP2M =(uint8)(0x0
      +                          8));
  4202   001376  50BA               	movf	186,w,c	;volatile
  4203   001378  0BF0               	andlw	-16
  4204   00137A  0908               	iorlw	8
  4205   00137C  6EBA               	movwf	186,c	;volatile
  4206                           
  4207                           ;MCAL_Layer/CPP1/hal_ccp.c: 264:                     break ;
  4208   00137E  EF7E  F008         	goto	l7028
  4209   001382                     l7064:
  4210                           
  4211                           ;MCAL_Layer/CPP1/hal_ccp.c: 266:                         (CCP2CONbits.CCP2M =(uint8)(0x0
      +                          9));
  4212   001382  50BA               	movf	186,w,c	;volatile
  4213   001384  0BF0               	andlw	-16
  4214   001386  0909               	iorlw	9
  4215   001388  6EBA               	movwf	186,c	;volatile
  4216                           
  4217                           ;MCAL_Layer/CPP1/hal_ccp.c: 267:                     break ;
  4218   00138A  EF7E  F008         	goto	l7028
  4219   00138E                     l7066:
  4220                           
  4221                           ;MCAL_Layer/CPP1/hal_ccp.c: 269:                         (CCP2CONbits.CCP2M =(uint8)(0x0
      +                          A));
  4222   00138E  50BA               	movf	186,w,c	;volatile
  4223   001390  0BF0               	andlw	-16
  4224   001392  090A               	iorlw	10
  4225   001394  6EBA               	movwf	186,c	;volatile
  4226                           
  4227                           ;MCAL_Layer/CPP1/hal_ccp.c: 270:                     break ;
  4228   001396  EF7E  F008         	goto	l7028
  4229   00139A                     l7068:
  4230                           
  4231                           ;MCAL_Layer/CPP1/hal_ccp.c: 272:                          (CCP2CONbits.CCP2M =(uint8)(0x
      +                          0B));
  4232   00139A  50BA               	movf	186,w,c	;volatile
  4233   00139C  0BF0               	andlw	-16
  4234   00139E  090B               	iorlw	11
  4235   0013A0  6EBA               	movwf	186,c	;volatile
  4236                           
  4237                           ;MCAL_Layer/CPP1/hal_ccp.c: 273:                     break ;
  4238   0013A2  EF7E  F008         	goto	l7028
  4239   0013A6                     l7070:
  4240   0013A6  505C               	movf	configure_mode@_ccp^0,w,c
  4241   0013A8  6ED9               	movwf	fsr2l,c
  4242   0013AA  6ADA               	clrf	fsr2h,c
  4243   0013AC  0E0C               	movlw	12
  4244   0013AE  26D9               	addwf	fsr2l,f,c
  4245   0013B0  50DF               	movf	223,w,c
  4246   0013B2  0B0F               	andlw	15
  4247   0013B4  6E5D               	movwf	??_configure_mode^0,c
  4248   0013B6  6A5E               	clrf	(??_configure_mode+1)^0,c
  4249                           
  4250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4251                           ; Switch size 1, requested type "simple"
  4252                           ; Number of cases is 1, Range of values is 0 to 0
  4253                           ; switch strategies available:
  4254                           ; Name         Instructions Cycles
  4255                           ; simple_byte            4     3 (average)
  4256                           ;	Chosen strategy is simple_byte
  4257   0013B8  505E               	movf	(??_configure_mode+1)^0,w,c
  4258   0013BA  0A00               	xorlw	0	; case 0
  4259   0013BC  B4D8               	btfsc	status,2,c
  4260   0013BE  EFE3  F009         	goto	l9624
  4261   0013C2  EF7E  F008         	goto	l7028
  4262   0013C6                     l9624:
  4263                           
  4264                           ; Switch size 1, requested type "simple"
  4265                           ; Number of cases is 5, Range of values is 2 to 11
  4266                           ; switch strategies available:
  4267                           ; Name         Instructions Cycles
  4268                           ; simple_byte           16     9 (average)
  4269                           ;	Chosen strategy is simple_byte
  4270   0013C6  505D               	movf	??_configure_mode^0,w,c
  4271   0013C8  0A02               	xorlw	2	; case 2
  4272   0013CA  B4D8               	btfsc	status,2,c
  4273   0013CC  EFB5  F009         	goto	l7060
  4274   0013D0  0A0A               	xorlw	10	; case 8
  4275   0013D2  B4D8               	btfsc	status,2,c
  4276   0013D4  EFBB  F009         	goto	l7062
  4277   0013D8  0A01               	xorlw	1	; case 9
  4278   0013DA  B4D8               	btfsc	status,2,c
  4279   0013DC  EFC1  F009         	goto	l7064
  4280   0013E0  0A03               	xorlw	3	; case 10
  4281   0013E2  B4D8               	btfsc	status,2,c
  4282   0013E4  EFC7  F009         	goto	l7066
  4283   0013E8  0A01               	xorlw	1	; case 11
  4284   0013EA  B4D8               	btfsc	status,2,c
  4285   0013EC  EFCD  F009         	goto	l7068
  4286   0013F0  EF7E  F008         	goto	l7028
  4287   0013F4                     l7074:
  4288   0013F4  505C               	movf	configure_mode@_ccp^0,w,c
  4289   0013F6  6ED9               	movwf	fsr2l,c
  4290   0013F8  6ADA               	clrf	fsr2h,c
  4291   0013FA  0E0B               	movlw	11
  4292   0013FC  26D9               	addwf	fsr2l,f,c
  4293   0013FE  04DE               	decf	postinc2,w,c
  4294   001400  A4D8               	btfss	status,2,c
  4295   001402  EF05  F00A         	goto	u6551
  4296   001406  EF07  F00A         	goto	u6550
  4297   00140A                     u6551:
  4298   00140A  EF44  F00A         	goto	l7090
  4299   00140E                     u6550:
  4300   00140E  EF21  F00A         	goto	l7086
  4301   001412                     l7078:
  4302                           
  4303                           ;MCAL_Layer/CPP1/hal_ccp.c: 282:                     (CCP2CONbits.CCP2M =(uint8)(0x04));
  4304   001412  50BA               	movf	186,w,c	;volatile
  4305   001414  0BF0               	andlw	-16
  4306   001416  0904               	iorlw	4
  4307   001418  6EBA               	movwf	186,c	;volatile
  4308                           
  4309                           ;MCAL_Layer/CPP1/hal_ccp.c: 283:                     break ;
  4310   00141A  EF7E  F008         	goto	l7028
  4311   00141E                     l7080:
  4312                           
  4313                           ;MCAL_Layer/CPP1/hal_ccp.c: 285:                         (CCP2CONbits.CCP2M =(uint8)(0x0
      +                          5));
  4314   00141E  50BA               	movf	186,w,c	;volatile
  4315   001420  0BF0               	andlw	-16
  4316   001422  0905               	iorlw	5
  4317   001424  6EBA               	movwf	186,c	;volatile
  4318                           
  4319                           ;MCAL_Layer/CPP1/hal_ccp.c: 286:                     break ;
  4320   001426  EF7E  F008         	goto	l7028
  4321   00142A                     l7082:
  4322                           
  4323                           ;MCAL_Layer/CPP1/hal_ccp.c: 288:                         (CCP2CONbits.CCP2M =(uint8)(0x0
      +                          6));
  4324   00142A  50BA               	movf	186,w,c	;volatile
  4325   00142C  0BF0               	andlw	-16
  4326   00142E  0906               	iorlw	6
  4327   001430  6EBA               	movwf	186,c	;volatile
  4328                           
  4329                           ;MCAL_Layer/CPP1/hal_ccp.c: 289:                     break ;
  4330   001432  EF7E  F008         	goto	l7028
  4331   001436                     l7084:
  4332                           
  4333                           ;MCAL_Layer/CPP1/hal_ccp.c: 291:                         (CCP2CONbits.CCP2M =(uint8)(0x0
      +                          7));
  4334   001436  50BA               	movf	186,w,c	;volatile
  4335   001438  0BF0               	andlw	-16
  4336   00143A  0907               	iorlw	7
  4337   00143C  6EBA               	movwf	186,c	;volatile
  4338                           
  4339                           ;MCAL_Layer/CPP1/hal_ccp.c: 292:                     break ;
  4340   00143E  EF7E  F008         	goto	l7028
  4341   001442                     l7086:
  4342   001442  505C               	movf	configure_mode@_ccp^0,w,c
  4343   001444  6ED9               	movwf	fsr2l,c
  4344   001446  6ADA               	clrf	fsr2h,c
  4345   001448  0E0C               	movlw	12
  4346   00144A  26D9               	addwf	fsr2l,f,c
  4347   00144C  50DF               	movf	223,w,c
  4348   00144E  0B0F               	andlw	15
  4349   001450  6E5D               	movwf	??_configure_mode^0,c
  4350   001452  6A5E               	clrf	(??_configure_mode+1)^0,c
  4351                           
  4352                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4353                           ; Switch size 1, requested type "simple"
  4354                           ; Number of cases is 1, Range of values is 0 to 0
  4355                           ; switch strategies available:
  4356                           ; Name         Instructions Cycles
  4357                           ; simple_byte            4     3 (average)
  4358                           ;	Chosen strategy is simple_byte
  4359   001454  505E               	movf	(??_configure_mode+1)^0,w,c
  4360   001456  0A00               	xorlw	0	; case 0
  4361   001458  B4D8               	btfsc	status,2,c
  4362   00145A  EF31  F00A         	goto	l9626
  4363   00145E  EF7E  F008         	goto	l7028
  4364   001462                     l9626:
  4365                           
  4366                           ; Switch size 1, requested type "simple"
  4367                           ; Number of cases is 4, Range of values is 4 to 7
  4368                           ; switch strategies available:
  4369                           ; Name         Instructions Cycles
  4370                           ; simple_byte           13     7 (average)
  4371                           ;	Chosen strategy is simple_byte
  4372   001462  505D               	movf	??_configure_mode^0,w,c
  4373   001464  0A04               	xorlw	4	; case 4
  4374   001466  B4D8               	btfsc	status,2,c
  4375   001468  EF09  F00A         	goto	l7078
  4376   00146C  0A01               	xorlw	1	; case 5
  4377   00146E  B4D8               	btfsc	status,2,c
  4378   001470  EF0F  F00A         	goto	l7080
  4379   001474  0A03               	xorlw	3	; case 6
  4380   001476  B4D8               	btfsc	status,2,c
  4381   001478  EF15  F00A         	goto	l7082
  4382   00147C  0A01               	xorlw	1	; case 7
  4383   00147E  B4D8               	btfsc	status,2,c
  4384   001480  EF1B  F00A         	goto	l7084
  4385   001484  EF7E  F008         	goto	l7028
  4386   001488                     l7090:
  4387   001488  505C               	movf	configure_mode@_ccp^0,w,c
  4388   00148A  6ED9               	movwf	fsr2l,c
  4389   00148C  6ADA               	clrf	fsr2h,c
  4390   00148E  0E0B               	movlw	11
  4391   001490  26D9               	addwf	fsr2l,f,c
  4392   001492  0E02               	movlw	2
  4393   001494  18DE               	xorwf	postinc2,w,c
  4394   001496  A4D8               	btfss	status,2,c
  4395   001498  EF50  F00A         	goto	u6561
  4396   00149C  EF52  F00A         	goto	u6560
  4397   0014A0                     u6561:
  4398   0014A0  EF97  F009         	goto	l544
  4399   0014A4                     u6560:
  4400   0014A4                     
  4401                           ;MCAL_Layer/CPP1/hal_ccp.c: 299:            if((uint8)(0x0C) == _ccp->Sub_mode){
  4402   0014A4  505C               	movf	configure_mode@_ccp^0,w,c
  4403   0014A6  6ED9               	movwf	fsr2l,c
  4404   0014A8  6ADA               	clrf	fsr2h,c
  4405   0014AA  0E0C               	movlw	12
  4406   0014AC  26D9               	addwf	fsr2l,f,c
  4407   0014AE  50DF               	movf	223,w,c
  4408   0014B0  0B0F               	andlw	15
  4409   0014B2  0A0C               	xorlw	12
  4410   0014B4  A4D8               	btfss	status,2,c
  4411   0014B6  EF5F  F00A         	goto	u6571
  4412   0014BA  EF61  F00A         	goto	u6570
  4413   0014BE                     u6571:
  4414   0014BE  EF65  F00A         	goto	l7096
  4415   0014C2                     u6570:
  4416   0014C2                     
  4417                           ;MCAL_Layer/CPP1/hal_ccp.c: 300:         (CCP2CONbits.CCP2M =(uint8)(0x0C));
  4418   0014C2  50BA               	movf	186,w,c	;volatile
  4419   0014C4  0BF0               	andlw	-16
  4420   0014C6  090C               	iorlw	12
  4421   0014C8  6EBA               	movwf	186,c	;volatile
  4422   0014CA                     l7096:
  4423                           
  4424                           ;MCAL_Layer/CPP1/hal_ccp.c: 305:          PR2 =(uint8 )((8000000UL/(_ccp->PWM_Freq * 4.0
      +                           * _ccp->timer2_prescaler *_ccp->timer2_postscaler))-1);
  4425   0014CA  0E00               	movlw	0
  4426   0014CC  6E14               	movwf	___flmul@a^0,c
  4427   0014CE  0E00               	movlw	0
  4428   0014D0  6E15               	movwf	(___flmul@a+1)^0,c
  4429   0014D2  0E80               	movlw	128
  4430   0014D4  6E16               	movwf	(___flmul@a+2)^0,c
  4431   0014D6  0E40               	movlw	64
  4432   0014D8  6E17               	movwf	(___flmul@a+3)^0,c
  4433   0014DA  505C               	movf	configure_mode@_ccp^0,w,c
  4434   0014DC  6ED9               	movwf	fsr2l,c
  4435   0014DE  6ADA               	clrf	fsr2h,c
  4436   0014E0  0E06               	movlw	6
  4437   0014E2  26D9               	addwf	fsr2l,f,c
  4438   0014E4  CFDE F05D          	movff	postinc2,??_configure_mode
  4439   0014E8  CFDD F05E          	movff	postdec2,??_configure_mode+1
  4440   0014EC  C05D  F002         	movff	??_configure_mode,___xxtofl@val
  4441   0014F0  C05E  F003         	movff	??_configure_mode+1,___xxtofl@val+1
  4442   0014F4  6A04               	clrf	(___xxtofl@val+2)^0,c
  4443   0014F6  6A05               	clrf	(___xxtofl@val+3)^0,c
  4444   0014F8  0E00               	movlw	0
  4445   0014FA  ECC7  F016         	call	___xxtofl
  4446   0014FE  C002  F010         	movff	?___xxtofl,___flmul@b
  4447   001502  C003  F011         	movff	?___xxtofl+1,___flmul@b+1
  4448   001506  C004  F012         	movff	?___xxtofl+2,___flmul@b+2
  4449   00150A  C005  F013         	movff	?___xxtofl+3,___flmul@b+3
  4450   00150E  EC6C  F00D         	call	___flmul	;wreg free
  4451   001512  C010  F05F         	movff	?___flmul,_configure_mode$5774
  4452   001516  C011  F060         	movff	?___flmul+1,_configure_mode$5774+1
  4453   00151A  C012  F061         	movff	?___flmul+2,_configure_mode$5774+2
  4454   00151E  C013  F062         	movff	?___flmul+3,_configure_mode$5774+3
  4455                           
  4456                           ;MCAL_Layer/CPP1/hal_ccp.c: 305:          PR2 =(uint8 )((8000000UL/(_ccp->PWM_Freq * 4.0
      +                           * _ccp->timer2_prescaler *_ccp->timer2_postscaler))-1);
  4457   001522  505C               	movf	configure_mode@_ccp^0,w,c
  4458   001524  6ED9               	movwf	fsr2l,c
  4459   001526  6ADA               	clrf	fsr2h,c
  4460   001528  0E08               	movlw	8
  4461   00152A  26D9               	addwf	fsr2l,f,c
  4462   00152C  50DF               	movf	indf2,w,c
  4463   00152E  6E5D               	movwf	??_configure_mode^0,c
  4464   001530  505D               	movf	??_configure_mode^0,w,c
  4465   001532  6E02               	movwf	___xxtofl@val^0,c
  4466   001534  6A03               	clrf	(___xxtofl@val+1)^0,c
  4467   001536  6A04               	clrf	(___xxtofl@val+2)^0,c
  4468   001538  6A05               	clrf	(___xxtofl@val+3)^0,c
  4469   00153A  0E00               	movlw	0
  4470   00153C  ECC7  F016         	call	___xxtofl
  4471   001540  C002  F014         	movff	?___xxtofl,___flmul@a
  4472   001544  C003  F015         	movff	?___xxtofl+1,___flmul@a+1
  4473   001548  C004  F016         	movff	?___xxtofl+2,___flmul@a+2
  4474   00154C  C005  F017         	movff	?___xxtofl+3,___flmul@a+3
  4475   001550  C05F  F010         	movff	_configure_mode$5774,___flmul@b
  4476   001554  C060  F011         	movff	_configure_mode$5774+1,___flmul@b+1
  4477   001558  C061  F012         	movff	_configure_mode$5774+2,___flmul@b+2
  4478   00155C  C062  F013         	movff	_configure_mode$5774+3,___flmul@b+3
  4479   001560  EC6C  F00D         	call	___flmul	;wreg free
  4480   001564  C010  F063         	movff	?___flmul,_configure_mode$5775
  4481   001568  C011  F064         	movff	?___flmul+1,_configure_mode$5775+1
  4482   00156C  C012  F065         	movff	?___flmul+2,_configure_mode$5775+2
  4483   001570  C013  F066         	movff	?___flmul+3,_configure_mode$5775+3
  4484                           
  4485                           ;MCAL_Layer/CPP1/hal_ccp.c: 305:          PR2 =(uint8 )((8000000UL/(_ccp->PWM_Freq * 4.0
      +                           * _ccp->timer2_prescaler *_ccp->timer2_postscaler))-1);
  4486   001574  0E00               	movlw	0
  4487   001576  6E46               	movwf	___fladd@a^0,c
  4488   001578  0E00               	movlw	0
  4489   00157A  6E47               	movwf	(___fladd@a+1)^0,c
  4490   00157C  0E80               	movlw	128
  4491   00157E  6E48               	movwf	(___fladd@a+2)^0,c
  4492   001580  0EBF               	movlw	191
  4493   001582  6E49               	movwf	(___fladd@a+3)^0,c
  4494   001584  505C               	movf	configure_mode@_ccp^0,w,c
  4495   001586  6ED9               	movwf	fsr2l,c
  4496   001588  6ADA               	clrf	fsr2h,c
  4497   00158A  0E09               	movlw	9
  4498   00158C  26D9               	addwf	fsr2l,f,c
  4499   00158E  50DF               	movf	indf2,w,c
  4500   001590  6E5D               	movwf	??_configure_mode^0,c
  4501   001592  505D               	movf	??_configure_mode^0,w,c
  4502   001594  6E02               	movwf	___xxtofl@val^0,c
  4503   001596  6A03               	clrf	(___xxtofl@val+1)^0,c
  4504   001598  6A04               	clrf	(___xxtofl@val+2)^0,c
  4505   00159A  6A05               	clrf	(___xxtofl@val+3)^0,c
  4506   00159C  0E00               	movlw	0
  4507   00159E  ECC7  F016         	call	___xxtofl
  4508   0015A2  C002  F014         	movff	?___xxtofl,___flmul@a
  4509   0015A6  C003  F015         	movff	?___xxtofl+1,___flmul@a+1
  4510   0015AA  C004  F016         	movff	?___xxtofl+2,___flmul@a+2
  4511   0015AE  C005  F017         	movff	?___xxtofl+3,___flmul@a+3
  4512   0015B2  C063  F010         	movff	_configure_mode$5775,___flmul@b
  4513   0015B6  C064  F011         	movff	_configure_mode$5775+1,___flmul@b+1
  4514   0015BA  C065  F012         	movff	_configure_mode$5775+2,___flmul@b+2
  4515   0015BE  C066  F013         	movff	_configure_mode$5775+3,___flmul@b+3
  4516   0015C2  EC6C  F00D         	call	___flmul	;wreg free
  4517   0015C6  C010  F02D         	movff	?___flmul,___fldiv@a
  4518   0015CA  C011  F02E         	movff	?___flmul+1,___fldiv@a+1
  4519   0015CE  C012  F02F         	movff	?___flmul+2,___fldiv@a+2
  4520   0015D2  C013  F030         	movff	?___flmul+3,___fldiv@a+3
  4521   0015D6  0E00               	movlw	0
  4522   0015D8  6E29               	movwf	___fldiv@b^0,c
  4523   0015DA  0E24               	movlw	36
  4524   0015DC  6E2A               	movwf	(___fldiv@b+1)^0,c
  4525   0015DE  0EF4               	movlw	244
  4526   0015E0  6E2B               	movwf	(___fldiv@b+2)^0,c
  4527   0015E2  0E4A               	movlw	74
  4528   0015E4  6E2C               	movwf	(___fldiv@b+3)^0,c
  4529   0015E6  EC84  F011         	call	___fldiv	;wreg free
  4530   0015EA  C029  F042         	movff	?___fldiv,___fladd@b
  4531   0015EE  C02A  F043         	movff	?___fldiv+1,___fladd@b+1
  4532   0015F2  C02B  F044         	movff	?___fldiv+2,___fladd@b+2
  4533   0015F6  C02C  F045         	movff	?___fldiv+3,___fladd@b+3
  4534   0015FA  EC0C  F00B         	call	___fladd	;wreg free
  4535   0015FE  C042  F052         	movff	?___fladd,___fltol@f1
  4536   001602  C043  F053         	movff	?___fladd+1,___fltol@f1+1
  4537   001606  C044  F054         	movff	?___fladd+2,___fltol@f1+2
  4538   00160A  C045  F055         	movff	?___fladd+3,___fltol@f1+3
  4539   00160E  EC44  F019         	call	___fltol	;wreg free
  4540   001612  5052               	movf	?___fltol^0,w,c
  4541   001614  6ECB               	movwf	203,c	;volatile
  4542   001616                     l581:
  4543   001616  0012               	return		;funcret
  4544   001618                     __end_of_configure_mode:
  4545                           	callstack 0
  4546                           
  4547 ;; *************** function _selected_timer *****************
  4548 ;; Defined at:
  4549 ;;		line 367 in file "MCAL_Layer/CPP1/hal_ccp.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  _ccp            1    1[COMRAM] PTR const struct .
  4552 ;;		 -> ccp_obj(15), 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;		None
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  1    wreg      void 
  4557 ;; Registers used:
  4558 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4564 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;Total ram usage:        2 bytes
  4569 ;; Hardware stack levels used: 1
  4570 ;; Hardware stack levels required when called: 2
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		_configure_mode
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           	psect	text21
  4579   003D34                     __ptext21:
  4580                           	callstack 0
  4581   003D34                     _selected_timer:
  4582                           	callstack 25
  4583   003D34                     
  4584                           ;MCAL_Layer/CPP1/hal_ccp.c: 368:     if(TIMER1_FOR_CCP1_CCP2 == _ccp->tmr){
  4585   003D34  5002               	movf	selected_timer@_ccp^0,w,c
  4586   003D36  6ED9               	movwf	fsr2l,c
  4587   003D38  6ADA               	clrf	fsr2h,c
  4588   003D3A  0E0D               	movlw	13
  4589   003D3C  26D9               	addwf	fsr2l,f,c
  4590   003D3E  50DF               	movf	indf2,w,c
  4591   003D40  A4D8               	btfss	status,2,c
  4592   003D42  EFA5  F01E         	goto	u5281
  4593   003D46  EFA7  F01E         	goto	u5280
  4594   003D4A                     u5281:
  4595   003D4A  EFAB  F01E         	goto	l6302
  4596   003D4E                     u5280:
  4597   003D4E                     
  4598                           ;MCAL_Layer/CPP1/hal_ccp.c: 369:   T3CONbits.T3CCP1 = 0 ;
  4599   003D4E  96B1               	bcf	177,3,c	;volatile
  4600                           
  4601                           ;MCAL_Layer/CPP1/hal_ccp.c: 370:     T3CONbits.T3CCP2 = 0 ;
  4602   003D50  9CB1               	bcf	177,6,c	;volatile
  4603                           
  4604                           ;MCAL_Layer/CPP1/hal_ccp.c: 371:     }else if(TIMER1_FOR_CCP1_TIMER3_FOR_CCP2== _ccp->tm
      +                          r){
  4605   003D52  EFCC  F01E         	goto	l595
  4606   003D56                     l6302:
  4607   003D56  5002               	movf	selected_timer@_ccp^0,w,c
  4608   003D58  6ED9               	movwf	fsr2l,c
  4609   003D5A  6ADA               	clrf	fsr2h,c
  4610   003D5C  0E0D               	movlw	13
  4611   003D5E  26D9               	addwf	fsr2l,f,c
  4612   003D60  04DE               	decf	postinc2,w,c
  4613   003D62  A4D8               	btfss	status,2,c
  4614   003D64  EFB6  F01E         	goto	u5291
  4615   003D68  EFB8  F01E         	goto	u5290
  4616   003D6C                     u5291:
  4617   003D6C  EFBC  F01E         	goto	l6306
  4618   003D70                     u5290:
  4619   003D70                     
  4620                           ;MCAL_Layer/CPP1/hal_ccp.c: 372:          T3CONbits.T3CCP1 = 1 ;
  4621   003D70  86B1               	bsf	177,3,c	;volatile
  4622                           
  4623                           ;MCAL_Layer/CPP1/hal_ccp.c: 373:     T3CONbits.T3CCP2 = 0 ;
  4624   003D72  9CB1               	bcf	177,6,c	;volatile
  4625                           
  4626                           ;MCAL_Layer/CPP1/hal_ccp.c: 374:     }else if(TIMER3_FOR_CCP1_CCP2== _ccp->tmr){
  4627   003D74  EFCC  F01E         	goto	l595
  4628   003D78                     l6306:
  4629   003D78  5002               	movf	selected_timer@_ccp^0,w,c
  4630   003D7A  6ED9               	movwf	fsr2l,c
  4631   003D7C  6ADA               	clrf	fsr2h,c
  4632   003D7E  0E0D               	movlw	13
  4633   003D80  26D9               	addwf	fsr2l,f,c
  4634   003D82  0E02               	movlw	2
  4635   003D84  18DE               	xorwf	postinc2,w,c
  4636   003D86  A4D8               	btfss	status,2,c
  4637   003D88  EFC8  F01E         	goto	u5301
  4638   003D8C  EFCA  F01E         	goto	u5300
  4639   003D90                     u5301:
  4640   003D90  EFCC  F01E         	goto	l595
  4641   003D94                     u5300:
  4642   003D94                     
  4643                           ;MCAL_Layer/CPP1/hal_ccp.c: 375:        T3CONbits.T3CCP1 = 0 ;
  4644   003D94  96B1               	bcf	177,3,c	;volatile
  4645                           
  4646                           ;MCAL_Layer/CPP1/hal_ccp.c: 376:     T3CONbits.T3CCP2 = 1 ;
  4647   003D96  8CB1               	bsf	177,6,c	;volatile
  4648   003D98                     l595:
  4649   003D98  0012               	return		;funcret
  4650   003D9A                     __end_of_selected_timer:
  4651                           	callstack 0
  4652                           
  4653 ;; *************** function ___fladd *****************
  4654 ;; Defined at:
  4655 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  b               4   65[COMRAM] void 
  4658 ;;  a               4   69[COMRAM] void 
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;  grs             1   80[COMRAM] unsigned char 
  4661 ;;  bexp            1   79[COMRAM] unsigned char 
  4662 ;;  aexp            1   78[COMRAM] unsigned char 
  4663 ;;  signs           1   77[COMRAM] unsigned char 
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  4   65[COMRAM] unsigned char 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, status,0
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4673 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4674 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4675 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4676 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4677 ;;Total ram usage:       16 bytes
  4678 ;; Hardware stack levels used: 1
  4679 ;; Hardware stack levels required when called: 2
  4680 ;; This function calls:
  4681 ;;		Nothing
  4682 ;; This function is called by:
  4683 ;;		_configure_mode
  4684 ;;		_eusart_baudrate_configuration
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text22
  4689   001618                     __ptext22:
  4690                           	callstack 0
  4691   001618                     ___fladd:
  4692                           	callstack 25
  4693   001618  5045               	movf	(___fladd@b+3)^0,w,c
  4694   00161A  0B80               	andlw	128
  4695   00161C  6E4E               	movwf	___fladd@signs^0,c
  4696   00161E  5045               	movf	(___fladd@b+3)^0,w,c
  4697   001620  2445               	addwf	(___fladd@b+3)^0,w,c
  4698   001622  6E50               	movwf	___fladd@bexp^0,c
  4699   001624  AE44               	btfss	(___fladd@b+2)^0,7,c
  4700   001626  EF17  F00B         	goto	u5311
  4701   00162A  EF19  F00B         	goto	u5310
  4702   00162E                     u5311:
  4703   00162E  EF1A  F00B         	goto	l6316
  4704   001632                     u5310:
  4705   001632  8050               	bsf	___fladd@bexp^0,0,c
  4706   001634                     l6316:
  4707   001634  5050               	movf	___fladd@bexp^0,w,c
  4708   001636  B4D8               	btfsc	status,2,c
  4709   001638  EF20  F00B         	goto	u5321
  4710   00163C  EF22  F00B         	goto	u5320
  4711   001640                     u5321:
  4712   001640  EF37  F00B         	goto	l6326
  4713   001644                     u5320:
  4714   001644  2850               	incf	___fladd@bexp^0,w,c
  4715   001646  A4D8               	btfss	status,2,c
  4716   001648  EF28  F00B         	goto	u5331
  4717   00164C  EF2A  F00B         	goto	u5330
  4718   001650                     u5331:
  4719   001650  EF32  F00B         	goto	l6322
  4720   001654                     u5330:
  4721   001654  0E00               	movlw	0
  4722   001656  6E42               	movwf	___fladd@b^0,c
  4723   001658  0E00               	movlw	0
  4724   00165A  6E43               	movwf	(___fladd@b+1)^0,c
  4725   00165C  0E00               	movlw	0
  4726   00165E  6E44               	movwf	(___fladd@b+2)^0,c
  4727   001660  0E00               	movlw	0
  4728   001662  6E45               	movwf	(___fladd@b+3)^0,c
  4729   001664                     l6322:
  4730   001664  8E44               	bsf	(___fladd@b+2)^0,7,c
  4731   001666  0E00               	movlw	0
  4732   001668  6E45               	movwf	(___fladd@b+3)^0,c
  4733   00166A  EF3F  F00B         	goto	l6328
  4734   00166E                     l6326:
  4735   00166E  0E00               	movlw	0
  4736   001670  6E42               	movwf	___fladd@b^0,c
  4737   001672  0E00               	movlw	0
  4738   001674  6E43               	movwf	(___fladd@b+1)^0,c
  4739   001676  0E00               	movlw	0
  4740   001678  6E44               	movwf	(___fladd@b+2)^0,c
  4741   00167A  0E00               	movlw	0
  4742   00167C  6E45               	movwf	(___fladd@b+3)^0,c
  4743   00167E                     l6328:
  4744   00167E  5049               	movf	(___fladd@a+3)^0,w,c
  4745   001680  0B80               	andlw	128
  4746   001682  6E4F               	movwf	___fladd@aexp^0,c
  4747   001684  504E               	movf	___fladd@signs^0,w,c
  4748   001686  184F               	xorwf	___fladd@aexp^0,w,c
  4749   001688  B4D8               	btfsc	status,2,c
  4750   00168A  EF49  F00B         	goto	u5341
  4751   00168E  EF4B  F00B         	goto	u5340
  4752   001692                     u5341:
  4753   001692  EF4C  F00B         	goto	l6334
  4754   001696                     u5340:
  4755   001696  8C4E               	bsf	___fladd@signs^0,6,c
  4756   001698                     l6334:
  4757   001698  5049               	movf	(___fladd@a+3)^0,w,c
  4758   00169A  2449               	addwf	(___fladd@a+3)^0,w,c
  4759   00169C  6E4F               	movwf	___fladd@aexp^0,c
  4760   00169E  AE48               	btfss	(___fladd@a+2)^0,7,c
  4761   0016A0  EF54  F00B         	goto	u5351
  4762   0016A4  EF56  F00B         	goto	u5350
  4763   0016A8                     u5351:
  4764   0016A8  EF57  F00B         	goto	l6340
  4765   0016AC                     u5350:
  4766   0016AC  804F               	bsf	___fladd@aexp^0,0,c
  4767   0016AE                     l6340:
  4768   0016AE  504F               	movf	___fladd@aexp^0,w,c
  4769   0016B0  B4D8               	btfsc	status,2,c
  4770   0016B2  EF5D  F00B         	goto	u5361
  4771   0016B6  EF5F  F00B         	goto	u5360
  4772   0016BA                     u5361:
  4773   0016BA  EF74  F00B         	goto	l6350
  4774   0016BE                     u5360:
  4775   0016BE  284F               	incf	___fladd@aexp^0,w,c
  4776   0016C0  A4D8               	btfss	status,2,c
  4777   0016C2  EF65  F00B         	goto	u5371
  4778   0016C6  EF67  F00B         	goto	u5370
  4779   0016CA                     u5371:
  4780   0016CA  EF6F  F00B         	goto	l6346
  4781   0016CE                     u5370:
  4782   0016CE  0E00               	movlw	0
  4783   0016D0  6E46               	movwf	___fladd@a^0,c
  4784   0016D2  0E00               	movlw	0
  4785   0016D4  6E47               	movwf	(___fladd@a+1)^0,c
  4786   0016D6  0E00               	movlw	0
  4787   0016D8  6E48               	movwf	(___fladd@a+2)^0,c
  4788   0016DA  0E00               	movlw	0
  4789   0016DC  6E49               	movwf	(___fladd@a+3)^0,c
  4790   0016DE                     l6346:
  4791   0016DE  8E48               	bsf	(___fladd@a+2)^0,7,c
  4792   0016E0  0E00               	movlw	0
  4793   0016E2  6E49               	movwf	(___fladd@a+3)^0,c
  4794   0016E4  EF7C  F00B         	goto	l6352
  4795   0016E8                     l6350:
  4796   0016E8  0E00               	movlw	0
  4797   0016EA  6E46               	movwf	___fladd@a^0,c
  4798   0016EC  0E00               	movlw	0
  4799   0016EE  6E47               	movwf	(___fladd@a+1)^0,c
  4800   0016F0  0E00               	movlw	0
  4801   0016F2  6E48               	movwf	(___fladd@a+2)^0,c
  4802   0016F4  0E00               	movlw	0
  4803   0016F6  6E49               	movwf	(___fladd@a+3)^0,c
  4804   0016F8                     l6352:
  4805   0016F8  5050               	movf	___fladd@bexp^0,w,c
  4806   0016FA  5C4F               	subwf	___fladd@aexp^0,w,c
  4807   0016FC  B0D8               	btfsc	status,0,c
  4808   0016FE  EF83  F00B         	goto	u5381
  4809   001702  EF85  F00B         	goto	u5380
  4810   001706                     u5381:
  4811   001706  EFAC  F00B         	goto	l6388
  4812   00170A                     u5380:
  4813   00170A  AC4E               	btfss	___fladd@signs^0,6,c
  4814   00170C  EF8A  F00B         	goto	u5391
  4815   001710  EF8C  F00B         	goto	u5390
  4816   001714                     u5391:
  4817   001714  EF8E  F00B         	goto	l6358
  4818   001718                     u5390:
  4819   001718  0E80               	movlw	128
  4820   00171A  1A4E               	xorwf	___fladd@signs^0,f,c
  4821   00171C                     l6358:
  4822   00171C  C050  F051         	movff	___fladd@bexp,___fladd@grs
  4823   001720  C04F  F050         	movff	___fladd@aexp,___fladd@bexp
  4824   001724  C051  F04F         	movff	___fladd@grs,___fladd@aexp
  4825   001728  C042  F051         	movff	___fladd@b,___fladd@grs
  4826   00172C  C046  F042         	movff	___fladd@a,___fladd@b
  4827   001730  C051  F046         	movff	___fladd@grs,___fladd@a
  4828   001734  C043  F051         	movff	___fladd@b+1,___fladd@grs
  4829   001738  C047  F043         	movff	___fladd@a+1,___fladd@b+1
  4830   00173C  C051  F047         	movff	___fladd@grs,___fladd@a+1
  4831   001740  C044  F051         	movff	___fladd@b+2,___fladd@grs
  4832   001744  C048  F044         	movff	___fladd@a+2,___fladd@b+2
  4833   001748  C051  F048         	movff	___fladd@grs,___fladd@a+2
  4834   00174C  C045  F051         	movff	___fladd@b+3,___fladd@grs
  4835   001750  C049  F045         	movff	___fladd@a+3,___fladd@b+3
  4836   001754  C051  F049         	movff	___fladd@grs,___fladd@a+3
  4837   001758                     l6388:
  4838   001758  0E00               	movlw	0
  4839   00175A  6E51               	movwf	___fladd@grs^0,c
  4840   00175C  5050               	movf	___fladd@bexp^0,w,c
  4841   00175E  C04F  F04A         	movff	___fladd@aexp,??___fladd
  4842   001762  6A4B               	clrf	(??___fladd+1)^0,c
  4843   001764  5E4A               	subwf	??___fladd^0,f,c
  4844   001766  0E00               	movlw	0
  4845   001768  5A4B               	subwfb	(??___fladd+1)^0,f,c
  4846   00176A  BE4B               	btfsc	(??___fladd+1)^0,7,c
  4847   00176C  EFC1  F00B         	goto	u5401
  4848   001770  504B               	movf	(??___fladd+1)^0,w,c
  4849   001772  E109               	bnz	u5400
  4850   001774  0E1A               	movlw	26
  4851   001776  5C4A               	subwf	??___fladd^0,w,c
  4852   001778  A0D8               	btfss	status,0,c
  4853   00177A  EFC1  F00B         	goto	u5401
  4854   00177E  EFC3  F00B         	goto	u5400
  4855   001782                     u5401:
  4856   001782  EFFA  F00B         	goto	l2327
  4857   001786                     u5400:
  4858   001786  5042               	movf	___fladd@b^0,w,c
  4859   001788  1043               	iorwf	(___fladd@b+1)^0,w,c
  4860   00178A  1044               	iorwf	(___fladd@b+2)^0,w,c
  4861   00178C  1045               	iorwf	(___fladd@b+3)^0,w,c
  4862   00178E  A4D8               	btfss	status,2,c
  4863   001790  EFCC  F00B         	goto	u5411
  4864   001794  EFCF  F00B         	goto	u5410
  4865   001798                     u5411:
  4866   001798  0E01               	movlw	1
  4867   00179A  EFD0  F00B         	goto	u5420
  4868   00179E                     u5410:
  4869   00179E  0E00               	movlw	0
  4870   0017A0                     u5420:
  4871   0017A0  6E51               	movwf	___fladd@grs^0,c
  4872   0017A2  0E00               	movlw	0
  4873   0017A4  6E42               	movwf	___fladd@b^0,c
  4874   0017A6  0E00               	movlw	0
  4875   0017A8  6E43               	movwf	(___fladd@b+1)^0,c
  4876   0017AA  0E00               	movlw	0
  4877   0017AC  6E44               	movwf	(___fladd@b+2)^0,c
  4878   0017AE  0E00               	movlw	0
  4879   0017B0  6E45               	movwf	(___fladd@b+3)^0,c
  4880   0017B2  C04F  F050         	movff	___fladd@aexp,___fladd@bexp
  4881   0017B6  EF03  F00C         	goto	l2326
  4882   0017BA                     l2328:
  4883   0017BA  A051               	btfss	___fladd@grs^0,0,c
  4884   0017BC  EFE2  F00B         	goto	u5431
  4885   0017C0  EFE4  F00B         	goto	u5430
  4886   0017C4                     u5431:
  4887   0017C4  EFEA  F00B         	goto	l6400
  4888   0017C8                     u5430:
  4889   0017C8  90D8               	bcf	status,0,c
  4890   0017CA  3051               	rrcf	___fladd@grs^0,w,c
  4891   0017CC  0901               	iorlw	1
  4892   0017CE  6E51               	movwf	___fladd@grs^0,c
  4893   0017D0  EFEC  F00B         	goto	l6402
  4894   0017D4                     l6400:
  4895   0017D4  90D8               	bcf	status,0,c
  4896   0017D6  3251               	rrcf	___fladd@grs^0,f,c
  4897   0017D8                     l6402:
  4898   0017D8  A042               	btfss	___fladd@b^0,0,c
  4899   0017DA  EFF1  F00B         	goto	u5441
  4900   0017DE  EFF3  F00B         	goto	u5440
  4901   0017E2                     u5441:
  4902   0017E2  EFF4  F00B         	goto	l6406
  4903   0017E6                     u5440:
  4904   0017E6  8E51               	bsf	___fladd@grs^0,7,c
  4905   0017E8                     l6406:
  4906   0017E8  3445               	rlcf	(___fladd@b+3)^0,w,c
  4907   0017EA  3245               	rrcf	(___fladd@b+3)^0,f,c
  4908   0017EC  3244               	rrcf	(___fladd@b+2)^0,f,c
  4909   0017EE  3243               	rrcf	(___fladd@b+1)^0,f,c
  4910   0017F0  3242               	rrcf	___fladd@b^0,f,c
  4911   0017F2  2A50               	incf	___fladd@bexp^0,f,c
  4912   0017F4                     l2327:
  4913   0017F4  504F               	movf	___fladd@aexp^0,w,c
  4914   0017F6  5C50               	subwf	___fladd@bexp^0,w,c
  4915   0017F8  A0D8               	btfss	status,0,c
  4916   0017FA  EF01  F00C         	goto	u5451
  4917   0017FE  EF03  F00C         	goto	u5450
  4918   001802                     u5451:
  4919   001802  EFDD  F00B         	goto	l2328
  4920   001806                     u5450:
  4921   001806                     l2326:
  4922   001806  BC4E               	btfsc	___fladd@signs^0,6,c
  4923   001808  EF08  F00C         	goto	u5461
  4924   00180C  EF0A  F00C         	goto	u5460
  4925   001810                     u5461:
  4926   001810  EF4A  F00C         	goto	l6434
  4927   001814                     u5460:
  4928   001814  5050               	movf	___fladd@bexp^0,w,c
  4929   001816  A4D8               	btfss	status,2,c
  4930   001818  EF10  F00C         	goto	u5471
  4931   00181C  EF12  F00C         	goto	u5470
  4932   001820                     u5471:
  4933   001820  EF1C  F00C         	goto	l6416
  4934   001824                     u5470:
  4935   001824  0E00               	movlw	0
  4936   001826  6E42               	movwf	?___fladd^0,c
  4937   001828  0E00               	movlw	0
  4938   00182A  6E43               	movwf	(?___fladd+1)^0,c
  4939   00182C  0E00               	movlw	0
  4940   00182E  6E44               	movwf	(?___fladd+2)^0,c
  4941   001830  0E00               	movlw	0
  4942   001832  6E45               	movwf	(?___fladd+3)^0,c
  4943   001834  EF6B  F00D         	goto	l2335
  4944   001838                     l6416:
  4945   001838  5046               	movf	___fladd@a^0,w,c
  4946   00183A  2642               	addwf	___fladd@b^0,f,c
  4947   00183C  5047               	movf	(___fladd@a+1)^0,w,c
  4948   00183E  2243               	addwfc	(___fladd@b+1)^0,f,c
  4949   001840  5048               	movf	(___fladd@a+2)^0,w,c
  4950   001842  2244               	addwfc	(___fladd@b+2)^0,f,c
  4951   001844  5049               	movf	(___fladd@a+3)^0,w,c
  4952   001846  2245               	addwfc	(___fladd@b+3)^0,f,c
  4953   001848  A045               	btfss	(___fladd@b+3)^0,0,c
  4954   00184A  EF29  F00C         	goto	u5481
  4955   00184E  EF2B  F00C         	goto	u5480
  4956   001852                     u5481:
  4957   001852  EFD7  F00C         	goto	l6470
  4958   001856                     u5480:
  4959   001856  A051               	btfss	___fladd@grs^0,0,c
  4960   001858  EF30  F00C         	goto	u5491
  4961   00185C  EF32  F00C         	goto	u5490
  4962   001860                     u5491:
  4963   001860  EF38  F00C         	goto	l6424
  4964   001864                     u5490:
  4965   001864  90D8               	bcf	status,0,c
  4966   001866  3051               	rrcf	___fladd@grs^0,w,c
  4967   001868  0901               	iorlw	1
  4968   00186A  6E51               	movwf	___fladd@grs^0,c
  4969   00186C  EF3A  F00C         	goto	l6426
  4970   001870                     l6424:
  4971   001870  90D8               	bcf	status,0,c
  4972   001872  3251               	rrcf	___fladd@grs^0,f,c
  4973   001874                     l6426:
  4974   001874  A042               	btfss	___fladd@b^0,0,c
  4975   001876  EF3F  F00C         	goto	u5501
  4976   00187A  EF41  F00C         	goto	u5500
  4977   00187E                     u5501:
  4978   00187E  EF42  F00C         	goto	l6430
  4979   001882                     u5500:
  4980   001882  8E51               	bsf	___fladd@grs^0,7,c
  4981   001884                     l6430:
  4982   001884  3445               	rlcf	(___fladd@b+3)^0,w,c
  4983   001886  3245               	rrcf	(___fladd@b+3)^0,f,c
  4984   001888  3244               	rrcf	(___fladd@b+2)^0,f,c
  4985   00188A  3243               	rrcf	(___fladd@b+1)^0,f,c
  4986   00188C  3242               	rrcf	___fladd@b^0,f,c
  4987   00188E  2A50               	incf	___fladd@bexp^0,f,c
  4988   001890  EFD7  F00C         	goto	l6470
  4989   001894                     l6434:
  4990   001894  5046               	movf	___fladd@a^0,w,c
  4991   001896  5C42               	subwf	___fladd@b^0,w,c
  4992   001898  5047               	movf	(___fladd@a+1)^0,w,c
  4993   00189A  5843               	subwfb	(___fladd@b+1)^0,w,c
  4994   00189C  5048               	movf	(___fladd@a+2)^0,w,c
  4995   00189E  5844               	subwfb	(___fladd@b+2)^0,w,c
  4996   0018A0  5045               	movf	(___fladd@b+3)^0,w,c
  4997   0018A2  0A80               	xorlw	128
  4998   0018A4  6E4A               	movwf	??___fladd^0,c
  4999   0018A6  5049               	movf	(___fladd@a+3)^0,w,c
  5000   0018A8  0A80               	xorlw	128
  5001   0018AA  584A               	subwfb	??___fladd^0,w,c
  5002   0018AC  B0D8               	btfsc	status,0,c
  5003   0018AE  EF5B  F00C         	goto	u5511
  5004   0018B2  EF5D  F00C         	goto	u5510
  5005   0018B6                     u5511:
  5006   0018B6  EF88  F00C         	goto	l6444
  5007   0018BA                     u5510:
  5008   0018BA  5042               	movf	___fladd@b^0,w,c
  5009   0018BC  5C46               	subwf	___fladd@a^0,w,c
  5010   0018BE  6E4A               	movwf	??___fladd^0,c
  5011   0018C0  5043               	movf	(___fladd@b+1)^0,w,c
  5012   0018C2  5847               	subwfb	(___fladd@a+1)^0,w,c
  5013   0018C4  6E4B               	movwf	(??___fladd+1)^0,c
  5014   0018C6  5044               	movf	(___fladd@b+2)^0,w,c
  5015   0018C8  5848               	subwfb	(___fladd@a+2)^0,w,c
  5016   0018CA  6E4C               	movwf	(??___fladd+2)^0,c
  5017   0018CC  5045               	movf	(___fladd@b+3)^0,w,c
  5018   0018CE  5849               	subwfb	(___fladd@a+3)^0,w,c
  5019   0018D0  6E4D               	movwf	(??___fladd+3)^0,c
  5020   0018D2  0EFF               	movlw	255
  5021   0018D4  244A               	addwf	??___fladd^0,w,c
  5022   0018D6  6E42               	movwf	___fladd@b^0,c
  5023   0018D8  0EFF               	movlw	255
  5024   0018DA  204B               	addwfc	(??___fladd+1)^0,w,c
  5025   0018DC  6E43               	movwf	(___fladd@b+1)^0,c
  5026   0018DE  0EFF               	movlw	255
  5027   0018E0  204C               	addwfc	(??___fladd+2)^0,w,c
  5028   0018E2  6E44               	movwf	(___fladd@b+2)^0,c
  5029   0018E4  0EFF               	movlw	255
  5030   0018E6  204D               	addwfc	(??___fladd+3)^0,w,c
  5031   0018E8  6E45               	movwf	(___fladd@b+3)^0,c
  5032   0018EA  0E80               	movlw	128
  5033   0018EC  1A4E               	xorwf	___fladd@signs^0,f,c
  5034   0018EE  6C51               	negf	___fladd@grs^0,c
  5035   0018F0  5051               	movf	___fladd@grs^0,w,c
  5036   0018F2  A4D8               	btfss	status,2,c
  5037   0018F4  EF7E  F00C         	goto	u5521
  5038   0018F8  EF80  F00C         	goto	u5520
  5039   0018FC                     u5521:
  5040   0018FC  EF90  F00C         	goto	l2343
  5041   001900                     u5520:
  5042   001900  0E01               	movlw	1
  5043   001902  2642               	addwf	___fladd@b^0,f,c
  5044   001904  0E00               	movlw	0
  5045   001906  2243               	addwfc	(___fladd@b+1)^0,f,c
  5046   001908  2244               	addwfc	(___fladd@b+2)^0,f,c
  5047   00190A  2245               	addwfc	(___fladd@b+3)^0,f,c
  5048   00190C  EF90  F00C         	goto	l2343
  5049   001910                     l6444:
  5050   001910  5046               	movf	___fladd@a^0,w,c
  5051   001912  5E42               	subwf	___fladd@b^0,f,c
  5052   001914  5047               	movf	(___fladd@a+1)^0,w,c
  5053   001916  5A43               	subwfb	(___fladd@b+1)^0,f,c
  5054   001918  5048               	movf	(___fladd@a+2)^0,w,c
  5055   00191A  5A44               	subwfb	(___fladd@b+2)^0,f,c
  5056   00191C  5049               	movf	(___fladd@a+3)^0,w,c
  5057   00191E  5A45               	subwfb	(___fladd@b+3)^0,f,c
  5058   001920                     l2343:
  5059   001920  5042               	movf	___fladd@b^0,w,c
  5060   001922  1043               	iorwf	(___fladd@b+1)^0,w,c
  5061   001924  1044               	iorwf	(___fladd@b+2)^0,w,c
  5062   001926  1045               	iorwf	(___fladd@b+3)^0,w,c
  5063   001928  A4D8               	btfss	status,2,c
  5064   00192A  EF99  F00C         	goto	u5531
  5065   00192E  EF9B  F00C         	goto	u5530
  5066   001932                     u5531:
  5067   001932  EFD0  F00C         	goto	l6468
  5068   001936                     u5530:
  5069   001936  5051               	movf	___fladd@grs^0,w,c
  5070   001938  A4D8               	btfss	status,2,c
  5071   00193A  EFA1  F00C         	goto	u5541
  5072   00193E  EFA3  F00C         	goto	u5540
  5073   001942                     u5541:
  5074   001942  EFD0  F00C         	goto	l6468
  5075   001946                     u5540:
  5076   001946  0E00               	movlw	0
  5077   001948  6E42               	movwf	?___fladd^0,c
  5078   00194A  0E00               	movlw	0
  5079   00194C  6E43               	movwf	(?___fladd+1)^0,c
  5080   00194E  0E00               	movlw	0
  5081   001950  6E44               	movwf	(?___fladd+2)^0,c
  5082   001952  0E00               	movlw	0
  5083   001954  6E45               	movwf	(?___fladd+3)^0,c
  5084   001956  EF6B  F00D         	goto	l2335
  5085   00195A                     l6452:
  5086   00195A  90D8               	bcf	status,0,c
  5087   00195C  3642               	rlcf	___fladd@b^0,f,c
  5088   00195E  3643               	rlcf	(___fladd@b+1)^0,f,c
  5089   001960  3644               	rlcf	(___fladd@b+2)^0,f,c
  5090   001962  3645               	rlcf	(___fladd@b+3)^0,f,c
  5091   001964  AE51               	btfss	___fladd@grs^0,7,c
  5092   001966  EFB7  F00C         	goto	u5551
  5093   00196A  EFB9  F00C         	goto	u5550
  5094   00196E                     u5551:
  5095   00196E  EFBA  F00C         	goto	l6458
  5096   001972                     u5550:
  5097   001972  8042               	bsf	___fladd@b^0,0,c
  5098   001974                     l6458:
  5099   001974  A051               	btfss	___fladd@grs^0,0,c
  5100   001976  EFBF  F00C         	goto	u5561
  5101   00197A  EFC1  F00C         	goto	u5560
  5102   00197E                     u5561:
  5103   00197E  EFC5  F00C         	goto	l6462
  5104   001982                     u5560:
  5105   001982  80D8               	bsf	status,0,c
  5106   001984  3651               	rlcf	___fladd@grs^0,f,c
  5107   001986  EFC7  F00C         	goto	l6464
  5108   00198A                     l6462:
  5109   00198A  90D8               	bcf	status,0,c
  5110   00198C  3651               	rlcf	___fladd@grs^0,f,c
  5111   00198E                     l6464:
  5112   00198E  5050               	movf	___fladd@bexp^0,w,c
  5113   001990  B4D8               	btfsc	status,2,c
  5114   001992  EFCD  F00C         	goto	u5571
  5115   001996  EFCF  F00C         	goto	u5570
  5116   00199A                     u5571:
  5117   00199A  EFD0  F00C         	goto	l6468
  5118   00199E                     u5570:
  5119   00199E  0650               	decf	___fladd@bexp^0,f,c
  5120   0019A0                     l6468:
  5121   0019A0  AE44               	btfss	(___fladd@b+2)^0,7,c
  5122   0019A2  EFD5  F00C         	goto	u5581
  5123   0019A6  EFD7  F00C         	goto	u5580
  5124   0019AA                     u5581:
  5125   0019AA  EFAD  F00C         	goto	l6452
  5126   0019AE                     u5580:
  5127   0019AE                     l6470:
  5128   0019AE  0E00               	movlw	0
  5129   0019B0  6E4F               	movwf	___fladd@aexp^0,c
  5130   0019B2  AE51               	btfss	___fladd@grs^0,7,c
  5131   0019B4  EFDE  F00C         	goto	u5591
  5132   0019B8  EFE0  F00C         	goto	u5590
  5133   0019BC                     u5591:
  5134   0019BC  EFF8  F00C         	goto	l2352
  5135   0019C0                     u5590:
  5136   0019C0  C051  F04A         	movff	___fladd@grs,??___fladd
  5137   0019C4  0E7F               	movlw	127
  5138   0019C6  164A               	andwf	??___fladd^0,f,c
  5139   0019C8  B4D8               	btfsc	status,2,c
  5140   0019CA  EFE9  F00C         	goto	u5601
  5141   0019CE  EFEB  F00C         	goto	u5600
  5142   0019D2                     u5601:
  5143   0019D2  EFEF  F00C         	goto	l2353
  5144   0019D6                     u5600:
  5145   0019D6                     l6476:
  5146   0019D6  0E01               	movlw	1
  5147   0019D8  6E4F               	movwf	___fladd@aexp^0,c
  5148   0019DA  EFF8  F00C         	goto	l2352
  5149   0019DE                     l2353:
  5150   0019DE  A042               	btfss	___fladd@b^0,0,c
  5151   0019E0  EFF4  F00C         	goto	u5611
  5152   0019E4  EFF6  F00C         	goto	u5610
  5153   0019E8                     u5611:
  5154   0019E8  EFF8  F00C         	goto	l2352
  5155   0019EC                     u5610:
  5156   0019EC  EFEB  F00C         	goto	l6476
  5157   0019F0                     l2352:
  5158   0019F0  504F               	movf	___fladd@aexp^0,w,c
  5159   0019F2  B4D8               	btfsc	status,2,c
  5160   0019F4  EFFE  F00C         	goto	u5621
  5161   0019F8  EF00  F00D         	goto	u5620
  5162   0019FC                     u5621:
  5163   0019FC  EF2B  F00D         	goto	l6488
  5164   001A00                     u5620:
  5165   001A00  0E01               	movlw	1
  5166   001A02  2642               	addwf	___fladd@b^0,f,c
  5167   001A04  0E00               	movlw	0
  5168   001A06  2243               	addwfc	(___fladd@b+1)^0,f,c
  5169   001A08  2244               	addwfc	(___fladd@b+2)^0,f,c
  5170   001A0A  2245               	addwfc	(___fladd@b+3)^0,f,c
  5171   001A0C  A045               	btfss	(___fladd@b+3)^0,0,c
  5172   001A0E  EF0B  F00D         	goto	u5631
  5173   001A12  EF0D  F00D         	goto	u5630
  5174   001A16                     u5631:
  5175   001A16  EF2B  F00D         	goto	l6488
  5176   001A1A                     u5630:
  5177   001A1A  C042  F04A         	movff	___fladd@b,??___fladd
  5178   001A1E  C043  F04B         	movff	___fladd@b+1,??___fladd+1
  5179   001A22  C044  F04C         	movff	___fladd@b+2,??___fladd+2
  5180   001A26  C045  F04D         	movff	___fladd@b+3,??___fladd+3
  5181   001A2A  344D               	rlcf	(??___fladd+3)^0,w,c
  5182   001A2C  324D               	rrcf	(??___fladd+3)^0,f,c
  5183   001A2E  324C               	rrcf	(??___fladd+2)^0,f,c
  5184   001A30  324B               	rrcf	(??___fladd+1)^0,f,c
  5185   001A32  324A               	rrcf	??___fladd^0,f,c
  5186   001A34  C04A  F042         	movff	??___fladd,___fladd@b
  5187   001A38  C04B  F043         	movff	??___fladd+1,___fladd@b+1
  5188   001A3C  C04C  F044         	movff	??___fladd+2,___fladd@b+2
  5189   001A40  C04D  F045         	movff	??___fladd+3,___fladd@b+3
  5190   001A44  2850               	incf	___fladd@bexp^0,w,c
  5191   001A46  B4D8               	btfsc	status,2,c
  5192   001A48  EF28  F00D         	goto	u5641
  5193   001A4C  EF2A  F00D         	goto	u5640
  5194   001A50                     u5641:
  5195   001A50  EF2B  F00D         	goto	l6488
  5196   001A54                     u5640:
  5197   001A54  2A50               	incf	___fladd@bexp^0,f,c
  5198   001A56                     l6488:
  5199   001A56  2850               	incf	___fladd@bexp^0,w,c
  5200   001A58  B4D8               	btfsc	status,2,c
  5201   001A5A  EF31  F00D         	goto	u5651
  5202   001A5E  EF33  F00D         	goto	u5650
  5203   001A62                     u5651:
  5204   001A62  EF3B  F00D         	goto	l6492
  5205   001A66                     u5650:
  5206   001A66  5050               	movf	___fladd@bexp^0,w,c
  5207   001A68  A4D8               	btfss	status,2,c
  5208   001A6A  EF39  F00D         	goto	u5661
  5209   001A6E  EF3B  F00D         	goto	u5660
  5210   001A72                     u5661:
  5211   001A72  EF4D  F00D         	goto	l6496
  5212   001A76                     u5660:
  5213   001A76                     l6492:
  5214   001A76  0E00               	movlw	0
  5215   001A78  6E42               	movwf	___fladd@b^0,c
  5216   001A7A  0E00               	movlw	0
  5217   001A7C  6E43               	movwf	(___fladd@b+1)^0,c
  5218   001A7E  0E00               	movlw	0
  5219   001A80  6E44               	movwf	(___fladd@b+2)^0,c
  5220   001A82  0E00               	movlw	0
  5221   001A84  6E45               	movwf	(___fladd@b+3)^0,c
  5222   001A86  5050               	movf	___fladd@bexp^0,w,c
  5223   001A88  A4D8               	btfss	status,2,c
  5224   001A8A  EF49  F00D         	goto	u5671
  5225   001A8E  EF4B  F00D         	goto	u5670
  5226   001A92                     u5671:
  5227   001A92  EF4D  F00D         	goto	l6496
  5228   001A96                     u5670:
  5229   001A96  0E00               	movlw	0
  5230   001A98  6E4E               	movwf	___fladd@signs^0,c
  5231   001A9A                     l6496:
  5232   001A9A  A050               	btfss	___fladd@bexp^0,0,c
  5233   001A9C  EF52  F00D         	goto	u5681
  5234   001AA0  EF54  F00D         	goto	u5680
  5235   001AA4                     u5681:
  5236   001AA4  EF57  F00D         	goto	l6500
  5237   001AA8                     u5680:
  5238   001AA8  8E44               	bsf	(___fladd@b+2)^0,7,c
  5239   001AAA  EF58  F00D         	goto	l6502
  5240   001AAE                     l6500:
  5241   001AAE  9E44               	bcf	(___fladd@b+2)^0,7,c
  5242   001AB0                     l6502:
  5243   001AB0  90D8               	bcf	status,0,c
  5244   001AB2  3050               	rrcf	___fladd@bexp^0,w,c
  5245   001AB4  6E45               	movwf	(___fladd@b+3)^0,c
  5246   001AB6  AE4E               	btfss	___fladd@signs^0,7,c
  5247   001AB8  EF60  F00D         	goto	u5691
  5248   001ABC  EF62  F00D         	goto	u5690
  5249   001AC0                     u5691:
  5250   001AC0  EF63  F00D         	goto	l6508
  5251   001AC4                     u5690:
  5252   001AC4  8E45               	bsf	(___fladd@b+3)^0,7,c
  5253   001AC6                     l6508:
  5254   001AC6  C042  F042         	movff	___fladd@b,?___fladd
  5255   001ACA  C043  F043         	movff	___fladd@b+1,?___fladd+1
  5256   001ACE  C044  F044         	movff	___fladd@b+2,?___fladd+2
  5257   001AD2  C045  F045         	movff	___fladd@b+3,?___fladd+3
  5258   001AD6                     l2335:
  5259   001AD6  0012               	return		;funcret
  5260   001AD8                     __end_of___fladd:
  5261                           	callstack 0
  5262                           
  5263 ;; *************** function _ccp_interrupt *****************
  5264 ;; Defined at:
  5265 ;;		line 314 in file "MCAL_Layer/CPP1/hal_ccp.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;  _ccp            1    1[COMRAM] PTR const struct .
  5268 ;;		 -> ccp_obj(15), 
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;		None
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  1    wreg      void 
  5273 ;; Registers used:
  5274 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5280 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5283 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;Total ram usage:        1 bytes
  5285 ;; Hardware stack levels used: 1
  5286 ;; Hardware stack levels required when called: 2
  5287 ;; This function calls:
  5288 ;;		Nothing
  5289 ;; This function is called by:
  5290 ;;		_CCP_INIt
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text23
  5295   003EB0                     __ptext23:
  5296                           	callstack 0
  5297   003EB0                     _ccp_interrupt:
  5298                           	callstack 26
  5299   003EB0                     
  5300                           ;MCAL_Layer/CPP1/hal_ccp.c: 315:     if(CCP1_INST== _ccp){
  5301   003EB0  5002               	movf	ccp_interrupt@_ccp^0,w,c
  5302   003EB2  A4D8               	btfss	status,2,c
  5303   003EB4  EF5E  F01F         	goto	u6581
  5304   003EB8  EF60  F01F         	goto	u6580
  5305   003EBC                     u6581:
  5306   003EBC  EF6D  F01F         	goto	l7124
  5307   003EC0                     u6580:
  5308   003EC0                     
  5309                           ;MCAL_Layer/CPP1/hal_ccp.c: 317:         (PIE1bits.CCP1IE =1);
  5310   003EC0  849D               	bsf	157,2,c	;volatile
  5311                           
  5312                           ;MCAL_Layer/CPP1/hal_ccp.c: 318:         (PIR1bits.CCP1IF = 0 );
  5313   003EC2  949E               	bcf	158,2,c	;volatile
  5314   003EC4                     
  5315                           ;MCAL_Layer/CPP1/hal_ccp.c: 319:         CCP1_INTERRUPT_HANDLERF = _ccp->CCP1_INTERRUPT_
      +                          HANDLER ;
  5316   003EC4  5002               	movf	ccp_interrupt@_ccp^0,w,c
  5317   003EC6  6ED9               	movwf	fsr2l,c
  5318   003EC8  6ADA               	clrf	fsr2h,c
  5319   003ECA  CFDE F0BA          	movff	postinc2,_CCP1_INTERRUPT_HANDLERF
  5320   003ECE  CFDD F0BB          	movff	postdec2,_CCP1_INTERRUPT_HANDLERF+1
  5321   003ED2                     
  5322                           ;MCAL_Layer/CPP1/hal_ccp.c: 333:         (INTCONbits.PEIE = 1);
  5323   003ED2  8CF2               	bsf	242,6,c	;volatile
  5324   003ED4                     
  5325                           ;MCAL_Layer/CPP1/hal_ccp.c: 334:         (INTCONbits.GIE = 1);
  5326   003ED4  8EF2               	bsf	242,7,c	;volatile
  5327                           
  5328                           ;MCAL_Layer/CPP1/hal_ccp.c: 340:     }else if(CCP2_INST== _ccp){
  5329   003ED6  EF82  F01F         	goto	l587
  5330   003EDA                     l7124:
  5331   003EDA  0402               	decf	ccp_interrupt@_ccp^0,w,c
  5332   003EDC  A4D8               	btfss	status,2,c
  5333   003EDE  EF73  F01F         	goto	u6591
  5334   003EE2  EF75  F01F         	goto	u6590
  5335   003EE6                     u6591:
  5336   003EE6  EF82  F01F         	goto	l587
  5337   003EEA                     u6590:
  5338   003EEA                     
  5339                           ;MCAL_Layer/CPP1/hal_ccp.c: 342:          (PIE2bits.CCP2IE =1);
  5340   003EEA  80A0               	bsf	160,0,c	;volatile
  5341                           
  5342                           ;MCAL_Layer/CPP1/hal_ccp.c: 343:         (PIR2bits.CCP2IF = 0 );
  5343   003EEC  90A1               	bcf	161,0,c	;volatile
  5344   003EEE                     
  5345                           ;MCAL_Layer/CPP1/hal_ccp.c: 344:         CCP2_INTERRUPT_HANDLERF = _ccp->CCP2_INTERRUPT_
      +                          HANDLER ;
  5346   003EEE  5002               	movf	ccp_interrupt@_ccp^0,w,c
  5347   003EF0  6ED9               	movwf	fsr2l,c
  5348   003EF2  6ADA               	clrf	fsr2h,c
  5349   003EF4  0E03               	movlw	3
  5350   003EF6  26D9               	addwf	fsr2l,f,c
  5351   003EF8  CFDE F0B8          	movff	postinc2,_CCP2_INTERRUPT_HANDLERF
  5352   003EFC  CFDD F0B9          	movff	postdec2,_CCP2_INTERRUPT_HANDLERF+1
  5353   003F00                     
  5354                           ;MCAL_Layer/CPP1/hal_ccp.c: 358:         (INTCONbits.PEIE = 1);
  5355   003F00  8CF2               	bsf	242,6,c	;volatile
  5356   003F02                     
  5357                           ;MCAL_Layer/CPP1/hal_ccp.c: 359:         (INTCONbits.GIE = 1);
  5358   003F02  8EF2               	bsf	242,7,c	;volatile
  5359   003F04                     l587:
  5360   003F04  0012               	return		;funcret
  5361   003F06                     __end_of_ccp_interrupt:
  5362                           	callstack 0
  5363                           
  5364 ;; *************** function _app_initialize *****************
  5365 ;; Defined at:
  5366 ;;		line 140 in file "application.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;		None
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  ret             1   19[COMRAM] unsigned char 
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  1    wreg      void 
  5373 ;; Registers used:
  5374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5381 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;Total ram usage:        1 bytes
  5385 ;; Hardware stack levels used: 1
  5386 ;; Hardware stack levels required when called: 6
  5387 ;; This function calls:
  5388 ;;		_ADC_INIT
  5389 ;;		_lcd_4bit_initialize
  5390 ;;		_motor_initialize
  5391 ;; This function is called by:
  5392 ;;		_main
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           	psect	text24
  5397   0041C6                     __ptext24:
  5398                           	callstack 0
  5399   0041C6                     _app_initialize:
  5400                           	callstack 24
  5401   0041C6                     
  5402                           ;application.c: 141:   Std_ReturnType ret = (Std_ReturnType)0x00;
  5403   0041C6  0E00               	movlw	0
  5404   0041C8  6E14               	movwf	app_initialize@ret^0,c
  5405   0041CA                     
  5406                           ;application.c: 142:   ret|=lcd_4bit_initialize(&lcd_1);
  5407   0041CA  0EF8               	movlw	low _lcd_1
  5408   0041CC  6E10               	movwf	lcd_4bit_initialize@lcd^0,c
  5409   0041CE  ECC7  F019         	call	_lcd_4bit_initialize	;wreg free
  5410   0041D2  1214               	iorwf	app_initialize@ret^0,f,c
  5411   0041D4                     
  5412                           ;application.c: 143:  ret|=motor_initialize(&motor_1);
  5413   0041D4  0EFE               	movlw	low _motor_1
  5414   0041D6  6E0D               	movwf	motor_initialize@motor^0,c
  5415   0041D8  ECCB  F020         	call	_motor_initialize	;wreg free
  5416   0041DC  1214               	iorwf	app_initialize@ret^0,f,c
  5417   0041DE                     
  5418                           ;application.c: 144:  ret|= ADC_INIT(&temp_sens);
  5419   0041DE  0E2A               	movlw	low _temp_sens
  5420   0041E0  6E05               	movwf	ADC_INIT@adc_obj^0,c
  5421   0041E2  0E01               	movlw	high _temp_sens
  5422   0041E4  6E06               	movwf	(ADC_INIT@adc_obj+1)^0,c
  5423   0041E6  ECBC  F018         	call	_ADC_INIT	;wreg free
  5424   0041EA  1214               	iorwf	app_initialize@ret^0,f,c
  5425   0041EC  0012               	return		;funcret
  5426   0041EE                     __end_of_app_initialize:
  5427                           	callstack 0
  5428                           
  5429 ;; *************** function _motor_initialize *****************
  5430 ;; Defined at:
  5431 ;;		line 12 in file "ECU_Layer/DC_MOTOR/ecu_dc_motor.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;  motor           1   12[COMRAM] PTR const struct .
  5434 ;;		 -> motor_1(2), 
  5435 ;; Auto vars:     Size  Location     Type
  5436 ;;  ret             1   13[COMRAM] unsigned char 
  5437 ;; Return value:  Size  Location     Type
  5438 ;;                  1    wreg      unsigned char 
  5439 ;; Registers used:
  5440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5441 ;; Tracked objects:
  5442 ;;		On entry : 0/0
  5443 ;;		On exit  : 0/0
  5444 ;;		Unchanged: 0/0
  5445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5446 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5447 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5450 ;;Total ram usage:        2 bytes
  5451 ;; Hardware stack levels used: 1
  5452 ;; Hardware stack levels required when called: 4
  5453 ;; This function calls:
  5454 ;;		_gpio_pin_intialize
  5455 ;; This function is called by:
  5456 ;;		_app_initialize
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           	psect	text25
  5461   004196                     __ptext25:
  5462                           	callstack 0
  5463   004196                     _motor_initialize:
  5464                           	callstack 25
  5465   004196                     
  5466                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 14:     if(((void*)0)== motor)
  5467   004196  500D               	movf	motor_initialize@motor^0,w,c
  5468   004198  A4D8               	btfss	status,2,c
  5469   00419A  EFD1  F020         	goto	u6691
  5470   00419E  EFD3  F020         	goto	u6690
  5471   0041A2                     u6691:
  5472   0041A2  EFD7  F020         	goto	l7290
  5473   0041A6                     u6690:
  5474   0041A6                     
  5475                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 15:     {;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 16:    
      +                           ret = (Std_ReturnType)0x00 ;
  5476   0041A6  0E00               	movlw	0
  5477   0041A8  6E0E               	movwf	motor_initialize@ret^0,c
  5478                           
  5479                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 17:     }else
  5480   0041AA  EFE1  F020         	goto	l7294
  5481   0041AE                     l7290:
  5482                           
  5483                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 18:     {;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 20:    
      +                                 gpio_pin_intialize(&(motor->motors[0]));
  5484   0041AE  C00D  F00A         	movff	motor_initialize@motor,gpio_pin_intialize@_pin_t
  5485   0041B2  ECCD  F01E         	call	_gpio_pin_intialize	;wreg free
  5486                           
  5487                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 21:           gpio_pin_intialize(&(motor->motors[1])
      +                          );
  5488   0041B6  280D               	incf	motor_initialize@motor^0,w,c
  5489   0041B8  6E0A               	movwf	gpio_pin_intialize@_pin_t^0,c
  5490   0041BA  ECCD  F01E         	call	_gpio_pin_intialize	;wreg free
  5491   0041BE                     
  5492                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 22:      ret = (Std_ReturnType)0x01 ;
  5493   0041BE  0E01               	movlw	1
  5494   0041C0  6E0E               	movwf	motor_initialize@ret^0,c
  5495   0041C2                     l7294:
  5496                           
  5497                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 24:     return ret;
  5498   0041C2  500E               	movf	motor_initialize@ret^0,w,c
  5499   0041C4  0012               	return		;funcret
  5500   0041C6                     __end_of_motor_initialize:
  5501                           	callstack 0
  5502                           
  5503 ;; *************** function _lcd_4bit_initialize *****************
  5504 ;; Defined at:
  5505 ;;		line 14 in file "ECU_Layer/CHR_LCD/ecu_chr_lcd.c"
  5506 ;; Parameters:    Size  Location     Type
  5507 ;;  lcd             1   15[COMRAM] PTR const struct .
  5508 ;;		 -> lcd_1(6), 
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;  ret             1   18[COMRAM] unsigned char 
  5511 ;;  l_counter       1   17[COMRAM] unsigned char 
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  1    wreg      unsigned char 
  5514 ;; Registers used:
  5515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5521 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5522 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5524 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5525 ;;Total ram usage:        4 bytes
  5526 ;; Hardware stack levels used: 1
  5527 ;; Hardware stack levels required when called: 5
  5528 ;; This function calls:
  5529 ;;		_gpio_pin_intialize
  5530 ;;		_lcd_4bit_send_command
  5531 ;; This function is called by:
  5532 ;;		_app_initialize
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           	psect	text26
  5537   00338E                     __ptext26:
  5538                           	callstack 0
  5539   00338E                     _lcd_4bit_initialize:
  5540                           	callstack 24
  5541   00338E                     
  5542                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 16:     uint8 l_counter =0 ;
  5543   00338E  0E00               	movlw	0
  5544   003390  6E12               	movwf	lcd_4bit_initialize@l_counter^0,c
  5545                           
  5546                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 17:     if((((void*)0)==lcd)){
  5547   003392  5010               	movf	lcd_4bit_initialize@lcd^0,w,c
  5548   003394  A4D8               	btfss	status,2,c
  5549   003396  EFCF  F019         	goto	u6611
  5550   00339A  EFD1  F019         	goto	u6610
  5551   00339E                     u6611:
  5552   00339E  EFD5  F019         	goto	l7148
  5553   0033A2                     u6610:
  5554   0033A2                     
  5555                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 18:         ret =(Std_ReturnType)0x00 ;
  5556   0033A2  0E00               	movlw	0
  5557   0033A4  6E13               	movwf	lcd_4bit_initialize@ret^0,c
  5558                           
  5559                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 19:     }else {
  5560   0033A6  EF38  F01A         	goto	l7184
  5561   0033AA                     l7148:
  5562                           
  5563                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 20:         ret= gpio_pin_intialize(&(lcd->pin_Rs));
  5564   0033AA  C010  F00A         	movff	lcd_4bit_initialize@lcd,gpio_pin_intialize@_pin_t
  5565   0033AE  ECCD  F01E         	call	_gpio_pin_intialize	;wreg free
  5566   0033B2  6E13               	movwf	lcd_4bit_initialize@ret^0,c
  5567                           
  5568                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 21:             ret= gpio_pin_intialize(&(lcd->pin_en)
      +                          );
  5569   0033B4  2810               	incf	lcd_4bit_initialize@lcd^0,w,c
  5570   0033B6  6E0A               	movwf	gpio_pin_intialize@_pin_t^0,c
  5571   0033B8  ECCD  F01E         	call	_gpio_pin_intialize	;wreg free
  5572   0033BC  6E13               	movwf	lcd_4bit_initialize@ret^0,c
  5573   0033BE                     
  5574                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 22:             for(l_counter = 0 ; l_counter < 4 ; l_
      +                          counter++){
  5575   0033BE  0E00               	movlw	0
  5576   0033C0  6E12               	movwf	lcd_4bit_initialize@l_counter^0,c
  5577   0033C2                     l7156:
  5578   0033C2  5010               	movf	lcd_4bit_initialize@lcd^0,w,c
  5579   0033C4  2412               	addwf	lcd_4bit_initialize@l_counter^0,w,c
  5580   0033C6  0F02               	addlw	2
  5581   0033C8  6E0A               	movwf	gpio_pin_intialize@_pin_t^0,c
  5582   0033CA  ECCD  F01E         	call	_gpio_pin_intialize	;wreg free
  5583   0033CE                     
  5584                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 24:             }
  5585   0033CE  2A12               	incf	lcd_4bit_initialize@l_counter^0,f,c
  5586   0033D0  0E03               	movlw	3
  5587   0033D2  6412               	cpfsgt	lcd_4bit_initialize@l_counter^0,c
  5588   0033D4  EFEE  F019         	goto	u6621
  5589   0033D8  EFF0  F019         	goto	u6620
  5590   0033DC                     u6621:
  5591   0033DC  EFE1  F019         	goto	l7156
  5592   0033E0                     u6620:
  5593   0033E0                     
  5594                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 25:             _delay((unsigned long)((20)*(8000000UL
      +                          /4000.0)));
  5595   0033E0  0E34               	movlw	52
  5596   0033E2  6E11               	movwf	??_lcd_4bit_initialize^0,c
  5597   0033E4  0EF2               	movlw	242
  5598   0033E6                     u9397:
  5599   0033E6  2EE8               	decfsz	wreg,f,c
  5600   0033E8  D7FE               	bra	u9397
  5601   0033EA  2E11               	decfsz	??_lcd_4bit_initialize^0,f,c
  5602   0033EC  D7FC               	bra	u9397
  5603   0033EE  C010  F00D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  5604   0033F2  0E38               	movlw	56
  5605   0033F4  6E0E               	movwf	lcd_4bit_send_command@command^0,c
  5606   0033F6  EC2A  F01F         	call	_lcd_4bit_send_command	;wreg free
  5607   0033FA                     
  5608                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 27:              _delay((unsigned long)((5)*(8000000UL
      +                          /4000.0)));
  5609   0033FA  0E0D               	movlw	13
  5610   0033FC  6E11               	movwf	??_lcd_4bit_initialize^0,c
  5611   0033FE  0EFC               	movlw	252
  5612   003400                     u9407:
  5613   003400  2EE8               	decfsz	wreg,f,c
  5614   003402  D7FE               	bra	u9407
  5615   003404  2E11               	decfsz	??_lcd_4bit_initialize^0,f,c
  5616   003406  D7FC               	bra	u9407
  5617   003408  C010  F00D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  5618   00340C  0E38               	movlw	56
  5619   00340E  6E0E               	movwf	lcd_4bit_send_command@command^0,c
  5620   003410  EC2A  F01F         	call	_lcd_4bit_send_command	;wreg free
  5621   003414                     
  5622                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 29:             _delay((unsigned long)((150)*(8000000U
      +                          L/4000000.0)));
  5623   003414  0E64               	movlw	100
  5624   003416                     u9417:
  5625   003416  2EE8               	decfsz	wreg,f,c
  5626   003418  D7FE               	bra	u9417
  5627   00341A  C010  F00D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  5628   00341E  0E38               	movlw	56
  5629   003420  6E0E               	movwf	lcd_4bit_send_command@command^0,c
  5630   003422  EC2A  F01F         	call	_lcd_4bit_send_command	;wreg free
  5631   003426  C010  F00D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  5632   00342A  0E01               	movlw	1
  5633   00342C  6E0E               	movwf	lcd_4bit_send_command@command^0,c
  5634   00342E  EC2A  F01F         	call	_lcd_4bit_send_command	;wreg free
  5635   003432  C010  F00D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  5636   003436  0E02               	movlw	2
  5637   003438  6E0E               	movwf	lcd_4bit_send_command@command^0,c
  5638   00343A  EC2A  F01F         	call	_lcd_4bit_send_command	;wreg free
  5639   00343E  C010  F00D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  5640   003442  0E06               	movlw	6
  5641   003444  6E0E               	movwf	lcd_4bit_send_command@command^0,c
  5642   003446  EC2A  F01F         	call	_lcd_4bit_send_command	;wreg free
  5643   00344A  C010  F00D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  5644   00344E  0E0C               	movlw	12
  5645   003450  6E0E               	movwf	lcd_4bit_send_command@command^0,c
  5646   003452  EC2A  F01F         	call	_lcd_4bit_send_command	;wreg free
  5647   003456  C010  F00D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  5648   00345A  0E28               	movlw	40
  5649   00345C  6E0E               	movwf	lcd_4bit_send_command@command^0,c
  5650   00345E  EC2A  F01F         	call	_lcd_4bit_send_command	;wreg free
  5651   003462                     
  5652                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 39:              ret = lcd_4bit_send_command(lcd ,0x80
      +                          );
  5653   003462  C010  F00D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  5654   003466  0E80               	movlw	128
  5655   003468  6E0E               	movwf	lcd_4bit_send_command@command^0,c
  5656   00346A  EC2A  F01F         	call	_lcd_4bit_send_command	;wreg free
  5657   00346E  6E13               	movwf	lcd_4bit_initialize@ret^0,c
  5658   003470                     l7184:
  5659                           
  5660                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 42:     return ret ;
  5661   003470  5013               	movf	lcd_4bit_initialize@ret^0,w,c
  5662   003472  0012               	return		;funcret
  5663   003474                     __end_of_lcd_4bit_initialize:
  5664                           	callstack 0
  5665                           
  5666 ;; *************** function _lcd_4bit_send_command *****************
  5667 ;; Defined at:
  5668 ;;		line 45 in file "ECU_Layer/CHR_LCD/ecu_chr_lcd.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  lcd             1   12[COMRAM] PTR const struct .
  5671 ;;		 -> lcd_1(6), 
  5672 ;;  command         1   13[COMRAM] unsigned char 
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;  ret             1   14[COMRAM] unsigned char 
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  1    wreg      unsigned char 
  5677 ;; Registers used:
  5678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5687 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5688 ;;Total ram usage:        3 bytes
  5689 ;; Hardware stack levels used: 1
  5690 ;; Hardware stack levels required when called: 4
  5691 ;; This function calls:
  5692 ;;		_gpio_pin_write_logic
  5693 ;;		_lcd_send_4bit_command_data
  5694 ;;		_lcd_send_4bit_enable
  5695 ;; This function is called by:
  5696 ;;		_lcd_4bit_initialize
  5697 ;;		_lcd_set_cursor_4bit
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           	psect	text27
  5702   003E54                     __ptext27:
  5703                           	callstack 0
  5704   003E54                     _lcd_4bit_send_command:
  5705                           	callstack 24
  5706   003E54                     
  5707                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 47:     if((((void*)0)==lcd)){
  5708   003E54  500D               	movf	lcd_4bit_send_command@lcd^0,w,c
  5709   003E56  A4D8               	btfss	status,2,c
  5710   003E58  EF30  F01F         	goto	u6411
  5711   003E5C  EF32  F01F         	goto	u6410
  5712   003E60                     u6411:
  5713   003E60  EF36  F01F         	goto	l6936
  5714   003E64                     u6410:
  5715   003E64                     
  5716                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 48:         ret =(Std_ReturnType)0x00 ;
  5717   003E64  0E00               	movlw	0
  5718   003E66  6E0F               	movwf	lcd_4bit_send_command@ret^0,c
  5719                           
  5720                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 49:     }else {
  5721   003E68  EF56  F01F         	goto	l6938
  5722   003E6C                     l6936:
  5723                           
  5724                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 50:         ret = gpio_pin_write_logic(&(lcd->pin_Rs) 
      +                          , LOGIC_LOW);
  5725   003E6C  C00D  F002         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_t
  5726   003E70  0E00               	movlw	0
  5727   003E72  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  5728   003E74  EC34  F018         	call	_gpio_pin_write_logic	;wreg free
  5729   003E78  6E0F               	movwf	lcd_4bit_send_command@ret^0,c
  5730                           
  5731                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 51:         ret = lcd_send_4bit_command_data((lcd) , c
      +                          ommand>>4);
  5732   003E7A  C00D  F00A         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit_command_data@lcd
  5733   003E7E  380E               	swapf	lcd_4bit_send_command@command^0,w,c
  5734   003E80  0B0F               	andlw	15
  5735   003E82  6E0B               	movwf	lcd_send_4bit_command_data@data^0,c
  5736   003E84  EC2C  F01E         	call	_lcd_send_4bit_command_data	;wreg free
  5737   003E88  6E0F               	movwf	lcd_4bit_send_command@ret^0,c
  5738                           
  5739                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 52:         ret = lcd_send_4bit_enable((lcd));
  5740   003E8A  C00D  F00A         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit_enable@lcd
  5741   003E8E  ECEC  F01F         	call	_lcd_send_4bit_enable	;wreg free
  5742   003E92  6E0F               	movwf	lcd_4bit_send_command@ret^0,c
  5743                           
  5744                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 53:          ret = lcd_send_4bit_command_data((lcd) , 
      +                          command);
  5745   003E94  C00D  F00A         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit_command_data@lcd
  5746   003E98  C00E  F00B         	movff	lcd_4bit_send_command@command,lcd_send_4bit_command_data@data
  5747   003E9C  EC2C  F01E         	call	_lcd_send_4bit_command_data	;wreg free
  5748   003EA0  6E0F               	movwf	lcd_4bit_send_command@ret^0,c
  5749                           
  5750                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 54:         ret = lcd_send_4bit_enable((lcd));
  5751   003EA2  C00D  F00A         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit_enable@lcd
  5752   003EA6  ECEC  F01F         	call	_lcd_send_4bit_enable	;wreg free
  5753   003EAA  6E0F               	movwf	lcd_4bit_send_command@ret^0,c
  5754   003EAC                     l6938:
  5755                           
  5756                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 57:     return ret ;
  5757   003EAC  500F               	movf	lcd_4bit_send_command@ret^0,w,c
  5758   003EAE  0012               	return		;funcret
  5759   003EB0                     __end_of_lcd_4bit_send_command:
  5760                           	callstack 0
  5761                           
  5762 ;; *************** function _lcd_send_4bit_enable *****************
  5763 ;; Defined at:
  5764 ;;		line 313 in file "ECU_Layer/CHR_LCD/ecu_chr_lcd.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  lcd             1    9[COMRAM] PTR const struct .
  5767 ;;		 -> lcd_1(6), 
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;  ret             1   10[COMRAM] unsigned char 
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  1    wreg      unsigned char 
  5772 ;; Registers used:
  5773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5779 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5782 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5783 ;;Total ram usage:        2 bytes
  5784 ;; Hardware stack levels used: 1
  5785 ;; Hardware stack levels required when called: 3
  5786 ;; This function calls:
  5787 ;;		_gpio_pin_write_logic
  5788 ;; This function is called by:
  5789 ;;		_lcd_4bit_send_command
  5790 ;;		_lcd_4bit_send_data_char
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           	psect	text28
  5795   003FD8                     __ptext28:
  5796                           	callstack 0
  5797   003FD8                     _lcd_send_4bit_enable:
  5798                           	callstack 24
  5799   003FD8                     
  5800                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 316:     if((((void*)0)==lcd)){
  5801   003FD8  500A               	movf	lcd_send_4bit_enable@lcd^0,w,c
  5802   003FDA  A4D8               	btfss	status,2,c
  5803   003FDC  EFF2  F01F         	goto	u5271
  5804   003FE0  EFF4  F01F         	goto	u5270
  5805   003FE4                     u5271:
  5806   003FE4  EFF8  F01F         	goto	l6286
  5807   003FE8                     u5270:
  5808   003FE8                     
  5809                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 317:         ret =(Std_ReturnType)0x00 ;
  5810   003FE8  0E00               	movlw	0
  5811   003FEA  6E0B               	movwf	lcd_send_4bit_enable@ret^0,c
  5812                           
  5813                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 318:     }else {
  5814   003FEC  EF0A  F020         	goto	l6294
  5815   003FF0                     l6286:
  5816   003FF0  280A               	incf	lcd_send_4bit_enable@lcd^0,w,c
  5817   003FF2  6E02               	movwf	gpio_pin_write_logic@_pin_t^0,c
  5818   003FF4  0E01               	movlw	1
  5819   003FF6  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  5820   003FF8  EC34  F018         	call	_gpio_pin_write_logic	;wreg free
  5821   003FFC                     
  5822                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 320:          _delay((unsigned long)((5)*(8000000UL/40
      +                          00000.0)));
  5823   003FFC  0E03               	movlw	3
  5824   003FFE                     u9427:
  5825   003FFE  2EE8               	decfsz	wreg,f,c
  5826   004000  D7FE               	bra	u9427
  5827   004002  0000               	nop	
  5828   004004  280A               	incf	lcd_send_4bit_enable@lcd^0,w,c
  5829   004006  6E02               	movwf	gpio_pin_write_logic@_pin_t^0,c
  5830   004008  0E00               	movlw	0
  5831   00400A  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  5832   00400C  EC34  F018         	call	_gpio_pin_write_logic	;wreg free
  5833   004010                     
  5834                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 322:         ret= (Std_ReturnType)0x01 ;
  5835   004010  0E01               	movlw	1
  5836   004012  6E0B               	movwf	lcd_send_4bit_enable@ret^0,c
  5837   004014                     l6294:
  5838                           
  5839                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 324:     return ret ;
  5840   004014  500B               	movf	lcd_send_4bit_enable@ret^0,w,c
  5841   004016  0012               	return		;funcret
  5842   004018                     __end_of_lcd_send_4bit_enable:
  5843                           	callstack 0
  5844                           
  5845 ;; *************** function _lcd_send_4bit_command_data *****************
  5846 ;; Defined at:
  5847 ;;		line 287 in file "ECU_Layer/CHR_LCD/ecu_chr_lcd.c"
  5848 ;; Parameters:    Size  Location     Type
  5849 ;;  lcd             1    9[COMRAM] PTR const struct .
  5850 ;;		 -> lcd_1(6), 
  5851 ;;  data            1   10[COMRAM] unsigned char 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;  ret             1    0        unsigned char 
  5854 ;;  ret             1   11[COMRAM] unsigned char 
  5855 ;; Return value:  Size  Location     Type
  5856 ;;                  1    wreg      unsigned char 
  5857 ;; Registers used:
  5858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5864 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5865 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5867 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5868 ;;Total ram usage:        3 bytes
  5869 ;; Hardware stack levels used: 1
  5870 ;; Hardware stack levels required when called: 3
  5871 ;; This function calls:
  5872 ;;		_gpio_pin_write_logic
  5873 ;; This function is called by:
  5874 ;;		_lcd_4bit_send_command
  5875 ;;		_lcd_4bit_send_data_char
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879                           	psect	text29
  5880   003C58                     __ptext29:
  5881                           	callstack 0
  5882   003C58                     _lcd_send_4bit_command_data:
  5883                           	callstack 24
  5884   003C58                     
  5885                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 289:     if((((void*)0)==lcd)){
  5886   003C58  500A               	movf	lcd_send_4bit_command_data@lcd^0,w,c
  5887   003C5A  A4D8               	btfss	status,2,c
  5888   003C5C  EF32  F01E         	goto	u5261
  5889   003C60  EF34  F01E         	goto	u5260
  5890   003C64                     u5261:
  5891   003C64  EF38  F01E         	goto	l6274
  5892   003C68                     u5260:
  5893   003C68                     
  5894                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 290:         ret =(Std_ReturnType)0x00 ;
  5895   003C68  0E00               	movlw	0
  5896   003C6A  6E0C               	movwf	lcd_send_4bit_command_data@ret^0,c
  5897                           
  5898                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 291:     }else {
  5899   003C6C  EF61  F01E         	goto	l6278
  5900   003C70                     l6274:
  5901                           
  5902                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 292:          ret = gpio_pin_write_logic(&(lcd->lcd_pi
      +                          ns[0]),(data>>0 )&(uint8)(0x01));
  5903   003C70  500A               	movf	lcd_send_4bit_command_data@lcd^0,w,c
  5904   003C72  0F02               	addlw	2
  5905   003C74  6E02               	movwf	gpio_pin_write_logic@_pin_t^0,c
  5906   003C76  500B               	movf	lcd_send_4bit_command_data@data^0,w,c
  5907   003C78  0B01               	andlw	1
  5908   003C7A  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  5909   003C7C  EC34  F018         	call	_gpio_pin_write_logic	;wreg free
  5910   003C80  6E0C               	movwf	lcd_send_4bit_command_data@ret^0,c
  5911                           
  5912                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 293:          ret = gpio_pin_write_logic(&(lcd->lcd_pi
      +                          ns[1]),(data>>1 )&(uint8)(0x01));
  5913   003C82  500A               	movf	lcd_send_4bit_command_data@lcd^0,w,c
  5914   003C84  0F03               	addlw	3
  5915   003C86  6E02               	movwf	gpio_pin_write_logic@_pin_t^0,c
  5916   003C88  90D8               	bcf	status,0,c
  5917   003C8A  300B               	rrcf	lcd_send_4bit_command_data@data^0,w,c
  5918   003C8C  0B01               	andlw	1
  5919   003C8E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  5920   003C90  EC34  F018         	call	_gpio_pin_write_logic	;wreg free
  5921   003C94  6E0C               	movwf	lcd_send_4bit_command_data@ret^0,c
  5922                           
  5923                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 294:           ret = gpio_pin_write_logic(&(lcd->lcd_p
      +                          ins[2]),(data >>2)&(uint8)(0x01));
  5924   003C96  500A               	movf	lcd_send_4bit_command_data@lcd^0,w,c
  5925   003C98  0F04               	addlw	4
  5926   003C9A  6E02               	movwf	gpio_pin_write_logic@_pin_t^0,c
  5927   003C9C  400B               	rrncf	lcd_send_4bit_command_data@data^0,w,c
  5928   003C9E  42E8               	rrncf	wreg,f,c
  5929   003CA0  0B3F               	andlw	63
  5930   003CA2  0B01               	andlw	1
  5931   003CA4  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  5932   003CA6  EC34  F018         	call	_gpio_pin_write_logic	;wreg free
  5933   003CAA  6E0C               	movwf	lcd_send_4bit_command_data@ret^0,c
  5934                           
  5935                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 295:            ret = gpio_pin_write_logic(&(lcd->lcd_
      +                          pins[3]),(data >>3)&(uint8)(0x01));
  5936   003CAC  500A               	movf	lcd_send_4bit_command_data@lcd^0,w,c
  5937   003CAE  0F05               	addlw	5
  5938   003CB0  6E02               	movwf	gpio_pin_write_logic@_pin_t^0,c
  5939   003CB2  380B               	swapf	lcd_send_4bit_command_data@data^0,w,c
  5940   003CB4  46E8               	rlncf	wreg,f,c
  5941   003CB6  0B1F               	andlw	31
  5942   003CB8  0B01               	andlw	1
  5943   003CBA  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  5944   003CBC  EC34  F018         	call	_gpio_pin_write_logic	;wreg free
  5945   003CC0  6E0C               	movwf	lcd_send_4bit_command_data@ret^0,c
  5946   003CC2                     l6278:
  5947                           
  5948                           ;ECU_Layer/CHR_LCD/ecu_chr_lcd.c: 298:     return ret ;
  5949   003CC2  500C               	movf	lcd_send_4bit_command_data@ret^0,w,c
  5950   003CC4  0012               	return		;funcret
  5951   003CC6                     __end_of_lcd_send_4bit_command_data:
  5952                           	callstack 0
  5953                           
  5954 ;; *************** function _gpio_pin_intialize *****************
  5955 ;; Defined at:
  5956 ;;		line 155 in file "MCAL_Layer/GPIO/hal_gpio.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;  _pin_t          1    9[COMRAM] PTR struct .
  5959 ;;		 -> ccp_obj$ccp_pin(1), ccp_obj(15), lcd_1$lcd_pins(4), lcd_1$pin_en(1), 
  5960 ;;		 -> lcd_1$pin_Rs(1), lcd_1(6), motor_1$motors(2), motor_1(2), 
  5961 ;;		 -> spi_slave_mode_configuration@SS_PIN(1), spi_slave_mode_configuration@SKL(1), spi_slave_mode_configuration@SDI(1)
      +, spi_slave_mode_configuration@SDO(1), 
  5962 ;;		 -> spi_master_mode_configuration@SKL(1), spi_master_mode_configuration@SDI(1), spi_master_mode_configuration@SDO(1)
      +, relay_initalize@obj(1), 
  5963 ;;		 -> led_intalize@obj(1), 
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;  ret             1   11[COMRAM] unsigned char 
  5966 ;; Return value:  Size  Location     Type
  5967 ;;                  1    wreg      unsigned char 
  5968 ;; Registers used:
  5969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5975 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5976 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5977 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5978 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5979 ;;Total ram usage:        3 bytes
  5980 ;; Hardware stack levels used: 1
  5981 ;; Hardware stack levels required when called: 3
  5982 ;; This function calls:
  5983 ;;		_gpio_pin_direction_intialize
  5984 ;;		_gpio_pin_write_logic
  5985 ;; This function is called by:
  5986 ;;		_lcd_4bit_initialize
  5987 ;;		_motor_initialize
  5988 ;;		_CCP_INIt
  5989 ;;		_Segment_initalize
  5990 ;;		_lcd_8bit_initialize
  5991 ;;		_keypad_initialize
  5992 ;;		_led_intalize
  5993 ;;		_relay_initalize
  5994 ;;		_spi_master_mode_configuration
  5995 ;;		_spi_slave_mode_configuration
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           	psect	text30
  6000   003D9A                     __ptext30:
  6001                           	callstack 0
  6002   003D9A                     _gpio_pin_intialize:
  6003                           	callstack 25
  6004   003D9A                     
  6005                           ;MCAL_Layer/GPIO/hal_gpio.c: 158:     if((((void*)0) ==_pin_t)|| _pin_t->pin > (8)-1 )
  6006   003D9A  500A               	movf	gpio_pin_intialize@_pin_t^0,w,c
  6007   003D9C  B4D8               	btfsc	status,2,c
  6008   003D9E  EFD3  F01E         	goto	u6391
  6009   003DA2  EFD5  F01E         	goto	u6390
  6010   003DA6                     u6391:
  6011   003DA6  EFE5  F01E         	goto	l6924
  6012   003DAA                     u6390:
  6013   003DAA  500A               	movf	gpio_pin_intialize@_pin_t^0,w,c
  6014   003DAC  6ED9               	movwf	fsr2l,c
  6015   003DAE  6ADA               	clrf	fsr2h,c
  6016   003DB0  30DF               	rrcf	223,w,c
  6017   003DB2  32E8               	rrcf	wreg,f,c
  6018   003DB4  32E8               	rrcf	wreg,f,c
  6019   003DB6  0B07               	andlw	7
  6020   003DB8  6E0B               	movwf	??_gpio_pin_intialize^0,c
  6021   003DBA  0E07               	movlw	7
  6022   003DBC  640B               	cpfsgt	??_gpio_pin_intialize^0,c
  6023   003DBE  EFE3  F01E         	goto	u6401
  6024   003DC2  EFE5  F01E         	goto	u6400
  6025   003DC6                     u6401:
  6026   003DC6  EFE9  F01E         	goto	l6926
  6027   003DCA                     u6400:
  6028   003DCA                     l6924:
  6029                           
  6030                           ;MCAL_Layer/GPIO/hal_gpio.c: 159:     {;MCAL_Layer/GPIO/hal_gpio.c: 160:         ret =(S
      +                          td_ReturnType)0x00;
  6031   003DCA  0E00               	movlw	0
  6032   003DCC  6E0C               	movwf	gpio_pin_intialize@ret^0,c
  6033                           
  6034                           ;MCAL_Layer/GPIO/hal_gpio.c: 161:     }
  6035   003DCE  EFFA  F01E         	goto	l6928
  6036   003DD2                     l6926:
  6037                           
  6038                           ;MCAL_Layer/GPIO/hal_gpio.c: 163:     {;MCAL_Layer/GPIO/hal_gpio.c: 164:         ret = g
      +                          pio_pin_direction_intialize(_pin_t);
  6039   003DD2  C00A  F002         	movff	gpio_pin_intialize@_pin_t,gpio_pin_direction_intialize@__pin_t
  6040   003DD6  ECA1  F017         	call	_gpio_pin_direction_intialize	;wreg free
  6041   003DDA  6E0C               	movwf	gpio_pin_intialize@ret^0,c
  6042                           
  6043                           ;MCAL_Layer/GPIO/hal_gpio.c: 165:         ret = gpio_pin_write_logic(_pin_t ,_pin_t->log
      +                          ic);
  6044   003DDC  C00A  F002         	movff	gpio_pin_intialize@_pin_t,gpio_pin_write_logic@_pin_t
  6045   003DE0  500A               	movf	gpio_pin_intialize@_pin_t^0,w,c
  6046   003DE2  6ED9               	movwf	fsr2l,c
  6047   003DE4  6ADA               	clrf	fsr2h,c
  6048   003DE6  0E00               	movlw	0
  6049   003DE8  BEDF               	btfsc	indf2,7,c
  6050   003DEA  0E01               	movlw	1
  6051   003DEC  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  6052   003DEE  EC34  F018         	call	_gpio_pin_write_logic	;wreg free
  6053   003DF2  6E0C               	movwf	gpio_pin_intialize@ret^0,c
  6054   003DF4                     l6928:
  6055                           
  6056                           ;MCAL_Layer/GPIO/hal_gpio.c: 169: return ret;
  6057   003DF4  500C               	movf	gpio_pin_intialize@ret^0,w,c
  6058   003DF6  0012               	return		;funcret
  6059   003DF8                     __end_of_gpio_pin_intialize:
  6060                           	callstack 0
  6061                           
  6062 ;; *************** function _gpio_pin_write_logic *****************
  6063 ;; Defined at:
  6064 ;;		line 77 in file "MCAL_Layer/GPIO/hal_gpio.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;  _pin_t          1    1[COMRAM] PTR const struct .
  6067 ;;		 -> ccp_obj$ccp_pin(1), ccp_obj(15), lcd_1$lcd_pins(4), lcd_1$pin_en(1), 
  6068 ;;		 -> lcd_1$pin_Rs(1), lcd_1(6), motor_1$motors(2), motor_1(2), 
  6069 ;;		 -> spi_slave_mode_configuration@SS_PIN(1), spi_slave_mode_configuration@SKL(1), spi_slave_mode_configuration@SDI(1)
      +, spi_slave_mode_configuration@SDO(1), 
  6070 ;;		 -> spi_master_mode_configuration@SKL(1), spi_master_mode_configuration@SDI(1), spi_master_mode_configuration@SDO(1)
      +, relay_off@obj(1), 
  6071 ;;		 -> relay_on@obj(1), relay_initalize@obj(1), led_off@obj(1), led_on@obj(1), 
  6072 ;;		 -> led_intalize@obj(1), 
  6073 ;;  logic           1    2[COMRAM] enum E2978
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;  ret             1    8[COMRAM] unsigned char 
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  1    wreg      unsigned char 
  6078 ;; Registers used:
  6079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;Total ram usage:        8 bytes
  6090 ;; Hardware stack levels used: 1
  6091 ;; Hardware stack levels required when called: 2
  6092 ;; This function calls:
  6093 ;;		Nothing
  6094 ;; This function is called by:
  6095 ;;		_lcd_4bit_send_command
  6096 ;;		_lcd_4bit_send_data_char
  6097 ;;		_lcd_send_4bit_command_data
  6098 ;;		_lcd_send_4bit_enable
  6099 ;;		_motor_move_left
  6100 ;;		_motor_stop
  6101 ;;		_gpio_pin_intialize
  6102 ;;		_Segment_Write_number
  6103 ;;		_lcd_8bit_send_command
  6104 ;;		_lcd_8bit_send_data_char
  6105 ;;		_lcd_send_8bit_enable
  6106 ;;		_motor_move_right
  6107 ;;		_keypad_get_value
  6108 ;;		_led_on
  6109 ;;		_led_off
  6110 ;;		_relay_on
  6111 ;;		_relay_off
  6112 ;; This function uses a non-reentrant model
  6113 ;;
  6114                           
  6115                           	psect	text31
  6116   003068                     __ptext31:
  6117                           	callstack 0
  6118   003068                     _gpio_pin_write_logic:
  6119                           	callstack 27
  6120   003068                     
  6121                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:     Std_ReturnType ret = (Std_ReturnType)0x01;
  6122   003068  0E01               	movlw	1
  6123   00306A  6E09               	movwf	gpio_pin_write_logic@ret^0,c
  6124                           
  6125                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:     if( ((void*)0) ==_pin_t || _pin_t->pin > (8)-1 )
  6126   00306C  5002               	movf	gpio_pin_write_logic@_pin_t^0,w,c
  6127   00306E  B4D8               	btfsc	status,2,c
  6128   003070  EF3C  F018         	goto	u4991
  6129   003074  EF3E  F018         	goto	u4990
  6130   003078                     u4991:
  6131   003078  EF4E  F018         	goto	l6132
  6132   00307C                     u4990:
  6133   00307C  5002               	movf	gpio_pin_write_logic@_pin_t^0,w,c
  6134   00307E  6ED9               	movwf	fsr2l,c
  6135   003080  6ADA               	clrf	fsr2h,c
  6136   003082  30DF               	rrcf	223,w,c
  6137   003084  32E8               	rrcf	wreg,f,c
  6138   003086  32E8               	rrcf	wreg,f,c
  6139   003088  0B07               	andlw	7
  6140   00308A  6E04               	movwf	??_gpio_pin_write_logic^0,c
  6141   00308C  0E07               	movlw	7
  6142   00308E  6404               	cpfsgt	??_gpio_pin_write_logic^0,c
  6143   003090  EF4C  F018         	goto	u5001
  6144   003094  EF4E  F018         	goto	u5000
  6145   003098                     u5001:
  6146   003098  EFA5  F018         	goto	l6140
  6147   00309C                     u5000:
  6148   00309C                     l6132:
  6149                           
  6150                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:     {;MCAL_Layer/GPIO/hal_gpio.c: 81:         ret = (St
      +                          d_ReturnType)0x00;
  6151   00309C  0E00               	movlw	0
  6152   00309E  6E09               	movwf	gpio_pin_write_logic@ret^0,c
  6153                           
  6154                           ;MCAL_Layer/GPIO/hal_gpio.c: 82:     }
  6155   0030A0  EFBA  F018         	goto	l6142
  6156   0030A4                     l6134:
  6157                           
  6158                           ;MCAL_Layer/GPIO/hal_gpio.c: 87:               (*lat_registers[_pin_t->port] |= ( (uint8
      +                          ) 1 << _pin_t->pin )) ;
  6159   0030A4  5002               	movf	gpio_pin_write_logic@_pin_t^0,w,c
  6160   0030A6  6ED9               	movwf	fsr2l,c
  6161   0030A8  6ADA               	clrf	fsr2h,c
  6162   0030AA  30DF               	rrcf	223,w,c
  6163   0030AC  32E8               	rrcf	wreg,f,c
  6164   0030AE  32E8               	rrcf	wreg,f,c
  6165   0030B0  0B07               	andlw	7
  6166   0030B2  6E04               	movwf	??_gpio_pin_write_logic^0,c
  6167   0030B4  0E01               	movlw	1
  6168   0030B6  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  6169   0030B8  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  6170   0030BA  EF61  F018         	goto	u5014
  6171   0030BE                     u5015:
  6172   0030BE  90D8               	bcf	status,0,c
  6173   0030C0  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  6174   0030C2                     u5014:
  6175   0030C2  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  6176   0030C4  EF5F  F018         	goto	u5015
  6177   0030C8  5002               	movf	gpio_pin_write_logic@_pin_t^0,w,c
  6178   0030CA  6ED9               	movwf	fsr2l,c
  6179   0030CC  6ADA               	clrf	fsr2h,c
  6180   0030CE  50DF               	movf	223,w,c
  6181   0030D0  0B07               	andlw	7
  6182   0030D2  0D02               	mullw	2
  6183   0030D4  50F3               	movf	243,w,c
  6184   0030D6  0FDE               	addlw	low _lat_registers
  6185   0030D8  6ED9               	movwf	fsr2l,c
  6186   0030DA  6ADA               	clrf	fsr2h,c
  6187   0030DC  CFDE F006          	movff	postinc2,??_gpio_pin_write_logic+2
  6188   0030E0  CFDD F007          	movff	postdec2,??_gpio_pin_write_logic+3
  6189   0030E4  C006  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  6190   0030E8  C007  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  6191   0030EC  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  6192   0030EE  12DF               	iorwf	indf2,f,c
  6193                           
  6194                           ;MCAL_Layer/GPIO/hal_gpio.c: 88:               break;
  6195   0030F0  EFBA  F018         	goto	l6142
  6196   0030F4                     l6136:
  6197                           
  6198                           ;MCAL_Layer/GPIO/hal_gpio.c: 90:             (*lat_registers[_pin_t->port] &= ~( (uint8)
      +                           1 << _pin_t->pin )) ;
  6199   0030F4  5002               	movf	gpio_pin_write_logic@_pin_t^0,w,c
  6200   0030F6  6ED9               	movwf	fsr2l,c
  6201   0030F8  6ADA               	clrf	fsr2h,c
  6202   0030FA  30DF               	rrcf	223,w,c
  6203   0030FC  32E8               	rrcf	wreg,f,c
  6204   0030FE  32E8               	rrcf	wreg,f,c
  6205   003100  0B07               	andlw	7
  6206   003102  6E04               	movwf	??_gpio_pin_write_logic^0,c
  6207   003104  0E01               	movlw	1
  6208   003106  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  6209   003108  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  6210   00310A  EF89  F018         	goto	u5024
  6211   00310E                     u5025:
  6212   00310E  90D8               	bcf	status,0,c
  6213   003110  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  6214   003112                     u5024:
  6215   003112  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  6216   003114  EF87  F018         	goto	u5025
  6217   003118  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  6218   00311A  0AFF               	xorlw	255
  6219   00311C  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  6220   00311E  5002               	movf	gpio_pin_write_logic@_pin_t^0,w,c
  6221   003120  6ED9               	movwf	fsr2l,c
  6222   003122  6ADA               	clrf	fsr2h,c
  6223   003124  50DF               	movf	223,w,c
  6224   003126  0B07               	andlw	7
  6225   003128  0D02               	mullw	2
  6226   00312A  50F3               	movf	243,w,c
  6227   00312C  0FDE               	addlw	low _lat_registers
  6228   00312E  6ED9               	movwf	fsr2l,c
  6229   003130  6ADA               	clrf	fsr2h,c
  6230   003132  CFDE F007          	movff	postinc2,??_gpio_pin_write_logic+3
  6231   003136  CFDD F008          	movff	postdec2,??_gpio_pin_write_logic+4
  6232   00313A  C007  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  6233   00313E  C008  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  6234   003142  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  6235   003144  16DF               	andwf	indf2,f,c
  6236                           
  6237                           ;MCAL_Layer/GPIO/hal_gpio.c: 91:             break;
  6238   003146  EFBA  F018         	goto	l6142
  6239   00314A                     l6140:
  6240   00314A  5003               	movf	gpio_pin_write_logic@logic^0,w,c
  6241   00314C  6E04               	movwf	??_gpio_pin_write_logic^0,c
  6242   00314E  6A05               	clrf	(??_gpio_pin_write_logic+1)^0,c
  6243                           
  6244                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6245                           ; Switch size 1, requested type "simple"
  6246                           ; Number of cases is 1, Range of values is 0 to 0
  6247                           ; switch strategies available:
  6248                           ; Name         Instructions Cycles
  6249                           ; simple_byte            4     3 (average)
  6250                           ;	Chosen strategy is simple_byte
  6251   003150  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  6252   003152  0A00               	xorlw	0	; case 0
  6253   003154  B4D8               	btfsc	status,2,c
  6254   003156  EFAF  F018         	goto	l9628
  6255   00315A  EF4E  F018         	goto	l6132
  6256   00315E                     l9628:
  6257                           
  6258                           ; Switch size 1, requested type "simple"
  6259                           ; Number of cases is 2, Range of values is 0 to 1
  6260                           ; switch strategies available:
  6261                           ; Name         Instructions Cycles
  6262                           ; simple_byte            7     4 (average)
  6263                           ;	Chosen strategy is simple_byte
  6264   00315E  5004               	movf	??_gpio_pin_write_logic^0,w,c
  6265   003160  0A00               	xorlw	0	; case 0
  6266   003162  B4D8               	btfsc	status,2,c
  6267   003164  EF7A  F018         	goto	l6136
  6268   003168  0A01               	xorlw	1	; case 1
  6269   00316A  B4D8               	btfsc	status,2,c
  6270   00316C  EF52  F018         	goto	l6134
  6271   003170  EF4E  F018         	goto	l6132
  6272   003174                     l6142:
  6273                           
  6274                           ;MCAL_Layer/GPIO/hal_gpio.c: 98:     return ret;
  6275   003174  5009               	movf	gpio_pin_write_logic@ret^0,w,c
  6276   003176  0012               	return		;funcret
  6277   003178                     __end_of_gpio_pin_write_logic:
  6278                           	callstack 0
  6279                           
  6280 ;; *************** function _gpio_pin_direction_intialize *****************
  6281 ;; Defined at:
  6282 ;;		line 22 in file "MCAL_Layer/GPIO/hal_gpio.c"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;  __pin_t         1    1[COMRAM] PTR const struct .
  6285 ;;		 -> ccp_obj$ccp_pin(1), ccp_obj(15), lcd_1$lcd_pins(4), lcd_1$pin_en(1), 
  6286 ;;		 -> lcd_1$pin_Rs(1), lcd_1(6), motor_1$motors(2), motor_1(2), 
  6287 ;;		 -> spi_slave_mode_configuration@SS_PIN(1), spi_slave_mode_configuration@SKL(1), spi_slave_mode_configuration@SDI(1)
      +, spi_slave_mode_configuration@SDO(1), 
  6288 ;;		 -> spi_master_mode_configuration@SKL(1), spi_master_mode_configuration@SDI(1), spi_master_mode_configuration@SDO(1)
      +, relay_initalize@obj(1), 
  6289 ;;		 -> led_intalize@obj(1), 
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;  ret             1    7[COMRAM] unsigned char 
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  1    wreg      unsigned char 
  6294 ;; Registers used:
  6295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6301 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6302 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6303 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6304 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6305 ;;Total ram usage:        7 bytes
  6306 ;; Hardware stack levels used: 1
  6307 ;; Hardware stack levels required when called: 2
  6308 ;; This function calls:
  6309 ;;		Nothing
  6310 ;; This function is called by:
  6311 ;;		_gpio_pin_intialize
  6312 ;;		_button_initalize
  6313 ;;		_keypad_initialize
  6314 ;;		_Interrupt_RBx_Init
  6315 ;;		_Interrupt_INTx_Pin_init
  6316 ;;		_Interrupt_RBx_Pin_init
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           	psect	text32
  6321   002F42                     __ptext32:
  6322                           	callstack 0
  6323   002F42                     _gpio_pin_direction_intialize:
  6324                           	callstack 25
  6325   002F42                     
  6326                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     Std_ReturnType ret = (Std_ReturnType)0x01;
  6327   002F42  0E01               	movlw	1
  6328   002F44  6E08               	movwf	gpio_pin_direction_intialize@ret^0,c
  6329                           
  6330                           ;MCAL_Layer/GPIO/hal_gpio.c: 24:     if( ((void*)0) ==__pin_t ||__pin_t ->pin > (8)-1 )
  6331   002F46  5002               	movf	gpio_pin_direction_intialize@__pin_t^0,w,c
  6332   002F48  B4D8               	btfsc	status,2,c
  6333   002F4A  EFA9  F017         	goto	u5201
  6334   002F4E  EFAB  F017         	goto	u5200
  6335   002F52                     u5201:
  6336   002F52  EFBB  F017         	goto	l6252
  6337   002F56                     u5200:
  6338   002F56  5002               	movf	gpio_pin_direction_intialize@__pin_t^0,w,c
  6339   002F58  6ED9               	movwf	fsr2l,c
  6340   002F5A  6ADA               	clrf	fsr2h,c
  6341   002F5C  30DF               	rrcf	223,w,c
  6342   002F5E  32E8               	rrcf	wreg,f,c
  6343   002F60  32E8               	rrcf	wreg,f,c
  6344   002F62  0B07               	andlw	7
  6345   002F64  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  6346   002F66  0E07               	movlw	7
  6347   002F68  6403               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  6348   002F6A  EFB9  F017         	goto	u5211
  6349   002F6E  EFBB  F017         	goto	u5210
  6350   002F72                     u5211:
  6351   002F72  EF12  F018         	goto	l6260
  6352   002F76                     u5210:
  6353   002F76                     l6252:
  6354                           
  6355                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     {;MCAL_Layer/GPIO/hal_gpio.c: 26:         ret = (St
      +                          d_ReturnType)0x00;
  6356   002F76  0E00               	movlw	0
  6357   002F78  6E08               	movwf	gpio_pin_direction_intialize@ret^0,c
  6358                           
  6359                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     }
  6360   002F7A  EF32  F018         	goto	l6262
  6361   002F7E                     l6254:
  6362                           
  6363                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:             (*tris_registers[__pin_t ->port] &= ~( (uin
      +                          t8) 1 << __pin_t ->pin ));
  6364   002F7E  5002               	movf	gpio_pin_direction_intialize@__pin_t^0,w,c
  6365   002F80  6ED9               	movwf	fsr2l,c
  6366   002F82  6ADA               	clrf	fsr2h,c
  6367   002F84  30DF               	rrcf	223,w,c
  6368   002F86  32E8               	rrcf	wreg,f,c
  6369   002F88  32E8               	rrcf	wreg,f,c
  6370   002F8A  0B07               	andlw	7
  6371   002F8C  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  6372   002F8E  0E01               	movlw	1
  6373   002F90  6E04               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  6374   002F92  2A03               	incf	??_gpio_pin_direction_intialize^0,f,c
  6375   002F94  EFCE  F017         	goto	u5224
  6376   002F98                     u5225:
  6377   002F98  90D8               	bcf	status,0,c
  6378   002F9A  3604               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  6379   002F9C                     u5224:
  6380   002F9C  2E03               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  6381   002F9E  EFCC  F017         	goto	u5225
  6382   002FA2  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  6383   002FA4  0AFF               	xorlw	255
  6384   002FA6  6E05               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  6385   002FA8  5002               	movf	gpio_pin_direction_intialize@__pin_t^0,w,c
  6386   002FAA  6ED9               	movwf	fsr2l,c
  6387   002FAC  6ADA               	clrf	fsr2h,c
  6388   002FAE  50DF               	movf	223,w,c
  6389   002FB0  0B07               	andlw	7
  6390   002FB2  0D02               	mullw	2
  6391   002FB4  50F3               	movf	243,w,c
  6392   002FB6  0FE8               	addlw	low _tris_registers
  6393   002FB8  6ED9               	movwf	fsr2l,c
  6394   002FBA  6ADA               	clrf	fsr2h,c
  6395   002FBC  CFDE F006          	movff	postinc2,??_gpio_pin_direction_intialize+3
  6396   002FC0  CFDD F007          	movff	postdec2,??_gpio_pin_direction_intialize+4
  6397   002FC4  C006  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  6398   002FC8  C007  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  6399   002FCC  5005               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  6400   002FCE  16DF               	andwf	indf2,f,c
  6401                           
  6402                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:             break;
  6403   002FD0  EF32  F018         	goto	l6262
  6404   002FD4                     l6256:
  6405                           
  6406                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:             (*tris_registers[__pin_t ->port] |= ( (uint
      +                          8) 1 << __pin_t ->pin ));
  6407   002FD4  5002               	movf	gpio_pin_direction_intialize@__pin_t^0,w,c
  6408   002FD6  6ED9               	movwf	fsr2l,c
  6409   002FD8  6ADA               	clrf	fsr2h,c
  6410   002FDA  30DF               	rrcf	223,w,c
  6411   002FDC  32E8               	rrcf	wreg,f,c
  6412   002FDE  32E8               	rrcf	wreg,f,c
  6413   002FE0  0B07               	andlw	7
  6414   002FE2  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  6415   002FE4  0E01               	movlw	1
  6416   002FE6  6E04               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  6417   002FE8  2A03               	incf	??_gpio_pin_direction_intialize^0,f,c
  6418   002FEA  EFF9  F017         	goto	u5234
  6419   002FEE                     u5235:
  6420   002FEE  90D8               	bcf	status,0,c
  6421   002FF0  3604               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  6422   002FF2                     u5234:
  6423   002FF2  2E03               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  6424   002FF4  EFF7  F017         	goto	u5235
  6425   002FF8  5002               	movf	gpio_pin_direction_intialize@__pin_t^0,w,c
  6426   002FFA  6ED9               	movwf	fsr2l,c
  6427   002FFC  6ADA               	clrf	fsr2h,c
  6428   002FFE  50DF               	movf	223,w,c
  6429   003000  0B07               	andlw	7
  6430   003002  0D02               	mullw	2
  6431   003004  50F3               	movf	243,w,c
  6432   003006  0FE8               	addlw	low _tris_registers
  6433   003008  6ED9               	movwf	fsr2l,c
  6434   00300A  6ADA               	clrf	fsr2h,c
  6435   00300C  CFDE F005          	movff	postinc2,??_gpio_pin_direction_intialize+2
  6436   003010  CFDD F006          	movff	postdec2,??_gpio_pin_direction_intialize+3
  6437   003014  C005  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  6438   003018  C006  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  6439   00301C  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  6440   00301E  12DF               	iorwf	indf2,f,c
  6441                           
  6442                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:             break;
  6443   003020  EF32  F018         	goto	l6262
  6444   003024                     l6260:
  6445   003024  5002               	movf	gpio_pin_direction_intialize@__pin_t^0,w,c
  6446   003026  6ED9               	movwf	fsr2l,c
  6447   003028  6ADA               	clrf	fsr2h,c
  6448   00302A  BCDF               	btfsc	indf2,6,c
  6449   00302C  EF1A  F018         	goto	u5241
  6450   003030  EF1D  F018         	goto	u5240
  6451   003034                     u5241:
  6452   003034  0E01               	movlw	1
  6453   003036  EF1E  F018         	goto	u5250
  6454   00303A                     u5240:
  6455   00303A  0E00               	movlw	0
  6456   00303C                     u5250:
  6457   00303C  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  6458   00303E  6A04               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  6459                           
  6460                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6461                           ; Switch size 1, requested type "simple"
  6462                           ; Number of cases is 1, Range of values is 0 to 0
  6463                           ; switch strategies available:
  6464                           ; Name         Instructions Cycles
  6465                           ; simple_byte            4     3 (average)
  6466                           ;	Chosen strategy is simple_byte
  6467   003040  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  6468   003042  0A00               	xorlw	0	; case 0
  6469   003044  B4D8               	btfsc	status,2,c
  6470   003046  EF27  F018         	goto	l9630
  6471   00304A  EFBB  F017         	goto	l6252
  6472   00304E                     l9630:
  6473                           
  6474                           ; Switch size 1, requested type "simple"
  6475                           ; Number of cases is 2, Range of values is 0 to 1
  6476                           ; switch strategies available:
  6477                           ; Name         Instructions Cycles
  6478                           ; simple_byte            7     4 (average)
  6479                           ;	Chosen strategy is simple_byte
  6480   00304E  5003               	movf	??_gpio_pin_direction_intialize^0,w,c
  6481   003050  0A00               	xorlw	0	; case 0
  6482   003052  B4D8               	btfsc	status,2,c
  6483   003054  EFBF  F017         	goto	l6254
  6484   003058  0A01               	xorlw	1	; case 1
  6485   00305A  B4D8               	btfsc	status,2,c
  6486   00305C  EFEA  F017         	goto	l6256
  6487   003060  EFBB  F017         	goto	l6252
  6488   003064                     l6262:
  6489                           
  6490                           ;MCAL_Layer/GPIO/hal_gpio.c: 44:     return ret;
  6491   003064  5008               	movf	gpio_pin_direction_intialize@ret^0,w,c
  6492   003066  0012               	return		;funcret
  6493   003068                     __end_of_gpio_pin_direction_intialize:
  6494                           	callstack 0
  6495                           
  6496 ;; *************** function _ADC_INIT *****************
  6497 ;; Defined at:
  6498 ;;		line 15 in file "MCAL_Layer/ADC/hal_adc.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;  adc_obj         2    4[COMRAM] PTR const struct .
  6501 ;;		 -> temp_sens(7), 
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;  ret             1    9[COMRAM] unsigned char 
  6504 ;; Return value:  Size  Location     Type
  6505 ;;                  1    wreg      unsigned char 
  6506 ;; Registers used:
  6507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6508 ;; Tracked objects:
  6509 ;;		On entry : 0/0
  6510 ;;		On exit  : 0/0
  6511 ;;		Unchanged: 0/0
  6512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6515 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6516 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6517 ;;Total ram usage:        6 bytes
  6518 ;; Hardware stack levels used: 1
  6519 ;; Hardware stack levels required when called: 3
  6520 ;; This function calls:
  6521 ;;		_adc_configure_pin
  6522 ;;		_adc_select_Voltage
  6523 ;;		_adc_select_format
  6524 ;; This function is called by:
  6525 ;;		_app_initialize
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           	psect	text33
  6530   003178                     __ptext33:
  6531                           	callstack 0
  6532   003178                     _ADC_INIT:
  6533                           	callstack 26
  6534   003178                     
  6535                           ;MCAL_Layer/ADC/hal_adc.c: 17:     if((((void*)0) == adc_obj))
  6536   003178  5005               	movf	ADC_INIT@adc_obj^0,w,c
  6537   00317A  1006               	iorwf	(ADC_INIT@adc_obj+1)^0,w,c
  6538   00317C  A4D8               	btfss	status,2,c
  6539   00317E  EFC3  F018         	goto	u9151
  6540   003182  EFC5  F018         	goto	u9150
  6541   003186                     u9151:
  6542   003186  EFC9  F018         	goto	l363
  6543   00318A                     u9150:
  6544   00318A                     
  6545                           ;MCAL_Layer/ADC/hal_adc.c: 18:     {;MCAL_Layer/ADC/hal_adc.c: 19:         ret = (Std_Re
      +                          turnType)0x00;
  6546   00318A  0E00               	movlw	0
  6547   00318C  6E0A               	movwf	ADC_INIT@ret^0,c
  6548                           
  6549                           ;MCAL_Layer/ADC/hal_adc.c: 20:     }
  6550   00318E  EF42  F019         	goto	l9278
  6551   003192                     l363:
  6552                           
  6553                           ;MCAL_Layer/ADC/hal_adc.c: 23:         (ADCON0bits.ADON = 0);
  6554   003192  90C2               	bcf	194,0,c	;volatile
  6555   003194                     
  6556                           ;MCAL_Layer/ADC/hal_adc.c: 26:         ADCON0bits.CHS =adc_obj->channal ;
  6557   003194  EE20 F003          	lfsr	2,3
  6558   003198  5005               	movf	ADC_INIT@adc_obj^0,w,c
  6559   00319A  26D9               	addwf	fsr2l,f,c
  6560   00319C  5006               	movf	(ADC_INIT@adc_obj+1)^0,w,c
  6561   00319E  22DA               	addwfc	fsr2h,f,c
  6562   0031A0  50DF               	movf	indf2,w,c
  6563   0031A2  6E07               	movwf	??_ADC_INIT^0,c
  6564   0031A4  4607               	rlncf	??_ADC_INIT^0,f,c
  6565   0031A6  4607               	rlncf	??_ADC_INIT^0,f,c
  6566   0031A8  50C2               	movf	194,w,c	;volatile
  6567   0031AA  1807               	xorwf	??_ADC_INIT^0,w,c
  6568   0031AC  0BC3               	andlw	-61
  6569   0031AE  1807               	xorwf	??_ADC_INIT^0,w,c
  6570   0031B0  6EC2               	movwf	194,c	;volatile
  6571   0031B2                     
  6572                           ;MCAL_Layer/ADC/hal_adc.c: 27:         adc_configure_pin(adc_obj->channal);
  6573   0031B2  EE20 F003          	lfsr	2,3
  6574   0031B6  5005               	movf	ADC_INIT@adc_obj^0,w,c
  6575   0031B8  26D9               	addwf	fsr2l,f,c
  6576   0031BA  5006               	movf	(ADC_INIT@adc_obj+1)^0,w,c
  6577   0031BC  22DA               	addwfc	fsr2h,f,c
  6578   0031BE  50DF               	movf	indf2,w,c
  6579   0031C0  EC3A  F01A         	call	_adc_configure_pin
  6580   0031C4                     
  6581                           ;MCAL_Layer/ADC/hal_adc.c: 29:         ADCON2bits.ACQT = adc_obj->time_aq ;
  6582   0031C4  EE20 F004          	lfsr	2,4
  6583   0031C8  5005               	movf	ADC_INIT@adc_obj^0,w,c
  6584   0031CA  26D9               	addwf	fsr2l,f,c
  6585   0031CC  5006               	movf	(ADC_INIT@adc_obj+1)^0,w,c
  6586   0031CE  22DA               	addwfc	fsr2h,f,c
  6587   0031D0  50DF               	movf	indf2,w,c
  6588   0031D2  6E07               	movwf	??_ADC_INIT^0,c
  6589   0031D4  4607               	rlncf	??_ADC_INIT^0,f,c
  6590   0031D6  4607               	rlncf	??_ADC_INIT^0,f,c
  6591   0031D8  4607               	rlncf	??_ADC_INIT^0,f,c
  6592   0031DA  50C0               	movf	192,w,c	;volatile
  6593   0031DC  1807               	xorwf	??_ADC_INIT^0,w,c
  6594   0031DE  0BC7               	andlw	-57
  6595   0031E0  1807               	xorwf	??_ADC_INIT^0,w,c
  6596   0031E2  6EC0               	movwf	192,c	;volatile
  6597   0031E4                     
  6598                           ;MCAL_Layer/ADC/hal_adc.c: 31:         ADCON2bits.ADCS = adc_obj->clock_con ;
  6599   0031E4  EE20 F005          	lfsr	2,5
  6600   0031E8  5005               	movf	ADC_INIT@adc_obj^0,w,c
  6601   0031EA  26D9               	addwf	fsr2l,f,c
  6602   0031EC  5006               	movf	(ADC_INIT@adc_obj+1)^0,w,c
  6603   0031EE  22DA               	addwfc	fsr2h,f,c
  6604   0031F0  50DF               	movf	indf2,w,c
  6605   0031F2  6E07               	movwf	??_ADC_INIT^0,c
  6606   0031F4  50C0               	movf	192,w,c	;volatile
  6607   0031F6  1807               	xorwf	??_ADC_INIT^0,w,c
  6608   0031F8  0BF8               	andlw	-8
  6609   0031FA  1807               	xorwf	??_ADC_INIT^0,w,c
  6610   0031FC  6EC0               	movwf	192,c	;volatile
  6611   0031FE                     
  6612                           ;MCAL_Layer/ADC/hal_adc.c: 33:         adc_select_format(adc_obj->result_format);
  6613   0031FE  EE20 F006          	lfsr	2,6
  6614   003202  5005               	movf	ADC_INIT@adc_obj^0,w,c
  6615   003204  26D9               	addwf	fsr2l,f,c
  6616   003206  5006               	movf	(ADC_INIT@adc_obj+1)^0,w,c
  6617   003208  22DA               	addwfc	fsr2h,f,c
  6618   00320A  B0DF               	btfsc	indf2,0,c
  6619   00320C  EF0A  F019         	goto	u9161
  6620   003210  EF0D  F019         	goto	u9160
  6621   003214                     u9161:
  6622   003214  0E01               	movlw	1
  6623   003216  EF0E  F019         	goto	u9166
  6624   00321A                     u9160:
  6625   00321A  0E00               	movlw	0
  6626   00321C                     u9166:
  6627   00321C  6E07               	movwf	??_ADC_INIT^0,c
  6628   00321E  6A08               	clrf	(??_ADC_INIT+1)^0,c
  6629   003220  6A09               	clrf	(??_ADC_INIT+2)^0,c
  6630   003222  C007  F002         	movff	??_ADC_INIT,adc_select_format@adc_obj
  6631   003226  C008  F003         	movff	??_ADC_INIT+1,adc_select_format@adc_obj+1
  6632   00322A  C009  F004         	movff	??_ADC_INIT+2,adc_select_format@adc_obj+2
  6633   00322E  EC63  F01E         	call	_adc_select_format	;wreg free
  6634   003232                     
  6635                           ;MCAL_Layer/ADC/hal_adc.c: 35:         adc_select_Voltage(adc_obj->voltage_reference);
  6636   003232  EE20 F006          	lfsr	2,6
  6637   003236  5005               	movf	ADC_INIT@adc_obj^0,w,c
  6638   003238  26D9               	addwf	fsr2l,f,c
  6639   00323A  5006               	movf	(ADC_INIT@adc_obj+1)^0,w,c
  6640   00323C  22DA               	addwfc	fsr2h,f,c
  6641   00323E  B2DF               	btfsc	indf2,1,c
  6642   003240  EF24  F019         	goto	u9171
  6643   003244  EF27  F019         	goto	u9170
  6644   003248                     u9171:
  6645   003248  0E01               	movlw	1
  6646   00324A  EF28  F019         	goto	u9176
  6647   00324E                     u9170:
  6648   00324E  0E00               	movlw	0
  6649   003250                     u9176:
  6650   003250  6E07               	movwf	??_ADC_INIT^0,c
  6651   003252  6A08               	clrf	(??_ADC_INIT+1)^0,c
  6652   003254  6A09               	clrf	(??_ADC_INIT+2)^0,c
  6653   003256  C007  F002         	movff	??_ADC_INIT,adc_select_Voltage@adc_obj
  6654   00325A  C008  F003         	movff	??_ADC_INIT+1,adc_select_Voltage@adc_obj+1
  6655   00325E  C009  F004         	movff	??_ADC_INIT+2,adc_select_Voltage@adc_obj+2
  6656   003262  EC82  F01D         	call	_adc_select_Voltage	;wreg free
  6657   003266                     
  6658                           ;MCAL_Layer/ADC/hal_adc.c: 38:          (PIE1bits.ADIE = 1);
  6659   003266  8C9D               	bsf	157,6,c	;volatile
  6660   003268                     
  6661                           ;MCAL_Layer/ADC/hal_adc.c: 39:          (PIR1bits.ADIF = 0);
  6662   003268  9C9E               	bcf	158,6,c	;volatile
  6663   00326A                     
  6664                           ;MCAL_Layer/ADC/hal_adc.c: 52:          (INTCONbits.PEIE = 1);
  6665   00326A  8CF2               	bsf	242,6,c	;volatile
  6666   00326C                     
  6667                           ;MCAL_Layer/ADC/hal_adc.c: 53:           (INTCONbits.GIE = 1);
  6668   00326C  8EF2               	bsf	242,7,c	;volatile
  6669   00326E                     
  6670                           ;MCAL_Layer/ADC/hal_adc.c: 55:         ADC_INTERRUPT_HANDLERF = adc_obj->ACD_INTERRUPT_H
      +                          ANDLER ;
  6671   00326E  C005  FFD9         	movff	ADC_INIT@adc_obj,fsr2l
  6672   003272  C006  FFDA         	movff	ADC_INIT@adc_obj+1,fsr2h
  6673   003276  CFDE F0BC          	movff	postinc2,_ADC_INTERRUPT_HANDLERF
  6674   00327A  CFDD F0BD          	movff	postdec2,_ADC_INTERRUPT_HANDLERF+1
  6675   00327E                     
  6676                           ;MCAL_Layer/ADC/hal_adc.c: 58:         (ADCON0bits.ADON = 1) ;
  6677   00327E  80C2               	bsf	194,0,c	;volatile
  6678   003280                     
  6679                           ;MCAL_Layer/ADC/hal_adc.c: 59:          ret = (Std_ReturnType)0x01 ;
  6680   003280  0E01               	movlw	1
  6681   003282  6E0A               	movwf	ADC_INIT@ret^0,c
  6682   003284                     l9278:
  6683                           
  6684                           ;MCAL_Layer/ADC/hal_adc.c: 61:     return ret;
  6685   003284  500A               	movf	ADC_INIT@ret^0,w,c
  6686   003286  0012               	return		;funcret
  6687   003288                     __end_of_ADC_INIT:
  6688                           	callstack 0
  6689                           
  6690 ;; *************** function _adc_select_format *****************
  6691 ;; Defined at:
  6692 ;;		line 173 in file "MCAL_Layer/ADC/hal_adc.c"
  6693 ;; Parameters:    Size  Location     Type
  6694 ;;  adc_obj         3    1[COMRAM] PTR const struct .
  6695 ;;		 -> ROM(65535), 
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;  ret             1    0        unsigned char 
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  1    wreg      unsigned char 
  6700 ;; Registers used:
  6701 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6702 ;; Tracked objects:
  6703 ;;		On entry : 0/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6707 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6710 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6711 ;;Total ram usage:        3 bytes
  6712 ;; Hardware stack levels used: 1
  6713 ;; Hardware stack levels required when called: 2
  6714 ;; This function calls:
  6715 ;;		Nothing
  6716 ;; This function is called by:
  6717 ;;		_ADC_INIT
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text34
  6722   003CC6                     __ptext34:
  6723                           	callstack 0
  6724   003CC6                     _adc_select_format:
  6725                           	callstack 26
  6726   003CC6                     
  6727                           ;MCAL_Layer/ADC/hal_adc.c: 175:     if((((void*)0) == adc_obj))
  6728   003CC6  5002               	movf	adc_select_format@adc_obj^0,w,c
  6729   003CC8  1003               	iorwf	(adc_select_format@adc_obj+1)^0,w,c
  6730   003CCA  1004               	iorwf	(adc_select_format@adc_obj+2)^0,w,c
  6731   003CCC  A4D8               	btfss	status,2,c
  6732   003CCE  EF6B  F01E         	goto	u6421
  6733   003CD2  EF6D  F01E         	goto	u6420
  6734   003CD6                     u6421:
  6735   003CD6  EF6F  F01E         	goto	l6984
  6736   003CDA                     u6420:
  6737   003CDA                     
  6738                           ;MCAL_Layer/ADC/hal_adc.c: 178:     }
  6739   003CDA  EF99  F01E         	goto	l415
  6740   003CDE                     l6984:
  6741                           
  6742                           ;MCAL_Layer/ADC/hal_adc.c: 180:         if(( 0x01) == adc_obj->result_format){
  6743   003CDE  0E06               	movlw	6
  6744   003CE0  2402               	addwf	adc_select_format@adc_obj^0,w,c
  6745   003CE2  6EF6               	movwf	tblptrl,c
  6746   003CE4  0E00               	movlw	0
  6747   003CE6  2003               	addwfc	(adc_select_format@adc_obj+1)^0,w,c
  6748   003CE8  6EF7               	movwf	tblptrh,c
  6749   003CEA  0E00               	movlw	0
  6750   003CEC  2004               	addwfc	(adc_select_format@adc_obj+2)^0,w,c
  6751   003CEE  6EF8               	movwf	tblptru,c
  6752   003CF0  0008               	tblrd		*
  6753   003CF2  50F5               	movf	tablat,w,c
  6754   003CF4  A0E8               	btfss	wreg,0,c
  6755   003CF6  EF7F  F01E         	goto	u6431
  6756   003CFA  EF81  F01E         	goto	u6430
  6757   003CFE                     u6431:
  6758   003CFE  EF84  F01E         	goto	l6988
  6759   003D02                     u6430:
  6760   003D02                     
  6761                           ;MCAL_Layer/ADC/hal_adc.c: 181:         (ADCON2bits.ADFM = 1);
  6762   003D02  8EC0               	bsf	192,7,c	;volatile
  6763                           
  6764                           ;MCAL_Layer/ADC/hal_adc.c: 182:         }
  6765   003D04  EF99  F01E         	goto	l6992
  6766   003D08                     l6988:
  6767   003D08  0E06               	movlw	6
  6768   003D0A  2402               	addwf	adc_select_format@adc_obj^0,w,c
  6769   003D0C  6EF6               	movwf	tblptrl,c
  6770   003D0E  0E00               	movlw	0
  6771   003D10  2003               	addwfc	(adc_select_format@adc_obj+1)^0,w,c
  6772   003D12  6EF7               	movwf	tblptrh,c
  6773   003D14  0E00               	movlw	0
  6774   003D16  2004               	addwfc	(adc_select_format@adc_obj+2)^0,w,c
  6775   003D18  6EF8               	movwf	tblptru,c
  6776   003D1A  0008               	tblrd		*
  6777   003D1C  B0F5               	btfsc	tablat,0,c
  6778   003D1E  EF93  F01E         	goto	u6441
  6779   003D22  EF95  F01E         	goto	u6440
  6780   003D26                     u6441:
  6781   003D26  EF98  F01E         	goto	l413
  6782   003D2A                     u6440:
  6783   003D2A                     
  6784                           ;MCAL_Layer/ADC/hal_adc.c: 184:         (ADCON2bits.ADFM = 0) ;
  6785   003D2A  9EC0               	bcf	192,7,c	;volatile
  6786                           
  6787                           ;MCAL_Layer/ADC/hal_adc.c: 185:         }
  6788   003D2C  EF99  F01E         	goto	l6992
  6789   003D30                     l413:
  6790                           
  6791                           ;MCAL_Layer/ADC/hal_adc.c: 187:            (ADCON2bits.ADFM = 1);
  6792   003D30  8EC0               	bsf	192,7,c	;volatile
  6793   003D32                     l6992:
  6794   003D32                     l415:
  6795   003D32  0012               	return		;funcret
  6796   003D34                     __end_of_adc_select_format:
  6797                           	callstack 0
  6798                           
  6799 ;; *************** function _adc_select_Voltage *****************
  6800 ;; Defined at:
  6801 ;;		line 194 in file "MCAL_Layer/ADC/hal_adc.c"
  6802 ;; Parameters:    Size  Location     Type
  6803 ;;  adc_obj         3    1[COMRAM] PTR const struct .
  6804 ;;		 -> ROM(65535), 
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;  ret             1    0        unsigned char 
  6807 ;; Return value:  Size  Location     Type
  6808 ;;                  1    wreg      unsigned char 
  6809 ;; Registers used:
  6810 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6811 ;; Tracked objects:
  6812 ;;		On entry : 0/0
  6813 ;;		On exit  : 0/0
  6814 ;;		Unchanged: 0/0
  6815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6816 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6819 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6820 ;;Total ram usage:        3 bytes
  6821 ;; Hardware stack levels used: 1
  6822 ;; Hardware stack levels required when called: 2
  6823 ;; This function calls:
  6824 ;;		Nothing
  6825 ;; This function is called by:
  6826 ;;		_ADC_INIT
  6827 ;; This function uses a non-reentrant model
  6828 ;;
  6829                           
  6830                           	psect	text35
  6831   003B04                     __ptext35:
  6832                           	callstack 0
  6833   003B04                     _adc_select_Voltage:
  6834                           	callstack 26
  6835   003B04                     
  6836                           ;MCAL_Layer/ADC/hal_adc.c: 196:     if((((void*)0) == adc_obj))
  6837   003B04  5002               	movf	adc_select_Voltage@adc_obj^0,w,c
  6838   003B06  1003               	iorwf	(adc_select_Voltage@adc_obj+1)^0,w,c
  6839   003B08  1004               	iorwf	(adc_select_Voltage@adc_obj+2)^0,w,c
  6840   003B0A  A4D8               	btfss	status,2,c
  6841   003B0C  EF8A  F01D         	goto	u6451
  6842   003B10  EF8C  F01D         	goto	u6450
  6843   003B14                     u6451:
  6844   003B14  EF8E  F01D         	goto	l7002
  6845   003B18                     u6450:
  6846   003B18                     
  6847                           ;MCAL_Layer/ADC/hal_adc.c: 199:     }
  6848   003B18  EFBB  F01D         	goto	l430
  6849   003B1C                     l7002:
  6850                           
  6851                           ;MCAL_Layer/ADC/hal_adc.c: 201:         if(0x01U == adc_obj->voltage_reference){
  6852   003B1C  0E06               	movlw	6
  6853   003B1E  2402               	addwf	adc_select_Voltage@adc_obj^0,w,c
  6854   003B20  6EF6               	movwf	tblptrl,c
  6855   003B22  0E00               	movlw	0
  6856   003B24  2003               	addwfc	(adc_select_Voltage@adc_obj+1)^0,w,c
  6857   003B26  6EF7               	movwf	tblptrh,c
  6858   003B28  0E00               	movlw	0
  6859   003B2A  2004               	addwfc	(adc_select_Voltage@adc_obj+2)^0,w,c
  6860   003B2C  6EF8               	movwf	tblptru,c
  6861   003B2E  0008               	tblrd		*
  6862   003B30  50F5               	movf	tablat,w,c
  6863   003B32  A2E8               	btfss	wreg,1,c
  6864   003B34  EF9E  F01D         	goto	u6461
  6865   003B38  EFA0  F01D         	goto	u6460
  6866   003B3C                     u6461:
  6867   003B3C  EFA4  F01D         	goto	l7004
  6868   003B40                     u6460:
  6869   003B40  8AC1               	bsf	193,5,c	;volatile
  6870   003B42  88C1               	bsf	193,4,c	;volatile
  6871   003B44  EFBB  F01D         	goto	l7006
  6872   003B48                     l7004:
  6873   003B48  0E06               	movlw	6
  6874   003B4A  2402               	addwf	adc_select_Voltage@adc_obj^0,w,c
  6875   003B4C  6EF6               	movwf	tblptrl,c
  6876   003B4E  0E00               	movlw	0
  6877   003B50  2003               	addwfc	(adc_select_Voltage@adc_obj+1)^0,w,c
  6878   003B52  6EF7               	movwf	tblptrh,c
  6879   003B54  0E00               	movlw	0
  6880   003B56  2004               	addwfc	(adc_select_Voltage@adc_obj+2)^0,w,c
  6881   003B58  6EF8               	movwf	tblptru,c
  6882   003B5A  0008               	tblrd		*
  6883   003B5C  B2F5               	btfsc	tablat,1,c
  6884   003B5E  EFB3  F01D         	goto	u6471
  6885   003B62  EFB5  F01D         	goto	u6470
  6886   003B66                     u6471:
  6887   003B66  EFB9  F01D         	goto	l428
  6888   003B6A                     u6470:
  6889   003B6A  9AC1               	bcf	193,5,c	;volatile
  6890   003B6C  98C1               	bcf	193,4,c	;volatile
  6891   003B6E  EFBB  F01D         	goto	l7006
  6892   003B72                     l428:
  6893   003B72  8AC1               	bsf	193,5,c	;volatile
  6894   003B74  88C1               	bsf	193,4,c	;volatile
  6895   003B76                     l7006:
  6896   003B76                     l430:
  6897   003B76  0012               	return		;funcret
  6898   003B78                     __end_of_adc_select_Voltage:
  6899                           	callstack 0
  6900                           
  6901 ;; *************** function _TMR_INIT *****************
  6902 ;; Defined at:
  6903 ;;		line 60 in file "application.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;		None
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;		None
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  1    wreg      void 
  6910 ;; Registers used:
  6911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6921 ;;Total ram usage:        0 bytes
  6922 ;; Hardware stack levels used: 1
  6923 ;; Hardware stack levels required when called: 3
  6924 ;; This function calls:
  6925 ;;		_TMR2_Init
  6926 ;; This function is called by:
  6927 ;;		_main
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           	psect	text36
  6932   004234                     __ptext36:
  6933                           	callstack 0
  6934   004234                     _TMR_INIT:
  6935                           	callstack 27
  6936   004234                     
  6937                           ;application.c: 61: tm2.TIMER2_INTERRUPT_HANDLER = ((void*)0) ;
  6938   004234  0E00               	movlw	0
  6939   004236  0100               	movlb	0	; () banked
  6940   004238  6FD6               	movwf	_tm2& (0+255),b
  6941   00423A  0E00               	movlw	0
  6942   00423C  6FD7               	movwf	(_tm2+1)& (0+255),b
  6943   00423E                     
  6944                           ; BSR set to: 0
  6945                           ;application.c: 62: tm2.postscaler_valu = TIMER2_POSTSCALER_DIV_1;
  6946   00423E  0E00               	movlw	0
  6947   004240  6FDA               	movwf	(_tm2+4)& (0+255),b
  6948   004242                     
  6949                           ; BSR set to: 0
  6950                           ;application.c: 63: tm2.prescaler_valu =TIMER2_PRESCALER_DIV_1 ;
  6951   004242  0E00               	movlw	0
  6952   004244  6FD9               	movwf	(_tm2+3)& (0+255),b
  6953   004246                     
  6954                           ; BSR set to: 0
  6955                           ;application.c: 64: tm2.preload_value = 0 ;
  6956   004246  0E00               	movlw	0
  6957   004248  6FDB               	movwf	(_tm2+5)& (0+255),b
  6958   00424A                     
  6959                           ; BSR set to: 0
  6960                           ;application.c: 65: TMR2_Init(&tm2);
  6961   00424A  0ED6               	movlw	low _tm2
  6962   00424C  6E02               	movwf	TMR2_Init@TMR^0,c
  6963   00424E  EC41  F01D         	call	_TMR2_Init	;wreg free
  6964   004252  0012               	return		;funcret
  6965   004254                     __end_of_TMR_INIT:
  6966                           	callstack 0
  6967                           
  6968 ;; *************** function _TMR2_Init *****************
  6969 ;; Defined at:
  6970 ;;		line 4 in file "MCAL_Layer/TIMER2/hal_timer2.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;  TMR             1    1[COMRAM] PTR const struct .
  6973 ;;		 -> tm2(6), 
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;  ret             1    0        unsigned char 
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  1    wreg      unsigned char 
  6978 ;; Registers used:
  6979 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6985 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6987 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6988 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;Total ram usage:        2 bytes
  6990 ;; Hardware stack levels used: 1
  6991 ;; Hardware stack levels required when called: 2
  6992 ;; This function calls:
  6993 ;;		Nothing
  6994 ;; This function is called by:
  6995 ;;		_TMR_INIT
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999                           	psect	text37
  7000   003A82                     __ptext37:
  7001                           	callstack 0
  7002   003A82                     _TMR2_Init:
  7003                           	callstack 27
  7004   003A82                     
  7005                           ;MCAL_Layer/TIMER2/hal_timer2.c: 6:      if(((void*)0) == TMR)
  7006   003A82  5002               	movf	TMR2_Init@TMR^0,w,c
  7007   003A84  A4D8               	btfss	status,2,c
  7008   003A86  EF47  F01D         	goto	u6851
  7009   003A8A  EF49  F01D         	goto	u6850
  7010   003A8E                     u6851:
  7011   003A8E  EF4B  F01D         	goto	l1631
  7012   003A92                     u6850:
  7013   003A92                     
  7014                           ;MCAL_Layer/TIMER2/hal_timer2.c: 9:      }else{
  7015   003A92  EF81  F01D         	goto	l1633
  7016   003A96                     l1631:
  7017                           
  7018                           ;MCAL_Layer/TIMER2/hal_timer2.c: 10:          (T2CONbits.TMR2ON = 0);
  7019   003A96  94CA               	bcf	202,2,c	;volatile
  7020   003A98                     
  7021                           ;MCAL_Layer/TIMER2/hal_timer2.c: 11:         TMR2 = TMR->preload_value;
  7022   003A98  5002               	movf	TMR2_Init@TMR^0,w,c
  7023   003A9A  6ED9               	movwf	fsr2l,c
  7024   003A9C  6ADA               	clrf	fsr2h,c
  7025   003A9E  0E05               	movlw	5
  7026   003AA0  26D9               	addwf	fsr2l,f,c
  7027   003AA2  50DF               	movf	indf2,w,c
  7028   003AA4  6ECC               	movwf	204,c	;volatile
  7029                           
  7030                           ;MCAL_Layer/TIMER2/hal_timer2.c: 12:         preload_val =TMR->preload_value;
  7031   003AA6  5002               	movf	TMR2_Init@TMR^0,w,c
  7032   003AA8  6ED9               	movwf	fsr2l,c
  7033   003AAA  6ADA               	clrf	fsr2h,c
  7034   003AAC  0E05               	movlw	5
  7035   003AAE  26D9               	addwf	fsr2l,f,c
  7036   003AB0  50DF               	movf	indf2,w,c
  7037   003AB2  6E71               	movwf	_preload_val^0,c	;volatile
  7038                           
  7039                           ;MCAL_Layer/TIMER2/hal_timer2.c: 13:         (T2CONbits.T2CKPS =TMR->prescaler_valu);
  7040   003AB4  5002               	movf	TMR2_Init@TMR^0,w,c
  7041   003AB6  6ED9               	movwf	fsr2l,c
  7042   003AB8  6ADA               	clrf	fsr2h,c
  7043   003ABA  0E03               	movlw	3
  7044   003ABC  26D9               	addwf	fsr2l,f,c
  7045   003ABE  50DF               	movf	indf2,w,c
  7046   003AC0  6E03               	movwf	??_TMR2_Init^0,c
  7047   003AC2  50CA               	movf	202,w,c	;volatile
  7048   003AC4  1803               	xorwf	??_TMR2_Init^0,w,c
  7049   003AC6  0BFC               	andlw	-4
  7050   003AC8  1803               	xorwf	??_TMR2_Init^0,w,c
  7051   003ACA  6ECA               	movwf	202,c	;volatile
  7052                           
  7053                           ;MCAL_Layer/TIMER2/hal_timer2.c: 14:         (T2CONbits.TOUTPS =TMR->postscaler_valu);
  7054   003ACC  5002               	movf	TMR2_Init@TMR^0,w,c
  7055   003ACE  6ED9               	movwf	fsr2l,c
  7056   003AD0  6ADA               	clrf	fsr2h,c
  7057   003AD2  0E04               	movlw	4
  7058   003AD4  26D9               	addwf	fsr2l,f,c
  7059   003AD6  50DF               	movf	indf2,w,c
  7060   003AD8  6E03               	movwf	??_TMR2_Init^0,c
  7061   003ADA  4603               	rlncf	??_TMR2_Init^0,f,c
  7062   003ADC  4603               	rlncf	??_TMR2_Init^0,f,c
  7063   003ADE  4603               	rlncf	??_TMR2_Init^0,f,c
  7064   003AE0  50CA               	movf	202,w,c	;volatile
  7065   003AE2  1803               	xorwf	??_TMR2_Init^0,w,c
  7066   003AE4  0B87               	andlw	-121
  7067   003AE6  1803               	xorwf	??_TMR2_Init^0,w,c
  7068   003AE8  6ECA               	movwf	202,c	;volatile
  7069   003AEA                     
  7070                           ;MCAL_Layer/TIMER2/hal_timer2.c: 16:         (PIE1bits.TMR2IE =1);
  7071   003AEA  829D               	bsf	157,1,c	;volatile
  7072   003AEC                     
  7073                           ;MCAL_Layer/TIMER2/hal_timer2.c: 17:         (PIR1bits.TMR2IF = 0 );
  7074   003AEC  929E               	bcf	158,1,c	;volatile
  7075   003AEE                     
  7076                           ;MCAL_Layer/TIMER2/hal_timer2.c: 30:          (INTCONbits.PEIE = 1);
  7077   003AEE  8CF2               	bsf	242,6,c	;volatile
  7078   003AF0                     
  7079                           ;MCAL_Layer/TIMER2/hal_timer2.c: 31:         (INTCONbits.GIE = 1);
  7080   003AF0  8EF2               	bsf	242,7,c	;volatile
  7081   003AF2                     
  7082                           ;MCAL_Layer/TIMER2/hal_timer2.c: 34:         TMR2_INTERRUPT_HANDLER = TMR->TIMER2_INTERR
      +                          UPT_HANDLER;
  7083   003AF2  5002               	movf	TMR2_Init@TMR^0,w,c
  7084   003AF4  6ED9               	movwf	fsr2l,c
  7085   003AF6  6ADA               	clrf	fsr2h,c
  7086   003AF8  CFDE F08C          	movff	postinc2,_TMR2_INTERRUPT_HANDLER
  7087   003AFC  CFDD F08D          	movff	postdec2,_TMR2_INTERRUPT_HANDLER+1
  7088   003B00                     
  7089                           ;MCAL_Layer/TIMER2/hal_timer2.c: 36:         (T2CONbits.TMR2ON = 1);
  7090   003B00  84CA               	bsf	202,2,c	;volatile
  7091   003B02                     l1633:
  7092   003B02  0012               	return		;funcret
  7093   003B04                     __end_of_TMR2_Init:
  7094                           	callstack 0
  7095                           
  7096 ;; *************** function _PWM_set_Duty *****************
  7097 ;; Defined at:
  7098 ;;		line 72 in file "MCAL_Layer/CPP1/hal_ccp.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;  duty            1    wreg     unsigned char 
  7101 ;;  _ccp            1   91[COMRAM] PTR const struct .
  7102 ;;		 -> ccp_obj(15), 
  7103 ;; Auto vars:     Size  Location     Type
  7104 ;;  duty            1   94[COMRAM] unsigned char 
  7105 ;;  set_duty_val    2   99[COMRAM] unsigned short 
  7106 ;;  ret             1    0        unsigned char 
  7107 ;; Return value:  Size  Location     Type
  7108 ;;                  1    wreg      unsigned char 
  7109 ;; Registers used:
  7110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7111 ;; Tracked objects:
  7112 ;;		On entry : 0/0
  7113 ;;		On exit  : 0/0
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7116 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7117 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7118 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7119 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7120 ;;Total ram usage:       10 bytes
  7121 ;; Hardware stack levels used: 1
  7122 ;; Hardware stack levels required when called: 3
  7123 ;; This function calls:
  7124 ;;		___fldiv
  7125 ;;		___flmul
  7126 ;;		___fltol
  7127 ;;		___xxtofl
  7128 ;; This function is called by:
  7129 ;;		_main
  7130 ;; This function uses a non-reentrant model
  7131 ;;
  7132                           
  7133                           	psect	text38
  7134   002986                     __ptext38:
  7135                           	callstack 0
  7136   002986                     _PWM_set_Duty:
  7137                           	callstack 27
  7138                           
  7139                           ;incstack = 0
  7140                           ;PWM_set_Duty@duty stored from wreg
  7141   002986  6E5F               	movwf	PWM_set_Duty@duty^0,c
  7142   002988                     
  7143                           ;MCAL_Layer/CPP1/hal_ccp.c: 74: uint16 set_duty_valu = (0) ;
  7144   002988  0E00               	movlw	0
  7145   00298A  6E65               	movwf	(PWM_set_Duty@set_duty_valu+1)^0,c
  7146   00298C  0E00               	movlw	0
  7147   00298E  6E64               	movwf	PWM_set_Duty@set_duty_valu^0,c
  7148   002990                     
  7149                           ;MCAL_Layer/CPP1/hal_ccp.c: 75: if(CCP1_INST ==_ccp->ccp_inst ){
  7150   002990  505C               	movf	PWM_set_Duty@_ccp^0,w,c
  7151   002992  6ED9               	movwf	fsr2l,c
  7152   002994  6ADA               	clrf	fsr2h,c
  7153   002996  0E0A               	movlw	10
  7154   002998  26D9               	addwf	fsr2l,f,c
  7155   00299A  50DF               	movf	indf2,w,c
  7156   00299C  A4D8               	btfss	status,2,c
  7157   00299E  EFD3  F014         	goto	u7051
  7158   0029A2  EFD5  F014         	goto	u7050
  7159   0029A6                     u7051:
  7160   0029A6  EF54  F015         	goto	l7598
  7161   0029AA                     u7050:
  7162   0029AA                     
  7163                           ;MCAL_Layer/CPP1/hal_ccp.c: 76: set_duty_valu = (uint16)(( PR2 + 1 ) * ( duty / 100.0) *
      +                           4);
  7164   0029AA  0E00               	movlw	0
  7165   0029AC  6E2D               	movwf	___fldiv@a^0,c
  7166   0029AE  0E00               	movlw	0
  7167   0029B0  6E2E               	movwf	(___fldiv@a+1)^0,c
  7168   0029B2  0EC8               	movlw	200
  7169   0029B4  6E2F               	movwf	(___fldiv@a+2)^0,c
  7170   0029B6  0E42               	movlw	66
  7171   0029B8  6E30               	movwf	(___fldiv@a+3)^0,c
  7172   0029BA  505F               	movf	PWM_set_Duty@duty^0,w,c
  7173   0029BC  6E02               	movwf	___xxtofl@val^0,c
  7174   0029BE  6A03               	clrf	(___xxtofl@val+1)^0,c
  7175   0029C0  6A04               	clrf	(___xxtofl@val+2)^0,c
  7176   0029C2  6A05               	clrf	(___xxtofl@val+3)^0,c
  7177   0029C4  0E01               	movlw	1
  7178   0029C6  ECC7  F016         	call	___xxtofl
  7179   0029CA  C002  F029         	movff	?___xxtofl,___fldiv@b
  7180   0029CE  C003  F02A         	movff	?___xxtofl+1,___fldiv@b+1
  7181   0029D2  C004  F02B         	movff	?___xxtofl+2,___fldiv@b+2
  7182   0029D6  C005  F02C         	movff	?___xxtofl+3,___fldiv@b+3
  7183   0029DA  EC84  F011         	call	___fldiv	;wreg free
  7184   0029DE  C029  F014         	movff	?___fldiv,___flmul@a
  7185   0029E2  C02A  F015         	movff	?___fldiv+1,___flmul@a+1
  7186   0029E6  C02B  F016         	movff	?___fldiv+2,___flmul@a+2
  7187   0029EA  C02C  F017         	movff	?___fldiv+3,___flmul@a+3
  7188   0029EE  50CB               	movf	203,w,c	;volatile
  7189   0029F0  6E5D               	movwf	??_PWM_set_Duty^0,c
  7190   0029F2  6A5E               	clrf	(??_PWM_set_Duty+1)^0,c
  7191   0029F4  0E01               	movlw	1
  7192   0029F6  265D               	addwf	??_PWM_set_Duty^0,f,c
  7193   0029F8  0E00               	movlw	0
  7194   0029FA  225E               	addwfc	(??_PWM_set_Duty+1)^0,f,c
  7195   0029FC  C05D  F002         	movff	??_PWM_set_Duty,___xxtofl@val
  7196   002A00  C05E  F003         	movff	??_PWM_set_Duty+1,___xxtofl@val+1
  7197   002A04  0E00               	movlw	0
  7198   002A06  BE03               	btfsc	(___xxtofl@val+1)^0,7,c
  7199   002A08  0EFF               	movlw	-1
  7200   002A0A  6E04               	movwf	(___xxtofl@val+2)^0,c
  7201   002A0C  6E05               	movwf	(___xxtofl@val+3)^0,c
  7202   002A0E  0E01               	movlw	1
  7203   002A10  ECC7  F016         	call	___xxtofl
  7204   002A14  C002  F010         	movff	?___xxtofl,___flmul@b
  7205   002A18  C003  F011         	movff	?___xxtofl+1,___flmul@b+1
  7206   002A1C  C004  F012         	movff	?___xxtofl+2,___flmul@b+2
  7207   002A20  C005  F013         	movff	?___xxtofl+3,___flmul@b+3
  7208   002A24  EC6C  F00D         	call	___flmul	;wreg free
  7209   002A28  C010  F060         	movff	?___flmul,_PWM_set_Duty$5773
  7210   002A2C  C011  F061         	movff	?___flmul+1,_PWM_set_Duty$5773+1
  7211   002A30  C012  F062         	movff	?___flmul+2,_PWM_set_Duty$5773+2
  7212   002A34  C013  F063         	movff	?___flmul+3,_PWM_set_Duty$5773+3
  7213                           
  7214                           ;MCAL_Layer/CPP1/hal_ccp.c: 76: set_duty_valu = (uint16)(( PR2 + 1 ) * ( duty / 100.0) *
      +                           4);
  7215   002A38  0E00               	movlw	0
  7216   002A3A  6E14               	movwf	___flmul@a^0,c
  7217   002A3C  0E00               	movlw	0
  7218   002A3E  6E15               	movwf	(___flmul@a+1)^0,c
  7219   002A40  0E80               	movlw	128
  7220   002A42  6E16               	movwf	(___flmul@a+2)^0,c
  7221   002A44  0E40               	movlw	64
  7222   002A46  6E17               	movwf	(___flmul@a+3)^0,c
  7223   002A48  C060  F010         	movff	_PWM_set_Duty$5773,___flmul@b
  7224   002A4C  C061  F011         	movff	_PWM_set_Duty$5773+1,___flmul@b+1
  7225   002A50  C062  F012         	movff	_PWM_set_Duty$5773+2,___flmul@b+2
  7226   002A54  C063  F013         	movff	_PWM_set_Duty$5773+3,___flmul@b+3
  7227   002A58  EC6C  F00D         	call	___flmul	;wreg free
  7228   002A5C  C010  F052         	movff	?___flmul,___fltol@f1
  7229   002A60  C011  F053         	movff	?___flmul+1,___fltol@f1+1
  7230   002A64  C012  F054         	movff	?___flmul+2,___fltol@f1+2
  7231   002A68  C013  F055         	movff	?___flmul+3,___fltol@f1+3
  7232   002A6C  EC44  F019         	call	___fltol	;wreg free
  7233   002A70  C052  F064         	movff	?___fltol,PWM_set_Duty@set_duty_valu
  7234   002A74  C053  F065         	movff	?___fltol+1,PWM_set_Duty@set_duty_valu+1
  7235   002A78                     
  7236                           ;MCAL_Layer/CPP1/hal_ccp.c: 77: CCP1CONbits.DC1B =(uint8)(set_duty_valu & 0x0003);
  7237   002A78  C064  F05D         	movff	PWM_set_Duty@set_duty_valu,??_PWM_set_Duty
  7238   002A7C  0E03               	movlw	3
  7239   002A7E  165D               	andwf	??_PWM_set_Duty^0,f,c
  7240   002A80  3A5D               	swapf	??_PWM_set_Duty^0,f,c
  7241   002A82  50BD               	movf	189,w,c	;volatile
  7242   002A84  185D               	xorwf	??_PWM_set_Duty^0,w,c
  7243   002A86  0BCF               	andlw	-49
  7244   002A88  185D               	xorwf	??_PWM_set_Duty^0,w,c
  7245   002A8A  6EBD               	movwf	189,c	;volatile
  7246   002A8C                     
  7247                           ;MCAL_Layer/CPP1/hal_ccp.c: 78: CCPR1L =(uint8)(set_duty_valu>>2);
  7248   002A8C  C064  F05D         	movff	PWM_set_Duty@set_duty_valu,??_PWM_set_Duty
  7249   002A90  C065  F05E         	movff	PWM_set_Duty@set_duty_valu+1,??_PWM_set_Duty+1
  7250   002A94  90D8               	bcf	status,0,c
  7251   002A96  325E               	rrcf	(??_PWM_set_Duty+1)^0,f,c
  7252   002A98  325D               	rrcf	??_PWM_set_Duty^0,f,c
  7253   002A9A  90D8               	bcf	status,0,c
  7254   002A9C  325E               	rrcf	(??_PWM_set_Duty+1)^0,f,c
  7255   002A9E  325D               	rrcf	??_PWM_set_Duty^0,f,c
  7256   002AA0  505D               	movf	??_PWM_set_Duty^0,w,c
  7257   002AA2  6EBE               	movwf	190,c	;volatile
  7258                           
  7259                           ;MCAL_Layer/CPP1/hal_ccp.c: 79: }else if(CCP2_INST ==_ccp->ccp_inst ){
  7260   002AA4  EFDE  F015         	goto	l7606
  7261   002AA8                     l7598:
  7262   002AA8  505C               	movf	PWM_set_Duty@_ccp^0,w,c
  7263   002AAA  6ED9               	movwf	fsr2l,c
  7264   002AAC  6ADA               	clrf	fsr2h,c
  7265   002AAE  0E0A               	movlw	10
  7266   002AB0  26D9               	addwf	fsr2l,f,c
  7267   002AB2  04DE               	decf	postinc2,w,c
  7268   002AB4  A4D8               	btfss	status,2,c
  7269   002AB6  EF5F  F015         	goto	u7061
  7270   002ABA  EF61  F015         	goto	u7060
  7271   002ABE                     u7061:
  7272   002ABE  EFDE  F015         	goto	l7606
  7273   002AC2                     u7060:
  7274   002AC2                     
  7275                           ;MCAL_Layer/CPP1/hal_ccp.c: 80: set_duty_valu = (uint16)(( PR2 + 1 ) * ( duty / 100.0) *
      +                           4);
  7276   002AC2  0E00               	movlw	0
  7277   002AC4  6E2D               	movwf	___fldiv@a^0,c
  7278   002AC6  0E00               	movlw	0
  7279   002AC8  6E2E               	movwf	(___fldiv@a+1)^0,c
  7280   002ACA  0EC8               	movlw	200
  7281   002ACC  6E2F               	movwf	(___fldiv@a+2)^0,c
  7282   002ACE  0E42               	movlw	66
  7283   002AD0  6E30               	movwf	(___fldiv@a+3)^0,c
  7284   002AD2  505F               	movf	PWM_set_Duty@duty^0,w,c
  7285   002AD4  6E02               	movwf	___xxtofl@val^0,c
  7286   002AD6  6A03               	clrf	(___xxtofl@val+1)^0,c
  7287   002AD8  6A04               	clrf	(___xxtofl@val+2)^0,c
  7288   002ADA  6A05               	clrf	(___xxtofl@val+3)^0,c
  7289   002ADC  0E01               	movlw	1
  7290   002ADE  ECC7  F016         	call	___xxtofl
  7291   002AE2  C002  F029         	movff	?___xxtofl,___fldiv@b
  7292   002AE6  C003  F02A         	movff	?___xxtofl+1,___fldiv@b+1
  7293   002AEA  C004  F02B         	movff	?___xxtofl+2,___fldiv@b+2
  7294   002AEE  C005  F02C         	movff	?___xxtofl+3,___fldiv@b+3
  7295   002AF2  EC84  F011         	call	___fldiv	;wreg free
  7296   002AF6  C029  F014         	movff	?___fldiv,___flmul@a
  7297   002AFA  C02A  F015         	movff	?___fldiv+1,___flmul@a+1
  7298   002AFE  C02B  F016         	movff	?___fldiv+2,___flmul@a+2
  7299   002B02  C02C  F017         	movff	?___fldiv+3,___flmul@a+3
  7300   002B06  50CB               	movf	203,w,c	;volatile
  7301   002B08  6E5D               	movwf	??_PWM_set_Duty^0,c
  7302   002B0A  6A5E               	clrf	(??_PWM_set_Duty+1)^0,c
  7303   002B0C  0E01               	movlw	1
  7304   002B0E  265D               	addwf	??_PWM_set_Duty^0,f,c
  7305   002B10  0E00               	movlw	0
  7306   002B12  225E               	addwfc	(??_PWM_set_Duty+1)^0,f,c
  7307   002B14  C05D  F002         	movff	??_PWM_set_Duty,___xxtofl@val
  7308   002B18  C05E  F003         	movff	??_PWM_set_Duty+1,___xxtofl@val+1
  7309   002B1C  0E00               	movlw	0
  7310   002B1E  BE03               	btfsc	(___xxtofl@val+1)^0,7,c
  7311   002B20  0EFF               	movlw	-1
  7312   002B22  6E04               	movwf	(___xxtofl@val+2)^0,c
  7313   002B24  6E05               	movwf	(___xxtofl@val+3)^0,c
  7314   002B26  0E01               	movlw	1
  7315   002B28  ECC7  F016         	call	___xxtofl
  7316   002B2C  C002  F010         	movff	?___xxtofl,___flmul@b
  7317   002B30  C003  F011         	movff	?___xxtofl+1,___flmul@b+1
  7318   002B34  C004  F012         	movff	?___xxtofl+2,___flmul@b+2
  7319   002B38  C005  F013         	movff	?___xxtofl+3,___flmul@b+3
  7320   002B3C  EC6C  F00D         	call	___flmul	;wreg free
  7321   002B40  C010  F060         	movff	?___flmul,_PWM_set_Duty$5773
  7322   002B44  C011  F061         	movff	?___flmul+1,_PWM_set_Duty$5773+1
  7323   002B48  C012  F062         	movff	?___flmul+2,_PWM_set_Duty$5773+2
  7324   002B4C  C013  F063         	movff	?___flmul+3,_PWM_set_Duty$5773+3
  7325                           
  7326                           ;MCAL_Layer/CPP1/hal_ccp.c: 80: set_duty_valu = (uint16)(( PR2 + 1 ) * ( duty / 100.0) *
      +                           4);
  7327   002B50  0E00               	movlw	0
  7328   002B52  6E14               	movwf	___flmul@a^0,c
  7329   002B54  0E00               	movlw	0
  7330   002B56  6E15               	movwf	(___flmul@a+1)^0,c
  7331   002B58  0E80               	movlw	128
  7332   002B5A  6E16               	movwf	(___flmul@a+2)^0,c
  7333   002B5C  0E40               	movlw	64
  7334   002B5E  6E17               	movwf	(___flmul@a+3)^0,c
  7335   002B60  C060  F010         	movff	_PWM_set_Duty$5773,___flmul@b
  7336   002B64  C061  F011         	movff	_PWM_set_Duty$5773+1,___flmul@b+1
  7337   002B68  C062  F012         	movff	_PWM_set_Duty$5773+2,___flmul@b+2
  7338   002B6C  C063  F013         	movff	_PWM_set_Duty$5773+3,___flmul@b+3
  7339   002B70  EC6C  F00D         	call	___flmul	;wreg free
  7340   002B74  C010  F052         	movff	?___flmul,___fltol@f1
  7341   002B78  C011  F053         	movff	?___flmul+1,___fltol@f1+1
  7342   002B7C  C012  F054         	movff	?___flmul+2,___fltol@f1+2
  7343   002B80  C013  F055         	movff	?___flmul+3,___fltol@f1+3
  7344   002B84  EC44  F019         	call	___fltol	;wreg free
  7345   002B88  C052  F064         	movff	?___fltol,PWM_set_Duty@set_duty_valu
  7346   002B8C  C053  F065         	movff	?___fltol+1,PWM_set_Duty@set_duty_valu+1
  7347   002B90                     
  7348                           ;MCAL_Layer/CPP1/hal_ccp.c: 81: CCP2CONbits.DC2B =(uint8)(set_duty_valu & 0x0003);
  7349   002B90  C064  F05D         	movff	PWM_set_Duty@set_duty_valu,??_PWM_set_Duty
  7350   002B94  0E03               	movlw	3
  7351   002B96  165D               	andwf	??_PWM_set_Duty^0,f,c
  7352   002B98  3A5D               	swapf	??_PWM_set_Duty^0,f,c
  7353   002B9A  50BA               	movf	186,w,c	;volatile
  7354   002B9C  185D               	xorwf	??_PWM_set_Duty^0,w,c
  7355   002B9E  0BCF               	andlw	-49
  7356   002BA0  185D               	xorwf	??_PWM_set_Duty^0,w,c
  7357   002BA2  6EBA               	movwf	186,c	;volatile
  7358   002BA4                     
  7359                           ;MCAL_Layer/CPP1/hal_ccp.c: 82: CCPR2L =(uint8)(set_duty_valu>>2);
  7360   002BA4  C064  F05D         	movff	PWM_set_Duty@set_duty_valu,??_PWM_set_Duty
  7361   002BA8  C065  F05E         	movff	PWM_set_Duty@set_duty_valu+1,??_PWM_set_Duty+1
  7362   002BAC  90D8               	bcf	status,0,c
  7363   002BAE  325E               	rrcf	(??_PWM_set_Duty+1)^0,f,c
  7364   002BB0  325D               	rrcf	??_PWM_set_Duty^0,f,c
  7365   002BB2  90D8               	bcf	status,0,c
  7366   002BB4  325E               	rrcf	(??_PWM_set_Duty+1)^0,f,c
  7367   002BB6  325D               	rrcf	??_PWM_set_Duty^0,f,c
  7368   002BB8  505D               	movf	??_PWM_set_Duty^0,w,c
  7369   002BBA  6EBB               	movwf	187,c	;volatile
  7370   002BBC                     l7606:
  7371                           
  7372                           ;MCAL_Layer/CPP1/hal_ccp.c: 84: return ret;
  7373   002BBC  0E00               	movlw	0
  7374   002BBE  0012               	return		;funcret
  7375   002BC0                     __end_of_PWM_set_Duty:
  7376                           	callstack 0
  7377                           
  7378 ;; *************** function ___xxtofl *****************
  7379 ;; Defined at:
  7380 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  7381 ;; Parameters:    Size  Location     Type
  7382 ;;  sign            1    wreg     unsigned char 
  7383 ;;  val             4    1[COMRAM] long 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;  sign            1    9[COMRAM] unsigned char 
  7386 ;;  arg             4   11[COMRAM] unsigned long 
  7387 ;;  exp             1   10[COMRAM] unsigned char 
  7388 ;; Return value:  Size  Location     Type
  7389 ;;                  4    1[COMRAM] unsigned char 
  7390 ;; Registers used:
  7391 ;;		wreg, status,2, status,0
  7392 ;; Tracked objects:
  7393 ;;		On entry : 0/0
  7394 ;;		On exit  : 0/0
  7395 ;;		Unchanged: 0/0
  7396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7397 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7398 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7399 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7400 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7401 ;;Total ram usage:       14 bytes
  7402 ;; Hardware stack levels used: 1
  7403 ;; Hardware stack levels required when called: 2
  7404 ;; This function calls:
  7405 ;;		Nothing
  7406 ;; This function is called by:
  7407 ;;		_PWM_set_Duty
  7408 ;;		_configure_mode
  7409 ;;		_main
  7410 ;;		_eusart_baudrate_configuration
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           	psect	text39
  7415   002D8E                     __ptext39:
  7416                           	callstack 0
  7417   002D8E                     ___xxtofl:
  7418                           	callstack 25
  7419                           
  7420                           ;incstack = 0
  7421                           ;___xxtofl@sign stored from wreg
  7422   002D8E  6E0A               	movwf	___xxtofl@sign^0,c
  7423   002D90  500A               	movf	___xxtofl@sign^0,w,c
  7424   002D92  B4D8               	btfsc	status,2,c
  7425   002D94  EFCE  F016         	goto	u6191
  7426   002D98  EFD0  F016         	goto	u6190
  7427   002D9C                     u6191:
  7428   002D9C  EFF2  F016         	goto	l2453
  7429   002DA0                     u6190:
  7430   002DA0  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
  7431   002DA2  EFD7  F016         	goto	u6200
  7432   002DA6  EFD5  F016         	goto	u6201
  7433   002DAA                     u6201:
  7434   002DAA  EFF2  F016         	goto	l2453
  7435   002DAE                     u6200:
  7436   002DAE  C002  F006         	movff	___xxtofl@val,??___xxtofl
  7437   002DB2  C003  F007         	movff	___xxtofl@val+1,??___xxtofl+1
  7438   002DB6  C004  F008         	movff	___xxtofl@val+2,??___xxtofl+2
  7439   002DBA  C005  F009         	movff	___xxtofl@val+3,??___xxtofl+3
  7440   002DBE  1E06               	comf	??___xxtofl^0,f,c
  7441   002DC0  1E07               	comf	(??___xxtofl+1)^0,f,c
  7442   002DC2  1E08               	comf	(??___xxtofl+2)^0,f,c
  7443   002DC4  1E09               	comf	(??___xxtofl+3)^0,f,c
  7444   002DC6  2A06               	incf	??___xxtofl^0,f,c
  7445   002DC8  0E00               	movlw	0
  7446   002DCA  2207               	addwfc	(??___xxtofl+1)^0,f,c
  7447   002DCC  2208               	addwfc	(??___xxtofl+2)^0,f,c
  7448   002DCE  2209               	addwfc	(??___xxtofl+3)^0,f,c
  7449   002DD0  C006  F00C         	movff	??___xxtofl,___xxtofl@arg
  7450   002DD4  C007  F00D         	movff	??___xxtofl+1,___xxtofl@arg+1
  7451   002DD8  C008  F00E         	movff	??___xxtofl+2,___xxtofl@arg+2
  7452   002DDC  C009  F00F         	movff	??___xxtofl+3,___xxtofl@arg+3
  7453   002DE0  EFFA  F016         	goto	l6830
  7454   002DE4                     l2453:
  7455   002DE4  C002  F00C         	movff	___xxtofl@val,___xxtofl@arg
  7456   002DE8  C003  F00D         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7457   002DEC  C004  F00E         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7458   002DF0  C005  F00F         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7459   002DF4                     l6830:
  7460   002DF4  5002               	movf	___xxtofl@val^0,w,c
  7461   002DF6  1003               	iorwf	(___xxtofl@val+1)^0,w,c
  7462   002DF8  1004               	iorwf	(___xxtofl@val+2)^0,w,c
  7463   002DFA  1005               	iorwf	(___xxtofl@val+3)^0,w,c
  7464   002DFC  A4D8               	btfss	status,2,c
  7465   002DFE  EF03  F017         	goto	u6211
  7466   002E02  EF05  F017         	goto	u6210
  7467   002E06                     u6211:
  7468   002E06  EF0F  F017         	goto	l6836
  7469   002E0A                     u6210:
  7470   002E0A  0E00               	movlw	0
  7471   002E0C  6E02               	movwf	?___xxtofl^0,c
  7472   002E0E  0E00               	movlw	0
  7473   002E10  6E03               	movwf	(?___xxtofl+1)^0,c
  7474   002E12  0E00               	movlw	0
  7475   002E14  6E04               	movwf	(?___xxtofl+2)^0,c
  7476   002E16  0E00               	movlw	0
  7477   002E18  6E05               	movwf	(?___xxtofl+3)^0,c
  7478   002E1A  EFA0  F017         	goto	l2456
  7479   002E1E                     l6836:
  7480   002E1E  0E96               	movlw	150
  7481   002E20  6E0B               	movwf	___xxtofl@exp^0,c
  7482   002E22  EF19  F017         	goto	l6840
  7483   002E26                     l6838:
  7484   002E26  2A0B               	incf	___xxtofl@exp^0,f,c
  7485   002E28  90D8               	bcf	status,0,c
  7486   002E2A  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
  7487   002E2C  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
  7488   002E2E  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
  7489   002E30  320C               	rrcf	___xxtofl@arg^0,f,c
  7490   002E32                     l6840:
  7491   002E32  0E00               	movlw	0
  7492   002E34  140C               	andwf	___xxtofl@arg^0,w,c
  7493   002E36  6E06               	movwf	??___xxtofl^0,c
  7494   002E38  0E00               	movlw	0
  7495   002E3A  140D               	andwf	(___xxtofl@arg+1)^0,w,c
  7496   002E3C  6E07               	movwf	(??___xxtofl+1)^0,c
  7497   002E3E  0E00               	movlw	0
  7498   002E40  140E               	andwf	(___xxtofl@arg+2)^0,w,c
  7499   002E42  6E08               	movwf	(??___xxtofl+2)^0,c
  7500   002E44  0EFE               	movlw	254
  7501   002E46  140F               	andwf	(___xxtofl@arg+3)^0,w,c
  7502   002E48  6E09               	movwf	(??___xxtofl+3)^0,c
  7503   002E4A  5006               	movf	??___xxtofl^0,w,c
  7504   002E4C  1007               	iorwf	(??___xxtofl+1)^0,w,c
  7505   002E4E  1008               	iorwf	(??___xxtofl+2)^0,w,c
  7506   002E50  1009               	iorwf	(??___xxtofl+3)^0,w,c
  7507   002E52  A4D8               	btfss	status,2,c
  7508   002E54  EF2E  F017         	goto	u6221
  7509   002E58  EF30  F017         	goto	u6220
  7510   002E5C                     u6221:
  7511   002E5C  EF13  F017         	goto	l6838
  7512   002E60                     u6220:
  7513   002E60  EF3E  F017         	goto	l2460
  7514   002E64                     l6842:
  7515   002E64  2A0B               	incf	___xxtofl@exp^0,f,c
  7516   002E66  0E01               	movlw	1
  7517   002E68  260C               	addwf	___xxtofl@arg^0,f,c
  7518   002E6A  0E00               	movlw	0
  7519   002E6C  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
  7520   002E6E  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
  7521   002E70  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
  7522   002E72  90D8               	bcf	status,0,c
  7523   002E74  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
  7524   002E76  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
  7525   002E78  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
  7526   002E7A  320C               	rrcf	___xxtofl@arg^0,f,c
  7527   002E7C                     l2460:
  7528   002E7C  0E00               	movlw	0
  7529   002E7E  140C               	andwf	___xxtofl@arg^0,w,c
  7530   002E80  6E06               	movwf	??___xxtofl^0,c
  7531   002E82  0E00               	movlw	0
  7532   002E84  140D               	andwf	(___xxtofl@arg+1)^0,w,c
  7533   002E86  6E07               	movwf	(??___xxtofl+1)^0,c
  7534   002E88  0E00               	movlw	0
  7535   002E8A  140E               	andwf	(___xxtofl@arg+2)^0,w,c
  7536   002E8C  6E08               	movwf	(??___xxtofl+2)^0,c
  7537   002E8E  0EFF               	movlw	255
  7538   002E90  140F               	andwf	(___xxtofl@arg+3)^0,w,c
  7539   002E92  6E09               	movwf	(??___xxtofl+3)^0,c
  7540   002E94  5006               	movf	??___xxtofl^0,w,c
  7541   002E96  1007               	iorwf	(??___xxtofl+1)^0,w,c
  7542   002E98  1008               	iorwf	(??___xxtofl+2)^0,w,c
  7543   002E9A  1009               	iorwf	(??___xxtofl+3)^0,w,c
  7544   002E9C  A4D8               	btfss	status,2,c
  7545   002E9E  EF53  F017         	goto	u6231
  7546   002EA2  EF55  F017         	goto	u6230
  7547   002EA6                     u6231:
  7548   002EA6  EF32  F017         	goto	l6842
  7549   002EAA                     u6230:
  7550   002EAA  EF5D  F017         	goto	l6850
  7551   002EAE                     l6848:
  7552   002EAE  060B               	decf	___xxtofl@exp^0,f,c
  7553   002EB0  90D8               	bcf	status,0,c
  7554   002EB2  360C               	rlcf	___xxtofl@arg^0,f,c
  7555   002EB4  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
  7556   002EB6  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
  7557   002EB8  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
  7558   002EBA                     l6850:
  7559   002EBA  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
  7560   002EBC  EF62  F017         	goto	u6241
  7561   002EC0  EF64  F017         	goto	u6240
  7562   002EC4                     u6241:
  7563   002EC4  EF6C  F017         	goto	l2467
  7564   002EC8                     u6240:
  7565   002EC8  0E02               	movlw	2
  7566   002ECA  600B               	cpfslt	___xxtofl@exp^0,c
  7567   002ECC  EF6A  F017         	goto	u6251
  7568   002ED0  EF6C  F017         	goto	u6250
  7569   002ED4                     u6251:
  7570   002ED4  EF57  F017         	goto	l6848
  7571   002ED8                     u6250:
  7572   002ED8                     l2467:
  7573   002ED8  B00B               	btfsc	___xxtofl@exp^0,0,c
  7574   002EDA  EF71  F017         	goto	u6261
  7575   002EDE  EF73  F017         	goto	u6260
  7576   002EE2                     u6261:
  7577   002EE2  EF74  F017         	goto	l6856
  7578   002EE6                     u6260:
  7579   002EE6  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
  7580   002EE8                     l6856:
  7581   002EE8  90D8               	bcf	status,0,c
  7582   002EEA  320B               	rrcf	___xxtofl@exp^0,f,c
  7583   002EEC  C00B  F006         	movff	___xxtofl@exp,??___xxtofl
  7584   002EF0  6A07               	clrf	(??___xxtofl+1)^0,c
  7585   002EF2  6A08               	clrf	(??___xxtofl+2)^0,c
  7586   002EF4  6A09               	clrf	(??___xxtofl+3)^0,c
  7587   002EF6  C006  F009         	movff	??___xxtofl,??___xxtofl+3
  7588   002EFA  6A08               	clrf	(??___xxtofl+2)^0,c
  7589   002EFC  6A07               	clrf	(??___xxtofl+1)^0,c
  7590   002EFE  6A06               	clrf	??___xxtofl^0,c
  7591   002F00  5006               	movf	??___xxtofl^0,w,c
  7592   002F02  120C               	iorwf	___xxtofl@arg^0,f,c
  7593   002F04  5007               	movf	(??___xxtofl+1)^0,w,c
  7594   002F06  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
  7595   002F08  5008               	movf	(??___xxtofl+2)^0,w,c
  7596   002F0A  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
  7597   002F0C  5009               	movf	(??___xxtofl+3)^0,w,c
  7598   002F0E  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
  7599   002F10  500A               	movf	___xxtofl@sign^0,w,c
  7600   002F12  B4D8               	btfsc	status,2,c
  7601   002F14  EF8E  F017         	goto	u6271
  7602   002F18  EF90  F017         	goto	u6270
  7603   002F1C                     u6271:
  7604   002F1C  EF98  F017         	goto	l6866
  7605   002F20                     u6270:
  7606   002F20  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
  7607   002F22  EF97  F017         	goto	u6280
  7608   002F26  EF95  F017         	goto	u6281
  7609   002F2A                     u6281:
  7610   002F2A  EF98  F017         	goto	l6866
  7611   002F2E                     u6280:
  7612   002F2E  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
  7613   002F30                     l6866:
  7614   002F30  C00C  F002         	movff	___xxtofl@arg,?___xxtofl
  7615   002F34  C00D  F003         	movff	___xxtofl@arg+1,?___xxtofl+1
  7616   002F38  C00E  F004         	movff	___xxtofl@arg+2,?___xxtofl+2
  7617   002F3C  C00F  F005         	movff	___xxtofl@arg+3,?___xxtofl+3
  7618   002F40                     l2456:
  7619   002F40  0012               	return		;funcret
  7620   002F42                     __end_of___xxtofl:
  7621                           	callstack 0
  7622                           
  7623 ;; *************** function ___fltol *****************
  7624 ;; Defined at:
  7625 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;  f1              4   81[COMRAM] unsigned char 
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;  exp1            1   90[COMRAM] unsigned char 
  7630 ;;  sign1           1   89[COMRAM] unsigned char 
  7631 ;; Return value:  Size  Location     Type
  7632 ;;                  4   81[COMRAM] long 
  7633 ;; Registers used:
  7634 ;;		wreg, status,2, status,0
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7641 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7642 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7643 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7644 ;;Total ram usage:       10 bytes
  7645 ;; Hardware stack levels used: 1
  7646 ;; Hardware stack levels required when called: 2
  7647 ;; This function calls:
  7648 ;;		Nothing
  7649 ;; This function is called by:
  7650 ;;		_PWM_set_Duty
  7651 ;;		_configure_mode
  7652 ;;		_main
  7653 ;;		_eusart_baudrate_configuration
  7654 ;; This function uses a non-reentrant model
  7655 ;;
  7656                           
  7657                           	psect	text40
  7658   003288                     __ptext40:
  7659                           	callstack 0
  7660   003288                     ___fltol:
  7661                           	callstack 25
  7662   003288  3454               	rlcf	(___fltol@f1+2)^0,w,c
  7663   00328A  3455               	rlcf	(___fltol@f1+3)^0,w,c
  7664   00328C  6E5B               	movwf	___fltol@exp1^0,c
  7665   00328E  505B               	movf	___fltol@exp1^0,w,c
  7666   003290  A4D8               	btfss	status,2,c
  7667   003292  EF4D  F019         	goto	u6121
  7668   003296  EF4F  F019         	goto	u6120
  7669   00329A                     u6121:
  7670   00329A  EF59  F019         	goto	l6786
  7671   00329E                     u6120:
  7672   00329E                     l6782:
  7673   00329E  0E00               	movlw	0
  7674   0032A0  6E52               	movwf	?___fltol^0,c
  7675   0032A2  0E00               	movlw	0
  7676   0032A4  6E53               	movwf	(?___fltol+1)^0,c
  7677   0032A6  0E00               	movlw	0
  7678   0032A8  6E54               	movwf	(?___fltol+2)^0,c
  7679   0032AA  0E00               	movlw	0
  7680   0032AC  6E55               	movwf	(?___fltol+3)^0,c
  7681   0032AE  EFC6  F019         	goto	l2095
  7682   0032B2                     l6786:
  7683   0032B2  C052  F056         	movff	___fltol@f1,??___fltol
  7684   0032B6  C053  F057         	movff	___fltol@f1+1,??___fltol+1
  7685   0032BA  C054  F058         	movff	___fltol@f1+2,??___fltol+2
  7686   0032BE  C055  F059         	movff	___fltol@f1+3,??___fltol+3
  7687   0032C2  0E20               	movlw	32
  7688   0032C4  EF69  F019         	goto	u6130
  7689   0032C8                     u6135:
  7690   0032C8  90D8               	bcf	status,0,c
  7691   0032CA  3259               	rrcf	(??___fltol+3)^0,f,c
  7692   0032CC  3258               	rrcf	(??___fltol+2)^0,f,c
  7693   0032CE  3257               	rrcf	(??___fltol+1)^0,f,c
  7694   0032D0  3256               	rrcf	??___fltol^0,f,c
  7695   0032D2                     u6130:
  7696   0032D2  2EE8               	decfsz	wreg,f,c
  7697   0032D4  EF64  F019         	goto	u6135
  7698   0032D8  5056               	movf	??___fltol^0,w,c
  7699   0032DA  6E5A               	movwf	___fltol@sign1^0,c
  7700   0032DC  8E54               	bsf	(___fltol@f1+2)^0,7,c
  7701   0032DE  0EFF               	movlw	255
  7702   0032E0  1652               	andwf	___fltol@f1^0,f,c
  7703   0032E2  0EFF               	movlw	255
  7704   0032E4  1653               	andwf	(___fltol@f1+1)^0,f,c
  7705   0032E6  0EFF               	movlw	255
  7706   0032E8  1654               	andwf	(___fltol@f1+2)^0,f,c
  7707   0032EA  0E00               	movlw	0
  7708   0032EC  1655               	andwf	(___fltol@f1+3)^0,f,c
  7709   0032EE  0E96               	movlw	150
  7710   0032F0  5E5B               	subwf	___fltol@exp1^0,f,c
  7711   0032F2  BE5B               	btfsc	___fltol@exp1^0,7,c
  7712   0032F4  EF80  F019         	goto	u6140
  7713   0032F8  EF7E  F019         	goto	u6141
  7714   0032FC                     u6141:
  7715   0032FC  EF96  F019         	goto	l6806
  7716   003300                     u6140:
  7717   003300  505B               	movf	___fltol@exp1^0,w,c
  7718   003302  0A80               	xorlw	128
  7719   003304  0F97               	addlw	151
  7720   003306  B0D8               	btfsc	status,0,c
  7721   003308  EF88  F019         	goto	u6151
  7722   00330C  EF8A  F019         	goto	u6150
  7723   003310                     u6151:
  7724   003310  EF8C  F019         	goto	l6802
  7725   003314                     u6150:
  7726   003314  EF4F  F019         	goto	l6782
  7727   003318                     l6802:
  7728   003318  90D8               	bcf	status,0,c
  7729   00331A  3255               	rrcf	(___fltol@f1+3)^0,f,c
  7730   00331C  3254               	rrcf	(___fltol@f1+2)^0,f,c
  7731   00331E  3253               	rrcf	(___fltol@f1+1)^0,f,c
  7732   003320  3252               	rrcf	___fltol@f1^0,f,c
  7733   003322  3E5B               	incfsz	___fltol@exp1^0,f,c
  7734   003324  EF8C  F019         	goto	l6802
  7735   003328  EFAE  F019         	goto	l6816
  7736   00332C                     l6806:
  7737   00332C  0E1F               	movlw	31
  7738   00332E  645B               	cpfsgt	___fltol@exp1^0,c
  7739   003330  EF9C  F019         	goto	u6161
  7740   003334  EF9E  F019         	goto	u6160
  7741   003338                     u6161:
  7742   003338  EFA6  F019         	goto	l6814
  7743   00333C                     u6160:
  7744   00333C  EF4F  F019         	goto	l6782
  7745   003340                     l6812:
  7746   003340  90D8               	bcf	status,0,c
  7747   003342  3652               	rlcf	___fltol@f1^0,f,c
  7748   003344  3653               	rlcf	(___fltol@f1+1)^0,f,c
  7749   003346  3654               	rlcf	(___fltol@f1+2)^0,f,c
  7750   003348  3655               	rlcf	(___fltol@f1+3)^0,f,c
  7751   00334A  065B               	decf	___fltol@exp1^0,f,c
  7752   00334C                     l6814:
  7753   00334C  505B               	movf	___fltol@exp1^0,w,c
  7754   00334E  A4D8               	btfss	status,2,c
  7755   003350  EFAC  F019         	goto	u6171
  7756   003354  EFAE  F019         	goto	u6170
  7757   003358                     u6171:
  7758   003358  EFA0  F019         	goto	l6812
  7759   00335C                     u6170:
  7760   00335C                     l6816:
  7761   00335C  505A               	movf	___fltol@sign1^0,w,c
  7762   00335E  B4D8               	btfsc	status,2,c
  7763   003360  EFB4  F019         	goto	u6181
  7764   003364  EFB6  F019         	goto	u6180
  7765   003368                     u6181:
  7766   003368  EFBE  F019         	goto	l6820
  7767   00336C                     u6180:
  7768   00336C  1E55               	comf	(___fltol@f1+3)^0,f,c
  7769   00336E  1E54               	comf	(___fltol@f1+2)^0,f,c
  7770   003370  1E53               	comf	(___fltol@f1+1)^0,f,c
  7771   003372  6C52               	negf	___fltol@f1^0,c
  7772   003374  0E00               	movlw	0
  7773   003376  2253               	addwfc	(___fltol@f1+1)^0,f,c
  7774   003378  2254               	addwfc	(___fltol@f1+2)^0,f,c
  7775   00337A  2255               	addwfc	(___fltol@f1+3)^0,f,c
  7776   00337C                     l6820:
  7777   00337C  C052  F052         	movff	___fltol@f1,?___fltol
  7778   003380  C053  F053         	movff	___fltol@f1+1,?___fltol+1
  7779   003384  C054  F054         	movff	___fltol@f1+2,?___fltol+2
  7780   003388  C055  F055         	movff	___fltol@f1+3,?___fltol+3
  7781   00338C                     l2095:
  7782   00338C  0012               	return		;funcret
  7783   00338E                     __end_of___fltol:
  7784                           	callstack 0
  7785                           
  7786 ;; *************** function ___flmul *****************
  7787 ;; Defined at:
  7788 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  7789 ;; Parameters:    Size  Location     Type
  7790 ;;  b               4   15[COMRAM] long 
  7791 ;;  a               4   19[COMRAM] long 
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;  prod            4   34[COMRAM] struct .
  7794 ;;  grs             4   28[COMRAM] unsigned long 
  7795 ;;  temp            2   38[COMRAM] struct .
  7796 ;;  bexp            1   33[COMRAM] unsigned char 
  7797 ;;  aexp            1   32[COMRAM] unsigned char 
  7798 ;;  sign            1   27[COMRAM] unsigned char 
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  4   15[COMRAM] unsigned char 
  7801 ;; Registers used:
  7802 ;;		wreg, status,2, status,0, prodl, prodh
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7808 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7809 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7810 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7811 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7812 ;;Total ram usage:       25 bytes
  7813 ;; Hardware stack levels used: 1
  7814 ;; Hardware stack levels required when called: 2
  7815 ;; This function calls:
  7816 ;;		Nothing
  7817 ;; This function is called by:
  7818 ;;		_PWM_set_Duty
  7819 ;;		_configure_mode
  7820 ;;		_main
  7821 ;; This function uses a non-reentrant model
  7822 ;;
  7823                           
  7824                           	psect	text41
  7825   001AD8                     __ptext41:
  7826                           	callstack 0
  7827   001AD8                     ___flmul:
  7828                           	callstack 25
  7829   001AD8  5013               	movf	(___flmul@b+3)^0,w,c
  7830   001ADA  0B80               	andlw	128
  7831   001ADC  6E1C               	movwf	___flmul@sign^0,c
  7832   001ADE  5013               	movf	(___flmul@b+3)^0,w,c
  7833   001AE0  2413               	addwf	(___flmul@b+3)^0,w,c
  7834   001AE2  6E22               	movwf	___flmul@bexp^0,c
  7835   001AE4  AE12               	btfss	(___flmul@b+2)^0,7,c
  7836   001AE6  EF77  F00D         	goto	u5931
  7837   001AEA  EF79  F00D         	goto	u5930
  7838   001AEE                     u5931:
  7839   001AEE  EF7A  F00D         	goto	l6656
  7840   001AF2                     u5930:
  7841   001AF2  8022               	bsf	___flmul@bexp^0,0,c
  7842   001AF4                     l6656:
  7843   001AF4  5022               	movf	___flmul@bexp^0,w,c
  7844   001AF6  B4D8               	btfsc	status,2,c
  7845   001AF8  EF80  F00D         	goto	u5941
  7846   001AFC  EF82  F00D         	goto	u5940
  7847   001B00                     u5941:
  7848   001B00  EF95  F00D         	goto	l6664
  7849   001B04                     u5940:
  7850   001B04  2822               	incf	___flmul@bexp^0,w,c
  7851   001B06  A4D8               	btfss	status,2,c
  7852   001B08  EF88  F00D         	goto	u5951
  7853   001B0C  EF8A  F00D         	goto	u5950
  7854   001B10                     u5951:
  7855   001B10  EF92  F00D         	goto	l6662
  7856   001B14                     u5950:
  7857   001B14  0E00               	movlw	0
  7858   001B16  6E10               	movwf	___flmul@b^0,c
  7859   001B18  0E00               	movlw	0
  7860   001B1A  6E11               	movwf	(___flmul@b+1)^0,c
  7861   001B1C  0E00               	movlw	0
  7862   001B1E  6E12               	movwf	(___flmul@b+2)^0,c
  7863   001B20  0E00               	movlw	0
  7864   001B22  6E13               	movwf	(___flmul@b+3)^0,c
  7865   001B24                     l6662:
  7866   001B24  8E12               	bsf	(___flmul@b+2)^0,7,c
  7867   001B26  EF9D  F00D         	goto	l6666
  7868   001B2A                     l6664:
  7869   001B2A  0E00               	movlw	0
  7870   001B2C  6E10               	movwf	___flmul@b^0,c
  7871   001B2E  0E00               	movlw	0
  7872   001B30  6E11               	movwf	(___flmul@b+1)^0,c
  7873   001B32  0E00               	movlw	0
  7874   001B34  6E12               	movwf	(___flmul@b+2)^0,c
  7875   001B36  0E00               	movlw	0
  7876   001B38  6E13               	movwf	(___flmul@b+3)^0,c
  7877   001B3A                     l6666:
  7878   001B3A  5017               	movf	(___flmul@a+3)^0,w,c
  7879   001B3C  0B80               	andlw	128
  7880   001B3E  1A1C               	xorwf	___flmul@sign^0,f,c
  7881   001B40  5017               	movf	(___flmul@a+3)^0,w,c
  7882   001B42  2417               	addwf	(___flmul@a+3)^0,w,c
  7883   001B44  6E21               	movwf	___flmul@aexp^0,c
  7884   001B46  AE16               	btfss	(___flmul@a+2)^0,7,c
  7885   001B48  EFA8  F00D         	goto	u5961
  7886   001B4C  EFAA  F00D         	goto	u5960
  7887   001B50                     u5961:
  7888   001B50  EFAB  F00D         	goto	l6674
  7889   001B54                     u5960:
  7890   001B54  8021               	bsf	___flmul@aexp^0,0,c
  7891   001B56                     l6674:
  7892   001B56  5021               	movf	___flmul@aexp^0,w,c
  7893   001B58  B4D8               	btfsc	status,2,c
  7894   001B5A  EFB1  F00D         	goto	u5971
  7895   001B5E  EFB3  F00D         	goto	u5970
  7896   001B62                     u5971:
  7897   001B62  EFC6  F00D         	goto	l6682
  7898   001B66                     u5970:
  7899   001B66  2821               	incf	___flmul@aexp^0,w,c
  7900   001B68  A4D8               	btfss	status,2,c
  7901   001B6A  EFB9  F00D         	goto	u5981
  7902   001B6E  EFBB  F00D         	goto	u5980
  7903   001B72                     u5981:
  7904   001B72  EFC3  F00D         	goto	l6680
  7905   001B76                     u5980:
  7906   001B76  0E00               	movlw	0
  7907   001B78  6E14               	movwf	___flmul@a^0,c
  7908   001B7A  0E00               	movlw	0
  7909   001B7C  6E15               	movwf	(___flmul@a+1)^0,c
  7910   001B7E  0E00               	movlw	0
  7911   001B80  6E16               	movwf	(___flmul@a+2)^0,c
  7912   001B82  0E00               	movlw	0
  7913   001B84  6E17               	movwf	(___flmul@a+3)^0,c
  7914   001B86                     l6680:
  7915   001B86  8E16               	bsf	(___flmul@a+2)^0,7,c
  7916   001B88  EFCE  F00D         	goto	l2412
  7917   001B8C                     l6682:
  7918   001B8C  0E00               	movlw	0
  7919   001B8E  6E14               	movwf	___flmul@a^0,c
  7920   001B90  0E00               	movlw	0
  7921   001B92  6E15               	movwf	(___flmul@a+1)^0,c
  7922   001B94  0E00               	movlw	0
  7923   001B96  6E16               	movwf	(___flmul@a+2)^0,c
  7924   001B98  0E00               	movlw	0
  7925   001B9A  6E17               	movwf	(___flmul@a+3)^0,c
  7926   001B9C                     l2412:
  7927   001B9C  5021               	movf	___flmul@aexp^0,w,c
  7928   001B9E  B4D8               	btfsc	status,2,c
  7929   001BA0  EFD4  F00D         	goto	u5991
  7930   001BA4  EFD6  F00D         	goto	u5990
  7931   001BA8                     u5991:
  7932   001BA8  EFDE  F00D         	goto	l6686
  7933   001BAC                     u5990:
  7934   001BAC  5022               	movf	___flmul@bexp^0,w,c
  7935   001BAE  A4D8               	btfss	status,2,c
  7936   001BB0  EFDC  F00D         	goto	u6001
  7937   001BB4  EFDE  F00D         	goto	u6000
  7938   001BB8                     u6001:
  7939   001BB8  EFE8  F00D         	goto	l6690
  7940   001BBC                     u6000:
  7941   001BBC                     l6686:
  7942   001BBC  0E00               	movlw	0
  7943   001BBE  6E10               	movwf	?___flmul^0,c
  7944   001BC0  0E00               	movlw	0
  7945   001BC2  6E11               	movwf	(?___flmul+1)^0,c
  7946   001BC4  0E00               	movlw	0
  7947   001BC6  6E12               	movwf	(?___flmul+2)^0,c
  7948   001BC8  0E00               	movlw	0
  7949   001BCA  6E13               	movwf	(?___flmul+3)^0,c
  7950   001BCC  EF80  F00F         	goto	l2416
  7951   001BD0                     l6690:
  7952   001BD0  5016               	movf	(___flmul@a+2)^0,w,c
  7953   001BD2  0210               	mulwf	___flmul@b^0,c
  7954   001BD4  CFF3 F027          	movff	prodl,___flmul@temp
  7955   001BD8  CFF4 F028          	movff	prodh,___flmul@temp+1
  7956   001BDC  5027               	movf	___flmul@temp^0,w,c
  7957   001BDE  6E1D               	movwf	___flmul@grs^0,c
  7958   001BE0  6A1E               	clrf	(___flmul@grs+1)^0,c
  7959   001BE2  6A1F               	clrf	(___flmul@grs+2)^0,c
  7960   001BE4  6A20               	clrf	(___flmul@grs+3)^0,c
  7961   001BE6  5028               	movf	(___flmul@temp+1)^0,w,c
  7962   001BE8  6E23               	movwf	___flmul@prod^0,c
  7963   001BEA  6A24               	clrf	(___flmul@prod+1)^0,c
  7964   001BEC  6A25               	clrf	(___flmul@prod+2)^0,c
  7965   001BEE  6A26               	clrf	(___flmul@prod+3)^0,c
  7966   001BF0  5015               	movf	(___flmul@a+1)^0,w,c
  7967   001BF2  0211               	mulwf	(___flmul@b+1)^0,c
  7968   001BF4  CFF3 F027          	movff	prodl,___flmul@temp
  7969   001BF8  CFF4 F028          	movff	prodh,___flmul@temp+1
  7970   001BFC  5027               	movf	___flmul@temp^0,w,c
  7971   001BFE  261D               	addwf	___flmul@grs^0,f,c
  7972   001C00  0E00               	movlw	0
  7973   001C02  221E               	addwfc	(___flmul@grs+1)^0,f,c
  7974   001C04  221F               	addwfc	(___flmul@grs+2)^0,f,c
  7975   001C06  2220               	addwfc	(___flmul@grs+3)^0,f,c
  7976   001C08  5028               	movf	(___flmul@temp+1)^0,w,c
  7977   001C0A  2623               	addwf	___flmul@prod^0,f,c
  7978   001C0C  0E00               	movlw	0
  7979   001C0E  2224               	addwfc	(___flmul@prod+1)^0,f,c
  7980   001C10  2225               	addwfc	(___flmul@prod+2)^0,f,c
  7981   001C12  2226               	addwfc	(___flmul@prod+3)^0,f,c
  7982   001C14  5014               	movf	___flmul@a^0,w,c
  7983   001C16  0212               	mulwf	(___flmul@b+2)^0,c
  7984   001C18  CFF3 F027          	movff	prodl,___flmul@temp
  7985   001C1C  CFF4 F028          	movff	prodh,___flmul@temp+1
  7986   001C20  5027               	movf	___flmul@temp^0,w,c
  7987   001C22  261D               	addwf	___flmul@grs^0,f,c
  7988   001C24  0E00               	movlw	0
  7989   001C26  221E               	addwfc	(___flmul@grs+1)^0,f,c
  7990   001C28  221F               	addwfc	(___flmul@grs+2)^0,f,c
  7991   001C2A  2220               	addwfc	(___flmul@grs+3)^0,f,c
  7992   001C2C  5028               	movf	(___flmul@temp+1)^0,w,c
  7993   001C2E  2623               	addwf	___flmul@prod^0,f,c
  7994   001C30  0E00               	movlw	0
  7995   001C32  2224               	addwfc	(___flmul@prod+1)^0,f,c
  7996   001C34  2225               	addwfc	(___flmul@prod+2)^0,f,c
  7997   001C36  2226               	addwfc	(___flmul@prod+3)^0,f,c
  7998   001C38  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  7999   001C3C  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  8000   001C40  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  8001   001C44  6A1D               	clrf	___flmul@grs^0,c
  8002   001C46  5014               	movf	___flmul@a^0,w,c
  8003   001C48  0211               	mulwf	(___flmul@b+1)^0,c
  8004   001C4A  CFF3 F027          	movff	prodl,___flmul@temp
  8005   001C4E  CFF4 F028          	movff	prodh,___flmul@temp+1
  8006   001C52  5027               	movf	___flmul@temp^0,w,c
  8007   001C54  261D               	addwf	___flmul@grs^0,f,c
  8008   001C56  5028               	movf	(___flmul@temp+1)^0,w,c
  8009   001C58  221E               	addwfc	(___flmul@grs+1)^0,f,c
  8010   001C5A  0E00               	movlw	0
  8011   001C5C  221F               	addwfc	(___flmul@grs+2)^0,f,c
  8012   001C5E  0E00               	movlw	0
  8013   001C60  2220               	addwfc	(___flmul@grs+3)^0,f,c
  8014   001C62  5015               	movf	(___flmul@a+1)^0,w,c
  8015   001C64  0210               	mulwf	___flmul@b^0,c
  8016   001C66  CFF3 F027          	movff	prodl,___flmul@temp
  8017   001C6A  CFF4 F028          	movff	prodh,___flmul@temp+1
  8018   001C6E  5027               	movf	___flmul@temp^0,w,c
  8019   001C70  261D               	addwf	___flmul@grs^0,f,c
  8020   001C72  5028               	movf	(___flmul@temp+1)^0,w,c
  8021   001C74  221E               	addwfc	(___flmul@grs+1)^0,f,c
  8022   001C76  0E00               	movlw	0
  8023   001C78  221F               	addwfc	(___flmul@grs+2)^0,f,c
  8024   001C7A  0E00               	movlw	0
  8025   001C7C  2220               	addwfc	(___flmul@grs+3)^0,f,c
  8026   001C7E  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  8027   001C82  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  8028   001C86  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  8029   001C8A  6A1D               	clrf	___flmul@grs^0,c
  8030   001C8C  5014               	movf	___flmul@a^0,w,c
  8031   001C8E  0210               	mulwf	___flmul@b^0,c
  8032   001C90  CFF3 F027          	movff	prodl,___flmul@temp
  8033   001C94  CFF4 F028          	movff	prodh,___flmul@temp+1
  8034   001C98  5027               	movf	___flmul@temp^0,w,c
  8035   001C9A  261D               	addwf	___flmul@grs^0,f,c
  8036   001C9C  5028               	movf	(___flmul@temp+1)^0,w,c
  8037   001C9E  221E               	addwfc	(___flmul@grs+1)^0,f,c
  8038   001CA0  0E00               	movlw	0
  8039   001CA2  221F               	addwfc	(___flmul@grs+2)^0,f,c
  8040   001CA4  0E00               	movlw	0
  8041   001CA6  2220               	addwfc	(___flmul@grs+3)^0,f,c
  8042   001CA8  5016               	movf	(___flmul@a+2)^0,w,c
  8043   001CAA  0211               	mulwf	(___flmul@b+1)^0,c
  8044   001CAC  CFF3 F027          	movff	prodl,___flmul@temp
  8045   001CB0  CFF4 F028          	movff	prodh,___flmul@temp+1
  8046   001CB4  5027               	movf	___flmul@temp^0,w,c
  8047   001CB6  2623               	addwf	___flmul@prod^0,f,c
  8048   001CB8  5028               	movf	(___flmul@temp+1)^0,w,c
  8049   001CBA  2224               	addwfc	(___flmul@prod+1)^0,f,c
  8050   001CBC  0E00               	movlw	0
  8051   001CBE  2225               	addwfc	(___flmul@prod+2)^0,f,c
  8052   001CC0  0E00               	movlw	0
  8053   001CC2  2226               	addwfc	(___flmul@prod+3)^0,f,c
  8054   001CC4  5015               	movf	(___flmul@a+1)^0,w,c
  8055   001CC6  0212               	mulwf	(___flmul@b+2)^0,c
  8056   001CC8  CFF3 F027          	movff	prodl,___flmul@temp
  8057   001CCC  CFF4 F028          	movff	prodh,___flmul@temp+1
  8058   001CD0  5027               	movf	___flmul@temp^0,w,c
  8059   001CD2  2623               	addwf	___flmul@prod^0,f,c
  8060   001CD4  5028               	movf	(___flmul@temp+1)^0,w,c
  8061   001CD6  2224               	addwfc	(___flmul@prod+1)^0,f,c
  8062   001CD8  0E00               	movlw	0
  8063   001CDA  2225               	addwfc	(___flmul@prod+2)^0,f,c
  8064   001CDC  0E00               	movlw	0
  8065   001CDE  2226               	addwfc	(___flmul@prod+3)^0,f,c
  8066   001CE0  5016               	movf	(___flmul@a+2)^0,w,c
  8067   001CE2  0212               	mulwf	(___flmul@b+2)^0,c
  8068   001CE4  CFF3 F027          	movff	prodl,___flmul@temp
  8069   001CE8  CFF4 F028          	movff	prodh,___flmul@temp+1
  8070   001CEC  5027               	movf	___flmul@temp^0,w,c
  8071   001CEE  6E18               	movwf	??___flmul^0,c
  8072   001CF0  5028               	movf	(___flmul@temp+1)^0,w,c
  8073   001CF2  6E19               	movwf	(??___flmul+1)^0,c
  8074   001CF4  6A1A               	clrf	(??___flmul+2)^0,c
  8075   001CF6  6A1B               	clrf	(??___flmul+3)^0,c
  8076   001CF8  C01A  F01B         	movff	??___flmul+2,??___flmul+3
  8077   001CFC  C019  F01A         	movff	??___flmul+1,??___flmul+2
  8078   001D00  C018  F019         	movff	??___flmul,??___flmul+1
  8079   001D04  6A18               	clrf	??___flmul^0,c
  8080   001D06  5018               	movf	??___flmul^0,w,c
  8081   001D08  2623               	addwf	___flmul@prod^0,f,c
  8082   001D0A  5019               	movf	(??___flmul+1)^0,w,c
  8083   001D0C  2224               	addwfc	(___flmul@prod+1)^0,f,c
  8084   001D0E  501A               	movf	(??___flmul+2)^0,w,c
  8085   001D10  2225               	addwfc	(___flmul@prod+2)^0,f,c
  8086   001D12  501B               	movf	(??___flmul+3)^0,w,c
  8087   001D14  2226               	addwfc	(___flmul@prod+3)^0,f,c
  8088   001D16  C01D  F018         	movff	___flmul@grs,??___flmul
  8089   001D1A  C01E  F019         	movff	___flmul@grs+1,??___flmul+1
  8090   001D1E  C01F  F01A         	movff	___flmul@grs+2,??___flmul+2
  8091   001D22  C020  F01B         	movff	___flmul@grs+3,??___flmul+3
  8092   001D26  0E19               	movlw	25
  8093   001D28  EF9B  F00E         	goto	u6010
  8094   001D2C                     u6015:
  8095   001D2C  90D8               	bcf	status,0,c
  8096   001D2E  321B               	rrcf	(??___flmul+3)^0,f,c
  8097   001D30  321A               	rrcf	(??___flmul+2)^0,f,c
  8098   001D32  3219               	rrcf	(??___flmul+1)^0,f,c
  8099   001D34  3218               	rrcf	??___flmul^0,f,c
  8100   001D36                     u6010:
  8101   001D36  2EE8               	decfsz	wreg,f,c
  8102   001D38  EF96  F00E         	goto	u6015
  8103   001D3C  5018               	movf	??___flmul^0,w,c
  8104   001D3E  2623               	addwf	___flmul@prod^0,f,c
  8105   001D40  5019               	movf	(??___flmul+1)^0,w,c
  8106   001D42  2224               	addwfc	(___flmul@prod+1)^0,f,c
  8107   001D44  501A               	movf	(??___flmul+2)^0,w,c
  8108   001D46  2225               	addwfc	(___flmul@prod+2)^0,f,c
  8109   001D48  501B               	movf	(??___flmul+3)^0,w,c
  8110   001D4A  2226               	addwfc	(___flmul@prod+3)^0,f,c
  8111   001D4C  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  8112   001D50  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  8113   001D54  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  8114   001D58  6A1D               	clrf	___flmul@grs^0,c
  8115   001D5A  5021               	movf	___flmul@aexp^0,w,c
  8116   001D5C  C022  F018         	movff	___flmul@bexp,??___flmul
  8117   001D60  6A19               	clrf	(??___flmul+1)^0,c
  8118   001D62  2618               	addwf	??___flmul^0,f,c
  8119   001D64  0E00               	movlw	0
  8120   001D66  2219               	addwfc	(??___flmul+1)^0,f,c
  8121   001D68  0E82               	movlw	130
  8122   001D6A  2418               	addwf	??___flmul^0,w,c
  8123   001D6C  6E27               	movwf	___flmul@temp^0,c
  8124   001D6E  0EFF               	movlw	255
  8125   001D70  2019               	addwfc	(??___flmul+1)^0,w,c
  8126   001D72  6E28               	movwf	(___flmul@temp+1)^0,c
  8127   001D74  EFD1  F00E         	goto	l6738
  8128   001D78                     l6732:
  8129   001D78  90D8               	bcf	status,0,c
  8130   001D7A  3623               	rlcf	___flmul@prod^0,f,c
  8131   001D7C  3624               	rlcf	(___flmul@prod+1)^0,f,c
  8132   001D7E  3625               	rlcf	(___flmul@prod+2)^0,f,c
  8133   001D80  3626               	rlcf	(___flmul@prod+3)^0,f,c
  8134   001D82  AE20               	btfss	(___flmul@grs+3)^0,7,c
  8135   001D84  EFC6  F00E         	goto	u6021
  8136   001D88  EFC8  F00E         	goto	u6020
  8137   001D8C                     u6021:
  8138   001D8C  EFC9  F00E         	goto	l2419
  8139   001D90                     u6020:
  8140   001D90  8023               	bsf	___flmul@prod^0,0,c
  8141   001D92                     l2419:
  8142   001D92  90D8               	bcf	status,0,c
  8143   001D94  361D               	rlcf	___flmul@grs^0,f,c
  8144   001D96  361E               	rlcf	(___flmul@grs+1)^0,f,c
  8145   001D98  361F               	rlcf	(___flmul@grs+2)^0,f,c
  8146   001D9A  3620               	rlcf	(___flmul@grs+3)^0,f,c
  8147   001D9C  0627               	decf	___flmul@temp^0,f,c
  8148   001D9E  A0D8               	btfss	status,0,c
  8149   001DA0  0628               	decf	(___flmul@temp+1)^0,f,c
  8150   001DA2                     l6738:
  8151   001DA2  AE25               	btfss	(___flmul@prod+2)^0,7,c
  8152   001DA4  EFD6  F00E         	goto	u6031
  8153   001DA8  EFD8  F00E         	goto	u6030
  8154   001DAC                     u6031:
  8155   001DAC  EFBC  F00E         	goto	l6732
  8156   001DB0                     u6030:
  8157   001DB0  0E00               	movlw	0
  8158   001DB2  6E21               	movwf	___flmul@aexp^0,c
  8159   001DB4  AE20               	btfss	(___flmul@grs+3)^0,7,c
  8160   001DB6  EFDF  F00E         	goto	u6041
  8161   001DBA  EFE1  F00E         	goto	u6040
  8162   001DBE                     u6041:
  8163   001DBE  EF05  F00F         	goto	l2421
  8164   001DC2                     u6040:
  8165   001DC2  0EFF               	movlw	255
  8166   001DC4  141D               	andwf	___flmul@grs^0,w,c
  8167   001DC6  6E18               	movwf	??___flmul^0,c
  8168   001DC8  0EFF               	movlw	255
  8169   001DCA  141E               	andwf	(___flmul@grs+1)^0,w,c
  8170   001DCC  6E19               	movwf	(??___flmul+1)^0,c
  8171   001DCE  0EFF               	movlw	255
  8172   001DD0  141F               	andwf	(___flmul@grs+2)^0,w,c
  8173   001DD2  6E1A               	movwf	(??___flmul+2)^0,c
  8174   001DD4  0E7F               	movlw	127
  8175   001DD6  1420               	andwf	(___flmul@grs+3)^0,w,c
  8176   001DD8  6E1B               	movwf	(??___flmul+3)^0,c
  8177   001DDA  5018               	movf	??___flmul^0,w,c
  8178   001DDC  1019               	iorwf	(??___flmul+1)^0,w,c
  8179   001DDE  101A               	iorwf	(??___flmul+2)^0,w,c
  8180   001DE0  101B               	iorwf	(??___flmul+3)^0,w,c
  8181   001DE2  B4D8               	btfsc	status,2,c
  8182   001DE4  EFF6  F00E         	goto	u6051
  8183   001DE8  EFF8  F00E         	goto	u6050
  8184   001DEC                     u6051:
  8185   001DEC  EFFC  F00E         	goto	l2422
  8186   001DF0                     u6050:
  8187   001DF0                     l6746:
  8188   001DF0  0E01               	movlw	1
  8189   001DF2  6E21               	movwf	___flmul@aexp^0,c
  8190   001DF4  EF05  F00F         	goto	l2421
  8191   001DF8                     l2422:
  8192   001DF8  A023               	btfss	___flmul@prod^0,0,c
  8193   001DFA  EF01  F00F         	goto	u6061
  8194   001DFE  EF03  F00F         	goto	u6060
  8195   001E02                     u6061:
  8196   001E02  EF05  F00F         	goto	l2421
  8197   001E06                     u6060:
  8198   001E06  EFF8  F00E         	goto	l6746
  8199   001E0A                     l2421:
  8200   001E0A  5021               	movf	___flmul@aexp^0,w,c
  8201   001E0C  B4D8               	btfsc	status,2,c
  8202   001E0E  EF0B  F00F         	goto	u6071
  8203   001E12  EF0D  F00F         	goto	u6070
  8204   001E16                     u6071:
  8205   001E16  EF31  F00F         	goto	l6758
  8206   001E1A                     u6070:
  8207   001E1A  0E01               	movlw	1
  8208   001E1C  2623               	addwf	___flmul@prod^0,f,c
  8209   001E1E  0E00               	movlw	0
  8210   001E20  2224               	addwfc	(___flmul@prod+1)^0,f,c
  8211   001E22  2225               	addwfc	(___flmul@prod+2)^0,f,c
  8212   001E24  2226               	addwfc	(___flmul@prod+3)^0,f,c
  8213   001E26  A026               	btfss	(___flmul@prod+3)^0,0,c
  8214   001E28  EF18  F00F         	goto	u6081
  8215   001E2C  EF1A  F00F         	goto	u6080
  8216   001E30                     u6081:
  8217   001E30  EF31  F00F         	goto	l6758
  8218   001E34                     u6080:
  8219   001E34  C023  F018         	movff	___flmul@prod,??___flmul
  8220   001E38  C024  F019         	movff	___flmul@prod+1,??___flmul+1
  8221   001E3C  C025  F01A         	movff	___flmul@prod+2,??___flmul+2
  8222   001E40  C026  F01B         	movff	___flmul@prod+3,??___flmul+3
  8223   001E44  341B               	rlcf	(??___flmul+3)^0,w,c
  8224   001E46  321B               	rrcf	(??___flmul+3)^0,f,c
  8225   001E48  321A               	rrcf	(??___flmul+2)^0,f,c
  8226   001E4A  3219               	rrcf	(??___flmul+1)^0,f,c
  8227   001E4C  3218               	rrcf	??___flmul^0,f,c
  8228   001E4E  C018  F023         	movff	??___flmul,___flmul@prod
  8229   001E52  C019  F024         	movff	??___flmul+1,___flmul@prod+1
  8230   001E56  C01A  F025         	movff	??___flmul+2,___flmul@prod+2
  8231   001E5A  C01B  F026         	movff	??___flmul+3,___flmul@prod+3
  8232   001E5E  4A27               	infsnz	___flmul@temp^0,f,c
  8233   001E60  2A28               	incf	(___flmul@temp+1)^0,f,c
  8234   001E62                     l6758:
  8235   001E62  BE28               	btfsc	(___flmul@temp+1)^0,7,c
  8236   001E64  EF3C  F00F         	goto	u6091
  8237   001E68  5028               	movf	(___flmul@temp+1)^0,w,c
  8238   001E6A  E108               	bnz	u6090
  8239   001E6C  2827               	incf	___flmul@temp^0,w,c
  8240   001E6E  A0D8               	btfss	status,0,c
  8241   001E70  EF3C  F00F         	goto	u6091
  8242   001E74  EF3E  F00F         	goto	u6090
  8243   001E78                     u6091:
  8244   001E78  EF48  F00F         	goto	l6762
  8245   001E7C                     u6090:
  8246   001E7C  0E00               	movlw	0
  8247   001E7E  6E23               	movwf	___flmul@prod^0,c
  8248   001E80  0E00               	movlw	0
  8249   001E82  6E24               	movwf	(___flmul@prod+1)^0,c
  8250   001E84  0E80               	movlw	128
  8251   001E86  6E25               	movwf	(___flmul@prod+2)^0,c
  8252   001E88  0E7F               	movlw	127
  8253   001E8A  6E26               	movwf	(___flmul@prod+3)^0,c
  8254   001E8C  EF76  F00F         	goto	l6774
  8255   001E90                     l6762:
  8256   001E90  BE28               	btfsc	(___flmul@temp+1)^0,7,c
  8257   001E92  EF55  F00F         	goto	u6100
  8258   001E96  5028               	movf	(___flmul@temp+1)^0,w,c
  8259   001E98  E106               	bnz	u6101
  8260   001E9A  0427               	decf	___flmul@temp^0,w,c
  8261   001E9C  B0D8               	btfsc	status,0,c
  8262   001E9E  EF53  F00F         	goto	u6101
  8263   001EA2  EF55  F00F         	goto	u6100
  8264   001EA6                     u6101:
  8265   001EA6  EF61  F00F         	goto	l2429
  8266   001EAA                     u6100:
  8267   001EAA  0E00               	movlw	0
  8268   001EAC  6E23               	movwf	___flmul@prod^0,c
  8269   001EAE  0E00               	movlw	0
  8270   001EB0  6E24               	movwf	(___flmul@prod+1)^0,c
  8271   001EB2  0E00               	movlw	0
  8272   001EB4  6E25               	movwf	(___flmul@prod+2)^0,c
  8273   001EB6  0E00               	movlw	0
  8274   001EB8  6E26               	movwf	(___flmul@prod+3)^0,c
  8275   001EBA  0E00               	movlw	0
  8276   001EBC  6E1C               	movwf	___flmul@sign^0,c
  8277   001EBE  EF76  F00F         	goto	l6774
  8278   001EC2                     l2429:
  8279   001EC2  C027  F022         	movff	___flmul@temp,___flmul@bexp
  8280   001EC6  0EFF               	movlw	255
  8281   001EC8  1623               	andwf	___flmul@prod^0,f,c
  8282   001ECA  0EFF               	movlw	255
  8283   001ECC  1624               	andwf	(___flmul@prod+1)^0,f,c
  8284   001ECE  0E7F               	movlw	127
  8285   001ED0  1625               	andwf	(___flmul@prod+2)^0,f,c
  8286   001ED2  0E00               	movlw	0
  8287   001ED4  1626               	andwf	(___flmul@prod+3)^0,f,c
  8288   001ED6  A022               	btfss	___flmul@bexp^0,0,c
  8289   001ED8  EF70  F00F         	goto	u6111
  8290   001EDC  EF72  F00F         	goto	u6110
  8291   001EE0                     u6111:
  8292   001EE0  EF73  F00F         	goto	l6772
  8293   001EE4                     u6110:
  8294   001EE4  8E25               	bsf	(___flmul@prod+2)^0,7,c
  8295   001EE6                     l6772:
  8296   001EE6  90D8               	bcf	status,0,c
  8297   001EE8  3022               	rrcf	___flmul@bexp^0,w,c
  8298   001EEA  6E26               	movwf	(___flmul@prod+3)^0,c
  8299   001EEC                     l6774:
  8300   001EEC  501C               	movf	___flmul@sign^0,w,c
  8301   001EEE  1226               	iorwf	(___flmul@prod+3)^0,f,c
  8302   001EF0  C023  F010         	movff	___flmul@prod,?___flmul
  8303   001EF4  C024  F011         	movff	___flmul@prod+1,?___flmul+1
  8304   001EF8  C025  F012         	movff	___flmul@prod+2,?___flmul+2
  8305   001EFC  C026  F013         	movff	___flmul@prod+3,?___flmul+3
  8306   001F00                     l2416:
  8307   001F00  0012               	return		;funcret
  8308   001F02                     __end_of___flmul:
  8309                           	callstack 0
  8310                           
  8311 ;; *************** function ___fldiv *****************
  8312 ;; Defined at:
  8313 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;  b               4   40[COMRAM] unsigned char 
  8316 ;;  a               4   44[COMRAM] unsigned char 
  8317 ;; Auto vars:     Size  Location     Type
  8318 ;;  grs             4   59[COMRAM] unsigned long 
  8319 ;;  rem             4   52[COMRAM] unsigned long 
  8320 ;;  new_exp         2   57[COMRAM] short 
  8321 ;;  aexp            1   64[COMRAM] unsigned char 
  8322 ;;  bexp            1   63[COMRAM] unsigned char 
  8323 ;;  sign            1   56[COMRAM] unsigned char 
  8324 ;; Return value:  Size  Location     Type
  8325 ;;                  4   40[COMRAM] unsigned char 
  8326 ;; Registers used:
  8327 ;;		wreg, status,2, status,0
  8328 ;; Tracked objects:
  8329 ;;		On entry : 0/0
  8330 ;;		On exit  : 0/0
  8331 ;;		Unchanged: 0/0
  8332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8333 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8334 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8335 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8336 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8337 ;;Total ram usage:       25 bytes
  8338 ;; Hardware stack levels used: 1
  8339 ;; Hardware stack levels required when called: 2
  8340 ;; This function calls:
  8341 ;;		Nothing
  8342 ;; This function is called by:
  8343 ;;		_PWM_set_Duty
  8344 ;;		_configure_mode
  8345 ;;		_main
  8346 ;;		_eusart_baudrate_configuration
  8347 ;; This function uses a non-reentrant model
  8348 ;;
  8349                           
  8350                           	psect	text42
  8351   002308                     __ptext42:
  8352                           	callstack 0
  8353   002308                     ___fldiv:
  8354                           	callstack 25
  8355   002308  502C               	movf	(___fldiv@b+3)^0,w,c
  8356   00230A  0B80               	andlw	128
  8357   00230C  6E39               	movwf	___fldiv@sign^0,c
  8358   00230E  502C               	movf	(___fldiv@b+3)^0,w,c
  8359   002310  242C               	addwf	(___fldiv@b+3)^0,w,c
  8360   002312  6E40               	movwf	___fldiv@bexp^0,c
  8361   002314  AE2B               	btfss	(___fldiv@b+2)^0,7,c
  8362   002316  EF8F  F011         	goto	u5701
  8363   00231A  EF91  F011         	goto	u5700
  8364   00231E                     u5701:
  8365   00231E  EF92  F011         	goto	l6518
  8366   002322                     u5700:
  8367   002322  8040               	bsf	___fldiv@bexp^0,0,c
  8368   002324                     l6518:
  8369   002324  5040               	movf	___fldiv@bexp^0,w,c
  8370   002326  B4D8               	btfsc	status,2,c
  8371   002328  EF98  F011         	goto	u5711
  8372   00232C  EF9A  F011         	goto	u5710
  8373   002330                     u5711:
  8374   002330  EFAF  F011         	goto	l6528
  8375   002334                     u5710:
  8376   002334  2840               	incf	___fldiv@bexp^0,w,c
  8377   002336  A4D8               	btfss	status,2,c
  8378   002338  EFA0  F011         	goto	u5721
  8379   00233C  EFA2  F011         	goto	u5720
  8380   002340                     u5721:
  8381   002340  EFAA  F011         	goto	l6524
  8382   002344                     u5720:
  8383   002344  0E00               	movlw	0
  8384   002346  6E29               	movwf	___fldiv@b^0,c
  8385   002348  0E00               	movlw	0
  8386   00234A  6E2A               	movwf	(___fldiv@b+1)^0,c
  8387   00234C  0E00               	movlw	0
  8388   00234E  6E2B               	movwf	(___fldiv@b+2)^0,c
  8389   002350  0E00               	movlw	0
  8390   002352  6E2C               	movwf	(___fldiv@b+3)^0,c
  8391   002354                     l6524:
  8392   002354  8E2B               	bsf	(___fldiv@b+2)^0,7,c
  8393   002356  0E00               	movlw	0
  8394   002358  6E2C               	movwf	(___fldiv@b+3)^0,c
  8395   00235A  EFB7  F011         	goto	l6530
  8396   00235E                     l6528:
  8397   00235E  0E00               	movlw	0
  8398   002360  6E29               	movwf	___fldiv@b^0,c
  8399   002362  0E00               	movlw	0
  8400   002364  6E2A               	movwf	(___fldiv@b+1)^0,c
  8401   002366  0E00               	movlw	0
  8402   002368  6E2B               	movwf	(___fldiv@b+2)^0,c
  8403   00236A  0E00               	movlw	0
  8404   00236C  6E2C               	movwf	(___fldiv@b+3)^0,c
  8405   00236E                     l6530:
  8406   00236E  5030               	movf	(___fldiv@a+3)^0,w,c
  8407   002370  0B80               	andlw	128
  8408   002372  1A39               	xorwf	___fldiv@sign^0,f,c
  8409   002374  5030               	movf	(___fldiv@a+3)^0,w,c
  8410   002376  2430               	addwf	(___fldiv@a+3)^0,w,c
  8411   002378  6E41               	movwf	___fldiv@aexp^0,c
  8412   00237A  AE2F               	btfss	(___fldiv@a+2)^0,7,c
  8413   00237C  EFC2  F011         	goto	u5731
  8414   002380  EFC4  F011         	goto	u5730
  8415   002384                     u5731:
  8416   002384  EFC5  F011         	goto	l6538
  8417   002388                     u5730:
  8418   002388  8041               	bsf	___fldiv@aexp^0,0,c
  8419   00238A                     l6538:
  8420   00238A  5041               	movf	___fldiv@aexp^0,w,c
  8421   00238C  B4D8               	btfsc	status,2,c
  8422   00238E  EFCB  F011         	goto	u5741
  8423   002392  EFCD  F011         	goto	u5740
  8424   002396                     u5741:
  8425   002396  EFE2  F011         	goto	l6548
  8426   00239A                     u5740:
  8427   00239A  2841               	incf	___fldiv@aexp^0,w,c
  8428   00239C  A4D8               	btfss	status,2,c
  8429   00239E  EFD3  F011         	goto	u5751
  8430   0023A2  EFD5  F011         	goto	u5750
  8431   0023A6                     u5751:
  8432   0023A6  EFDD  F011         	goto	l6544
  8433   0023AA                     u5750:
  8434   0023AA  0E00               	movlw	0
  8435   0023AC  6E2D               	movwf	___fldiv@a^0,c
  8436   0023AE  0E00               	movlw	0
  8437   0023B0  6E2E               	movwf	(___fldiv@a+1)^0,c
  8438   0023B2  0E00               	movlw	0
  8439   0023B4  6E2F               	movwf	(___fldiv@a+2)^0,c
  8440   0023B6  0E00               	movlw	0
  8441   0023B8  6E30               	movwf	(___fldiv@a+3)^0,c
  8442   0023BA                     l6544:
  8443   0023BA  8E2F               	bsf	(___fldiv@a+2)^0,7,c
  8444   0023BC  0E00               	movlw	0
  8445   0023BE  6E30               	movwf	(___fldiv@a+3)^0,c
  8446   0023C0  EFEA  F011         	goto	l6550
  8447   0023C4                     l6548:
  8448   0023C4  0E00               	movlw	0
  8449   0023C6  6E2D               	movwf	___fldiv@a^0,c
  8450   0023C8  0E00               	movlw	0
  8451   0023CA  6E2E               	movwf	(___fldiv@a+1)^0,c
  8452   0023CC  0E00               	movlw	0
  8453   0023CE  6E2F               	movwf	(___fldiv@a+2)^0,c
  8454   0023D0  0E00               	movlw	0
  8455   0023D2  6E30               	movwf	(___fldiv@a+3)^0,c
  8456   0023D4                     l6550:
  8457   0023D4  502D               	movf	___fldiv@a^0,w,c
  8458   0023D6  102E               	iorwf	(___fldiv@a+1)^0,w,c
  8459   0023D8  102F               	iorwf	(___fldiv@a+2)^0,w,c
  8460   0023DA  1030               	iorwf	(___fldiv@a+3)^0,w,c
  8461   0023DC  A4D8               	btfss	status,2,c
  8462   0023DE  EFF3  F011         	goto	u5761
  8463   0023E2  EFF5  F011         	goto	u5760
  8464   0023E6                     u5761:
  8465   0023E6  EF0D  F012         	goto	l6562
  8466   0023EA                     u5760:
  8467   0023EA  0E00               	movlw	0
  8468   0023EC  6E29               	movwf	___fldiv@b^0,c
  8469   0023EE  0E00               	movlw	0
  8470   0023F0  6E2A               	movwf	(___fldiv@b+1)^0,c
  8471   0023F2  0E00               	movlw	0
  8472   0023F4  6E2B               	movwf	(___fldiv@b+2)^0,c
  8473   0023F6  0E00               	movlw	0
  8474   0023F8  6E2C               	movwf	(___fldiv@b+3)^0,c
  8475   0023FA  0E80               	movlw	128
  8476   0023FC  122B               	iorwf	(___fldiv@b+2)^0,f,c
  8477   0023FE  0E7F               	movlw	127
  8478   002400  122C               	iorwf	(___fldiv@b+3)^0,f,c
  8479   002402                     l6556:
  8480   002402  5039               	movf	___fldiv@sign^0,w,c
  8481   002404  122C               	iorwf	(___fldiv@b+3)^0,f,c
  8482   002406  C029  F029         	movff	___fldiv@b,?___fldiv
  8483   00240A  C02A  F02A         	movff	___fldiv@b+1,?___fldiv+1
  8484   00240E  C02B  F02B         	movff	___fldiv@b+2,?___fldiv+2
  8485   002412  C02C  F02C         	movff	___fldiv@b+3,?___fldiv+3
  8486   002416  EF50  F013         	goto	l2380
  8487   00241A                     l6562:
  8488   00241A  5040               	movf	___fldiv@bexp^0,w,c
  8489   00241C  A4D8               	btfss	status,2,c
  8490   00241E  EF13  F012         	goto	u5771
  8491   002422  EF15  F012         	goto	u5770
  8492   002426                     u5771:
  8493   002426  EF1F  F012         	goto	l6570
  8494   00242A                     u5770:
  8495   00242A  0E00               	movlw	0
  8496   00242C  6E29               	movwf	?___fldiv^0,c
  8497   00242E  0E00               	movlw	0
  8498   002430  6E2A               	movwf	(?___fldiv+1)^0,c
  8499   002432  0E00               	movlw	0
  8500   002434  6E2B               	movwf	(?___fldiv+2)^0,c
  8501   002436  0E00               	movlw	0
  8502   002438  6E2C               	movwf	(?___fldiv+3)^0,c
  8503   00243A  EF50  F013         	goto	l2380
  8504   00243E                     l6570:
  8505   00243E  5041               	movf	___fldiv@aexp^0,w,c
  8506   002440  C040  F031         	movff	___fldiv@bexp,??___fldiv
  8507   002444  6A32               	clrf	(??___fldiv+1)^0,c
  8508   002446  5E31               	subwf	??___fldiv^0,f,c
  8509   002448  0E00               	movlw	0
  8510   00244A  5A32               	subwfb	(??___fldiv+1)^0,f,c
  8511   00244C  0E7F               	movlw	127
  8512   00244E  2431               	addwf	??___fldiv^0,w,c
  8513   002450  6E3A               	movwf	___fldiv@new_exp^0,c
  8514   002452  0E00               	movlw	0
  8515   002454  2032               	addwfc	(??___fldiv+1)^0,w,c
  8516   002456  6E3B               	movwf	(___fldiv@new_exp+1)^0,c
  8517   002458  C029  F035         	movff	___fldiv@b,___fldiv@rem
  8518   00245C  C02A  F036         	movff	___fldiv@b+1,___fldiv@rem+1
  8519   002460  C02B  F037         	movff	___fldiv@b+2,___fldiv@rem+2
  8520   002464  C02C  F038         	movff	___fldiv@b+3,___fldiv@rem+3
  8521   002468  0E00               	movlw	0
  8522   00246A  6E29               	movwf	___fldiv@b^0,c
  8523   00246C  0E00               	movlw	0
  8524   00246E  6E2A               	movwf	(___fldiv@b+1)^0,c
  8525   002470  0E00               	movlw	0
  8526   002472  6E2B               	movwf	(___fldiv@b+2)^0,c
  8527   002474  0E00               	movlw	0
  8528   002476  6E2C               	movwf	(___fldiv@b+3)^0,c
  8529   002478  0E00               	movlw	0
  8530   00247A  6E3C               	movwf	___fldiv@grs^0,c
  8531   00247C  0E00               	movlw	0
  8532   00247E  6E3D               	movwf	(___fldiv@grs+1)^0,c
  8533   002480  0E00               	movlw	0
  8534   002482  6E3E               	movwf	(___fldiv@grs+2)^0,c
  8535   002484  0E00               	movlw	0
  8536   002486  6E3F               	movwf	(___fldiv@grs+3)^0,c
  8537   002488  0E00               	movlw	0
  8538   00248A  6E41               	movwf	___fldiv@aexp^0,c
  8539   00248C  EF80  F012         	goto	l2382
  8540   002490                     l6580:
  8541   002490  5041               	movf	___fldiv@aexp^0,w,c
  8542   002492  B4D8               	btfsc	status,2,c
  8543   002494  EF4E  F012         	goto	u5781
  8544   002498  EF50  F012         	goto	u5780
  8545   00249C                     u5781:
  8546   00249C  EF67  F012         	goto	l6588
  8547   0024A0                     u5780:
  8548   0024A0  90D8               	bcf	status,0,c
  8549   0024A2  3635               	rlcf	___fldiv@rem^0,f,c
  8550   0024A4  3636               	rlcf	(___fldiv@rem+1)^0,f,c
  8551   0024A6  3637               	rlcf	(___fldiv@rem+2)^0,f,c
  8552   0024A8  3638               	rlcf	(___fldiv@rem+3)^0,f,c
  8553   0024AA  90D8               	bcf	status,0,c
  8554   0024AC  3629               	rlcf	___fldiv@b^0,f,c
  8555   0024AE  362A               	rlcf	(___fldiv@b+1)^0,f,c
  8556   0024B0  362B               	rlcf	(___fldiv@b+2)^0,f,c
  8557   0024B2  362C               	rlcf	(___fldiv@b+3)^0,f,c
  8558   0024B4  AE3F               	btfss	(___fldiv@grs+3)^0,7,c
  8559   0024B6  EF5F  F012         	goto	u5791
  8560   0024BA  EF61  F012         	goto	u5790
  8561   0024BE                     u5791:
  8562   0024BE  EF62  F012         	goto	l2385
  8563   0024C2                     u5790:
  8564   0024C2  8029               	bsf	___fldiv@b^0,0,c
  8565   0024C4                     l2385:
  8566   0024C4  90D8               	bcf	status,0,c
  8567   0024C6  363C               	rlcf	___fldiv@grs^0,f,c
  8568   0024C8  363D               	rlcf	(___fldiv@grs+1)^0,f,c
  8569   0024CA  363E               	rlcf	(___fldiv@grs+2)^0,f,c
  8570   0024CC  363F               	rlcf	(___fldiv@grs+3)^0,f,c
  8571   0024CE                     l6588:
  8572   0024CE  502D               	movf	___fldiv@a^0,w,c
  8573   0024D0  5C35               	subwf	___fldiv@rem^0,w,c
  8574   0024D2  502E               	movf	(___fldiv@a+1)^0,w,c
  8575   0024D4  5836               	subwfb	(___fldiv@rem+1)^0,w,c
  8576   0024D6  502F               	movf	(___fldiv@a+2)^0,w,c
  8577   0024D8  5837               	subwfb	(___fldiv@rem+2)^0,w,c
  8578   0024DA  5030               	movf	(___fldiv@a+3)^0,w,c
  8579   0024DC  5838               	subwfb	(___fldiv@rem+3)^0,w,c
  8580   0024DE  A0D8               	btfss	status,0,c
  8581   0024E0  EF74  F012         	goto	u5801
  8582   0024E4  EF76  F012         	goto	u5800
  8583   0024E8                     u5801:
  8584   0024E8  EF7F  F012         	goto	l6594
  8585   0024EC                     u5800:
  8586   0024EC  8C3F               	bsf	(___fldiv@grs+3)^0,6,c
  8587   0024EE  502D               	movf	___fldiv@a^0,w,c
  8588   0024F0  5E35               	subwf	___fldiv@rem^0,f,c
  8589   0024F2  502E               	movf	(___fldiv@a+1)^0,w,c
  8590   0024F4  5A36               	subwfb	(___fldiv@rem+1)^0,f,c
  8591   0024F6  502F               	movf	(___fldiv@a+2)^0,w,c
  8592   0024F8  5A37               	subwfb	(___fldiv@rem+2)^0,f,c
  8593   0024FA  5030               	movf	(___fldiv@a+3)^0,w,c
  8594   0024FC  5A38               	subwfb	(___fldiv@rem+3)^0,f,c
  8595   0024FE                     l6594:
  8596   0024FE  2A41               	incf	___fldiv@aexp^0,f,c
  8597   002500                     l2382:
  8598   002500  0E19               	movlw	25
  8599   002502  6441               	cpfsgt	___fldiv@aexp^0,c
  8600   002504  EF86  F012         	goto	u5811
  8601   002508  EF88  F012         	goto	u5810
  8602   00250C                     u5811:
  8603   00250C  EF48  F012         	goto	l6580
  8604   002510                     u5810:
  8605   002510  5035               	movf	___fldiv@rem^0,w,c
  8606   002512  1036               	iorwf	(___fldiv@rem+1)^0,w,c
  8607   002514  1037               	iorwf	(___fldiv@rem+2)^0,w,c
  8608   002516  1038               	iorwf	(___fldiv@rem+3)^0,w,c
  8609   002518  B4D8               	btfsc	status,2,c
  8610   00251A  EF91  F012         	goto	u5821
  8611   00251E  EF93  F012         	goto	u5820
  8612   002522                     u5821:
  8613   002522  EFAB  F012         	goto	l6606
  8614   002526                     u5820:
  8615   002526  803C               	bsf	___fldiv@grs^0,0,c
  8616   002528  EFAB  F012         	goto	l6606
  8617   00252C                     l6600:
  8618   00252C  90D8               	bcf	status,0,c
  8619   00252E  3629               	rlcf	___fldiv@b^0,f,c
  8620   002530  362A               	rlcf	(___fldiv@b+1)^0,f,c
  8621   002532  362B               	rlcf	(___fldiv@b+2)^0,f,c
  8622   002534  362C               	rlcf	(___fldiv@b+3)^0,f,c
  8623   002536  AE3F               	btfss	(___fldiv@grs+3)^0,7,c
  8624   002538  EFA0  F012         	goto	u5831
  8625   00253C  EFA2  F012         	goto	u5830
  8626   002540                     u5831:
  8627   002540  EFA3  F012         	goto	l2391
  8628   002544                     u5830:
  8629   002544  8029               	bsf	___fldiv@b^0,0,c
  8630   002546                     l2391:
  8631   002546  90D8               	bcf	status,0,c
  8632   002548  363C               	rlcf	___fldiv@grs^0,f,c
  8633   00254A  363D               	rlcf	(___fldiv@grs+1)^0,f,c
  8634   00254C  363E               	rlcf	(___fldiv@grs+2)^0,f,c
  8635   00254E  363F               	rlcf	(___fldiv@grs+3)^0,f,c
  8636   002550  063A               	decf	___fldiv@new_exp^0,f,c
  8637   002552  A0D8               	btfss	status,0,c
  8638   002554  063B               	decf	(___fldiv@new_exp+1)^0,f,c
  8639   002556                     l6606:
  8640   002556  AE2B               	btfss	(___fldiv@b+2)^0,7,c
  8641   002558  EFB0  F012         	goto	u5841
  8642   00255C  EFB2  F012         	goto	u5840
  8643   002560                     u5841:
  8644   002560  EF96  F012         	goto	l6600
  8645   002564                     u5840:
  8646   002564  0E00               	movlw	0
  8647   002566  6E41               	movwf	___fldiv@aexp^0,c
  8648   002568  AE3F               	btfss	(___fldiv@grs+3)^0,7,c
  8649   00256A  EFB9  F012         	goto	u5851
  8650   00256E  EFBB  F012         	goto	u5850
  8651   002572                     u5851:
  8652   002572  EFDF  F012         	goto	l2393
  8653   002576                     u5850:
  8654   002576  0EFF               	movlw	255
  8655   002578  143C               	andwf	___fldiv@grs^0,w,c
  8656   00257A  6E31               	movwf	??___fldiv^0,c
  8657   00257C  0EFF               	movlw	255
  8658   00257E  143D               	andwf	(___fldiv@grs+1)^0,w,c
  8659   002580  6E32               	movwf	(??___fldiv+1)^0,c
  8660   002582  0EFF               	movlw	255
  8661   002584  143E               	andwf	(___fldiv@grs+2)^0,w,c
  8662   002586  6E33               	movwf	(??___fldiv+2)^0,c
  8663   002588  0E7F               	movlw	127
  8664   00258A  143F               	andwf	(___fldiv@grs+3)^0,w,c
  8665   00258C  6E34               	movwf	(??___fldiv+3)^0,c
  8666   00258E  5031               	movf	??___fldiv^0,w,c
  8667   002590  1032               	iorwf	(??___fldiv+1)^0,w,c
  8668   002592  1033               	iorwf	(??___fldiv+2)^0,w,c
  8669   002594  1034               	iorwf	(??___fldiv+3)^0,w,c
  8670   002596  B4D8               	btfsc	status,2,c
  8671   002598  EFD0  F012         	goto	u5861
  8672   00259C  EFD2  F012         	goto	u5860
  8673   0025A0                     u5861:
  8674   0025A0  EFD6  F012         	goto	l2394
  8675   0025A4                     u5860:
  8676   0025A4                     l6614:
  8677   0025A4  0E01               	movlw	1
  8678   0025A6  6E41               	movwf	___fldiv@aexp^0,c
  8679   0025A8  EFDF  F012         	goto	l2393
  8680   0025AC                     l2394:
  8681   0025AC  A029               	btfss	___fldiv@b^0,0,c
  8682   0025AE  EFDB  F012         	goto	u5871
  8683   0025B2  EFDD  F012         	goto	u5870
  8684   0025B6                     u5871:
  8685   0025B6  EFDF  F012         	goto	l2393
  8686   0025BA                     u5870:
  8687   0025BA  EFD2  F012         	goto	l6614
  8688   0025BE                     l2393:
  8689   0025BE  5041               	movf	___fldiv@aexp^0,w,c
  8690   0025C0  B4D8               	btfsc	status,2,c
  8691   0025C2  EFE5  F012         	goto	u5881
  8692   0025C6  EFE7  F012         	goto	u5880
  8693   0025CA                     u5881:
  8694   0025CA  EF0B  F013         	goto	l6626
  8695   0025CE                     u5880:
  8696   0025CE  0E01               	movlw	1
  8697   0025D0  2629               	addwf	___fldiv@b^0,f,c
  8698   0025D2  0E00               	movlw	0
  8699   0025D4  222A               	addwfc	(___fldiv@b+1)^0,f,c
  8700   0025D6  222B               	addwfc	(___fldiv@b+2)^0,f,c
  8701   0025D8  222C               	addwfc	(___fldiv@b+3)^0,f,c
  8702   0025DA  A02C               	btfss	(___fldiv@b+3)^0,0,c
  8703   0025DC  EFF2  F012         	goto	u5891
  8704   0025E0  EFF4  F012         	goto	u5890
  8705   0025E4                     u5891:
  8706   0025E4  EF0B  F013         	goto	l6626
  8707   0025E8                     u5890:
  8708   0025E8  C029  F031         	movff	___fldiv@b,??___fldiv
  8709   0025EC  C02A  F032         	movff	___fldiv@b+1,??___fldiv+1
  8710   0025F0  C02B  F033         	movff	___fldiv@b+2,??___fldiv+2
  8711   0025F4  C02C  F034         	movff	___fldiv@b+3,??___fldiv+3
  8712   0025F8  3434               	rlcf	(??___fldiv+3)^0,w,c
  8713   0025FA  3234               	rrcf	(??___fldiv+3)^0,f,c
  8714   0025FC  3233               	rrcf	(??___fldiv+2)^0,f,c
  8715   0025FE  3232               	rrcf	(??___fldiv+1)^0,f,c
  8716   002600  3231               	rrcf	??___fldiv^0,f,c
  8717   002602  C031  F029         	movff	??___fldiv,___fldiv@b
  8718   002606  C032  F02A         	movff	??___fldiv+1,___fldiv@b+1
  8719   00260A  C033  F02B         	movff	??___fldiv+2,___fldiv@b+2
  8720   00260E  C034  F02C         	movff	??___fldiv+3,___fldiv@b+3
  8721   002612  4A3A               	infsnz	___fldiv@new_exp^0,f,c
  8722   002614  2A3B               	incf	(___fldiv@new_exp+1)^0,f,c
  8723   002616                     l6626:
  8724   002616  BE3B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8725   002618  EF16  F013         	goto	u5901
  8726   00261C  503B               	movf	(___fldiv@new_exp+1)^0,w,c
  8727   00261E  E108               	bnz	u5900
  8728   002620  283A               	incf	___fldiv@new_exp^0,w,c
  8729   002622  A0D8               	btfss	status,0,c
  8730   002624  EF16  F013         	goto	u5901
  8731   002628  EF18  F013         	goto	u5900
  8732   00262C                     u5901:
  8733   00262C  EF23  F013         	goto	l6630
  8734   002630                     u5900:
  8735   002630  0E00               	movlw	0
  8736   002632  6E3B               	movwf	(___fldiv@new_exp+1)^0,c
  8737   002634  683A               	setf	___fldiv@new_exp^0,c
  8738   002636  0E00               	movlw	0
  8739   002638  6E29               	movwf	___fldiv@b^0,c
  8740   00263A  0E00               	movlw	0
  8741   00263C  6E2A               	movwf	(___fldiv@b+1)^0,c
  8742   00263E  0E00               	movlw	0
  8743   002640  6E2B               	movwf	(___fldiv@b+2)^0,c
  8744   002642  0E00               	movlw	0
  8745   002644  6E2C               	movwf	(___fldiv@b+3)^0,c
  8746   002646                     l6630:
  8747   002646  BE3B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8748   002648  EF30  F013         	goto	u5910
  8749   00264C  503B               	movf	(___fldiv@new_exp+1)^0,w,c
  8750   00264E  E106               	bnz	u5911
  8751   002650  043A               	decf	___fldiv@new_exp^0,w,c
  8752   002652  B0D8               	btfsc	status,0,c
  8753   002654  EF2E  F013         	goto	u5911
  8754   002658  EF30  F013         	goto	u5910
  8755   00265C                     u5911:
  8756   00265C  EF3E  F013         	goto	l6634
  8757   002660                     u5910:
  8758   002660  0E00               	movlw	0
  8759   002662  6E3B               	movwf	(___fldiv@new_exp+1)^0,c
  8760   002664  0E00               	movlw	0
  8761   002666  6E3A               	movwf	___fldiv@new_exp^0,c
  8762   002668  0E00               	movlw	0
  8763   00266A  6E29               	movwf	___fldiv@b^0,c
  8764   00266C  0E00               	movlw	0
  8765   00266E  6E2A               	movwf	(___fldiv@b+1)^0,c
  8766   002670  0E00               	movlw	0
  8767   002672  6E2B               	movwf	(___fldiv@b+2)^0,c
  8768   002674  0E00               	movlw	0
  8769   002676  6E2C               	movwf	(___fldiv@b+3)^0,c
  8770   002678  0E00               	movlw	0
  8771   00267A  6E39               	movwf	___fldiv@sign^0,c
  8772   00267C                     l6634:
  8773   00267C  C03A  F040         	movff	___fldiv@new_exp,___fldiv@bexp
  8774   002680  A040               	btfss	___fldiv@bexp^0,0,c
  8775   002682  EF45  F013         	goto	u5921
  8776   002686  EF47  F013         	goto	u5920
  8777   00268A                     u5921:
  8778   00268A  EF4A  F013         	goto	l6640
  8779   00268E                     u5920:
  8780   00268E  8E2B               	bsf	(___fldiv@b+2)^0,7,c
  8781   002690  EF4B  F013         	goto	l6642
  8782   002694                     l6640:
  8783   002694  9E2B               	bcf	(___fldiv@b+2)^0,7,c
  8784   002696                     l6642:
  8785   002696  90D8               	bcf	status,0,c
  8786   002698  3040               	rrcf	___fldiv@bexp^0,w,c
  8787   00269A  6E2C               	movwf	(___fldiv@b+3)^0,c
  8788   00269C  EF01  F012         	goto	l6556
  8789   0026A0                     l2380:
  8790   0026A0  0012               	return		;funcret
  8791   0026A2                     __end_of___fldiv:
  8792                           	callstack 0
  8793                           
  8794 ;; *************** function _ADC_GetConversion_Blocking *****************
  8795 ;; Defined at:
  8796 ;;		line 139 in file "MCAL_Layer/ADC/hal_adc.c"
  8797 ;; Parameters:    Size  Location     Type
  8798 ;;  adc_obj         2    9[COMRAM] PTR const struct .
  8799 ;;		 -> temp_sens(7), 
  8800 ;;  channel         1   11[COMRAM] enum E3042
  8801 ;;  conversion_r    1   12[COMRAM] PTR unsigned short 
  8802 ;;		 -> sens_res(2), 
  8803 ;; Auto vars:     Size  Location     Type
  8804 ;;  ret             1   13[COMRAM] unsigned char 
  8805 ;; Return value:  Size  Location     Type
  8806 ;;                  1    wreg      unsigned char 
  8807 ;; Registers used:
  8808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8809 ;; Tracked objects:
  8810 ;;		On entry : 0/0
  8811 ;;		On exit  : 0/0
  8812 ;;		Unchanged: 0/0
  8813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8814 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8815 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8817 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8818 ;;Total ram usage:        5 bytes
  8819 ;; Hardware stack levels used: 1
  8820 ;; Hardware stack levels required when called: 4
  8821 ;; This function calls:
  8822 ;;		_Adc_Get_conversion_result
  8823 ;;		_Adc_select_Channel
  8824 ;;		_Adc_start_conversion
  8825 ;; This function is called by:
  8826 ;;		_main
  8827 ;; This function uses a non-reentrant model
  8828 ;;
  8829                           
  8830                           	psect	text43
  8831   003BE8                     __ptext43:
  8832                           	callstack 0
  8833   003BE8                     _ADC_GetConversion_Blocking:
  8834                           	callstack 26
  8835   003BE8                     
  8836                           ;MCAL_Layer/ADC/hal_adc.c: 142:     if((((void*)0) == adc_obj)&&(((void*)0) ==conversion
      +                          _result))
  8837   003BE8  500A               	movf	ADC_GetConversion_Blocking@adc_obj^0,w,c
  8838   003BEA  100B               	iorwf	(ADC_GetConversion_Blocking@adc_obj+1)^0,w,c
  8839   003BEC  A4D8               	btfss	status,2,c
  8840   003BEE  EFFB  F01D         	goto	u9281
  8841   003BF2  EFFD  F01D         	goto	u9280
  8842   003BF6                     u9281:
  8843   003BF6  EF09  F01E         	goto	l9358
  8844   003BFA                     u9280:
  8845   003BFA  500D               	movf	ADC_GetConversion_Blocking@conversion_result^0,w,c
  8846   003BFC  A4D8               	btfss	status,2,c
  8847   003BFE  EF03  F01E         	goto	u9291
  8848   003C02  EF05  F01E         	goto	u9290
  8849   003C06                     u9291:
  8850   003C06  EF09  F01E         	goto	l9358
  8851   003C0A                     u9290:
  8852   003C0A                     
  8853                           ;MCAL_Layer/ADC/hal_adc.c: 143:     {;MCAL_Layer/ADC/hal_adc.c: 144:         ret =(Std_R
      +                          eturnType)0x00;
  8854   003C0A  0E00               	movlw	0
  8855   003C0C  6E0E               	movwf	ADC_GetConversion_Blocking@ret^0,c
  8856                           
  8857                           ;MCAL_Layer/ADC/hal_adc.c: 145:     }
  8858   003C0E  EF2A  F01E         	goto	l9364
  8859   003C12                     l9358:
  8860                           
  8861                           ;MCAL_Layer/ADC/hal_adc.c: 148:     ret = Adc_select_Channel(adc_obj,channel);
  8862   003C12  C00A  F005         	movff	ADC_GetConversion_Blocking@adc_obj,Adc_select_Channel@adc_obj
  8863   003C16  C00B  F006         	movff	ADC_GetConversion_Blocking@adc_obj+1,Adc_select_Channel@adc_obj+1
  8864   003C1A  C00C  F007         	movff	ADC_GetConversion_Blocking@channel,Adc_select_Channel@channal
  8865   003C1E  EC2A  F020         	call	_Adc_select_Channel	;wreg free
  8866   003C22  6E0E               	movwf	ADC_GetConversion_Blocking@ret^0,c
  8867                           
  8868                           ;MCAL_Layer/ADC/hal_adc.c: 149:     ret =Adc_start_conversion(adc_obj);
  8869   003C24  C00A  F002         	movff	ADC_GetConversion_Blocking@adc_obj,Adc_start_conversion@adc_obj
  8870   003C28  C00B  F003         	movff	ADC_GetConversion_Blocking@adc_obj+1,Adc_start_conversion@adc_obj+1
  8871   003C2C  ECF7  F020         	call	_Adc_start_conversion	;wreg free
  8872   003C30  6E0E               	movwf	ADC_GetConversion_Blocking@ret^0,c
  8873   003C32                     l398:
  8874   003C32  B2C2               	btfsc	194,1,c	;volatile
  8875   003C34  EF1E  F01E         	goto	u9301
  8876   003C38  EF20  F01E         	goto	u9300
  8877   003C3C                     u9301:
  8878   003C3C  EF19  F01E         	goto	l398
  8879   003C40                     u9300:
  8880   003C40  C00A  F002         	movff	ADC_GetConversion_Blocking@adc_obj,Adc_Get_conversion_result@adc_obj
  8881   003C44  C00B  F003         	movff	ADC_GetConversion_Blocking@adc_obj+1,Adc_Get_conversion_result@adc_obj+1
  8882   003C48  C00D  F004         	movff	ADC_GetConversion_Blocking@conversion_result,Adc_Get_conversion_result@conversion
      +                          _result
  8883   003C4C  EC08  F01B         	call	_Adc_Get_conversion_result	;wreg free
  8884   003C50                     
  8885                           ;MCAL_Layer/ADC/hal_adc.c: 153:     ret = (Std_ReturnType)0x01 ;
  8886   003C50  0E01               	movlw	1
  8887   003C52  6E0E               	movwf	ADC_GetConversion_Blocking@ret^0,c
  8888   003C54                     l9364:
  8889                           
  8890                           ;MCAL_Layer/ADC/hal_adc.c: 155:     return ret;
  8891   003C54  500E               	movf	ADC_GetConversion_Blocking@ret^0,w,c
  8892   003C56  0012               	return		;funcret
  8893   003C58                     __end_of_ADC_GetConversion_Blocking:
  8894                           	callstack 0
  8895                           
  8896 ;; *************** function _Adc_start_conversion *****************
  8897 ;; Defined at:
  8898 ;;		line 93 in file "MCAL_Layer/ADC/hal_adc.c"
  8899 ;; Parameters:    Size  Location     Type
  8900 ;;  adc_obj         2    1[COMRAM] PTR const struct .
  8901 ;;		 -> temp_sens(7), 
  8902 ;; Auto vars:     Size  Location     Type
  8903 ;;  ret             1    3[COMRAM] unsigned char 
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  1    wreg      unsigned char 
  8906 ;; Registers used:
  8907 ;;		wreg, status,2, status,0
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/0
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8913 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8916 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8917 ;;Total ram usage:        3 bytes
  8918 ;; Hardware stack levels used: 1
  8919 ;; Hardware stack levels required when called: 2
  8920 ;; This function calls:
  8921 ;;		Nothing
  8922 ;; This function is called by:
  8923 ;;		_ADC_GetConversion_Blocking
  8924 ;;		_main
  8925 ;;		_ADC_Conversion_interrupt
  8926 ;; This function uses a non-reentrant model
  8927 ;;
  8928                           
  8929                           	psect	text44
  8930   0041EE                     __ptext44:
  8931                           	callstack 0
  8932   0041EE                     _Adc_start_conversion:
  8933                           	callstack 28
  8934   0041EE                     
  8935                           ;MCAL_Layer/ADC/hal_adc.c: 95:     if((((void*)0) == adc_obj))
  8936   0041EE  5002               	movf	Adc_start_conversion@adc_obj^0,w,c
  8937   0041F0  1003               	iorwf	(Adc_start_conversion@adc_obj+1)^0,w,c
  8938   0041F2  A4D8               	btfss	status,2,c
  8939   0041F4  EFFE  F020         	goto	u9191
  8940   0041F8  EF00  F021         	goto	u9190
  8941   0041FC                     u9191:
  8942   0041FC  EF04  F021         	goto	l378
  8943   004200                     u9190:
  8944   004200                     
  8945                           ;MCAL_Layer/ADC/hal_adc.c: 96:     {;MCAL_Layer/ADC/hal_adc.c: 97:           ret = (Std_
      +                          ReturnType)0x00;
  8946   004200  0E00               	movlw	0
  8947   004202  6E04               	movwf	Adc_start_conversion@ret^0,c
  8948                           
  8949                           ;MCAL_Layer/ADC/hal_adc.c: 98:     }
  8950   004204  EF07  F021         	goto	l379
  8951   004208                     l378:
  8952                           
  8953                           ;MCAL_Layer/ADC/hal_adc.c: 101:     (ADCON0bits.GODONE = 1);
  8954   004208  82C2               	bsf	194,1,c	;volatile
  8955   00420A                     
  8956                           ;MCAL_Layer/ADC/hal_adc.c: 103:     ret = (Std_ReturnType)0x01 ;
  8957   00420A  0E01               	movlw	1
  8958   00420C  6E04               	movwf	Adc_start_conversion@ret^0,c
  8959   00420E                     l379:
  8960                           
  8961                           ;MCAL_Layer/ADC/hal_adc.c: 105:     return ret;
  8962   00420E  5004               	movf	Adc_start_conversion@ret^0,w,c
  8963   004210  0012               	return		;funcret
  8964   004212                     __end_of_Adc_start_conversion:
  8965                           	callstack 0
  8966                           
  8967 ;; *************** function _Adc_select_Channel *****************
  8968 ;; Defined at:
  8969 ;;		line 80 in file "MCAL_Layer/ADC/hal_adc.c"
  8970 ;; Parameters:    Size  Location     Type
  8971 ;;  adc_obj         2    4[COMRAM] PTR const struct .
  8972 ;;		 -> temp_sens(7), 
  8973 ;;  channal         1    6[COMRAM] enum E3042
  8974 ;; Auto vars:     Size  Location     Type
  8975 ;;  ret             1    8[COMRAM] unsigned char 
  8976 ;; Return value:  Size  Location     Type
  8977 ;;                  1    wreg      unsigned char 
  8978 ;; Registers used:
  8979 ;;		wreg, status,2, status,0, cstack
  8980 ;; Tracked objects:
  8981 ;;		On entry : 0/0
  8982 ;;		On exit  : 0/0
  8983 ;;		Unchanged: 0/0
  8984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8985 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8987 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8988 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8989 ;;Total ram usage:        5 bytes
  8990 ;; Hardware stack levels used: 1
  8991 ;; Hardware stack levels required when called: 3
  8992 ;; This function calls:
  8993 ;;		_adc_configure_pin
  8994 ;; This function is called by:
  8995 ;;		_ADC_GetConversion_Blocking
  8996 ;;		_ADC_Conversion_interrupt
  8997 ;; This function uses a non-reentrant model
  8998 ;;
  8999                           
  9000                           	psect	text45
  9001   004054                     __ptext45:
  9002                           	callstack 0
  9003   004054                     _Adc_select_Channel:
  9004                           	callstack 26
  9005   004054                     
  9006                           ;MCAL_Layer/ADC/hal_adc.c: 82:     if((((void*)0) == adc_obj))
  9007   004054  5005               	movf	Adc_select_Channel@adc_obj^0,w,c
  9008   004056  1006               	iorwf	(Adc_select_Channel@adc_obj+1)^0,w,c
  9009   004058  A4D8               	btfss	status,2,c
  9010   00405A  EF31  F020         	goto	u9181
  9011   00405E  EF33  F020         	goto	u9180
  9012   004062                     u9181:
  9013   004062  EF37  F020         	goto	l9288
  9014   004066                     u9180:
  9015   004066                     
  9016                           ;MCAL_Layer/ADC/hal_adc.c: 83:     {;MCAL_Layer/ADC/hal_adc.c: 84:         ret = (Std_Re
      +                          turnType)0x00;
  9017   004066  0E00               	movlw	0
  9018   004068  6E09               	movwf	Adc_select_Channel@ret^0,c
  9019                           
  9020                           ;MCAL_Layer/ADC/hal_adc.c: 85:     }
  9021   00406A  EF45  F020         	goto	l9294
  9022   00406E                     l9288:
  9023                           
  9024                           ;MCAL_Layer/ADC/hal_adc.c: 87:         ADCON0bits.CHS = channal ;
  9025   00406E  C007  F008         	movff	Adc_select_Channel@channal,??_Adc_select_Channel
  9026   004072  4608               	rlncf	??_Adc_select_Channel^0,f,c
  9027   004074  4608               	rlncf	??_Adc_select_Channel^0,f,c
  9028   004076  50C2               	movf	194,w,c	;volatile
  9029   004078  1808               	xorwf	??_Adc_select_Channel^0,w,c
  9030   00407A  0BC3               	andlw	-61
  9031   00407C  1808               	xorwf	??_Adc_select_Channel^0,w,c
  9032   00407E  6EC2               	movwf	194,c	;volatile
  9033   004080                     
  9034                           ;MCAL_Layer/ADC/hal_adc.c: 88:         adc_configure_pin(channal);
  9035   004080  5007               	movf	Adc_select_Channel@channal^0,w,c
  9036   004082  EC3A  F01A         	call	_adc_configure_pin
  9037   004086                     
  9038                           ;MCAL_Layer/ADC/hal_adc.c: 89:          ret = (Std_ReturnType)0x01 ;
  9039   004086  0E01               	movlw	1
  9040   004088  6E09               	movwf	Adc_select_Channel@ret^0,c
  9041   00408A                     l9294:
  9042                           
  9043                           ;MCAL_Layer/ADC/hal_adc.c: 91:     return ret;
  9044   00408A  5009               	movf	Adc_select_Channel@ret^0,w,c
  9045   00408C  0012               	return		;funcret
  9046   00408E                     __end_of_Adc_select_Channel:
  9047                           	callstack 0
  9048                           
  9049 ;; *************** function _adc_configure_pin *****************
  9050 ;; Defined at:
  9051 ;;		line 215 in file "MCAL_Layer/ADC/hal_adc.c"
  9052 ;; Parameters:    Size  Location     Type
  9053 ;;  adc_obj         1    wreg     const enum E3042
  9054 ;; Auto vars:     Size  Location     Type
  9055 ;;  adc_obj         1    3[COMRAM] const enum E3042
  9056 ;;  ret             1    0        unsigned char 
  9057 ;; Return value:  Size  Location     Type
  9058 ;;                  1    wreg      unsigned char 
  9059 ;; Registers used:
  9060 ;;		wreg, status,2, status,0
  9061 ;; Tracked objects:
  9062 ;;		On entry : 0/0
  9063 ;;		On exit  : 0/0
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9067 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9068 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9069 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9070 ;;Total ram usage:        3 bytes
  9071 ;; Hardware stack levels used: 1
  9072 ;; Hardware stack levels required when called: 2
  9073 ;; This function calls:
  9074 ;;		Nothing
  9075 ;; This function is called by:
  9076 ;;		_ADC_INIT
  9077 ;;		_Adc_select_Channel
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081                           	psect	text46
  9082   003474                     __ptext46:
  9083                           	callstack 0
  9084   003474                     _adc_configure_pin:
  9085                           	callstack 26
  9086                           
  9087                           ;incstack = 0
  9088                           ;adc_configure_pin@adc_obj stored from wreg
  9089   003474  6E04               	movwf	adc_configure_pin@adc_obj^0,c
  9090   003476                     
  9091                           ;MCAL_Layer/ADC/hal_adc.c: 218:         switch(adc_obj){
  9092   003476  EF64  F01A         	goto	l6972
  9093   00347A                     l6944:
  9094   00347A  8092               	bsf	146,0,c	;volatile
  9095   00347C  EFA5  F01A         	goto	l448
  9096   003480                     l6946:
  9097   003480  8292               	bsf	146,1,c	;volatile
  9098   003482  EFA5  F01A         	goto	l448
  9099   003486                     l6948:
  9100   003486  8492               	bsf	146,2,c	;volatile
  9101   003488  EFA5  F01A         	goto	l448
  9102   00348C                     l6950:
  9103   00348C  8692               	bsf	146,3,c	;volatile
  9104   00348E  EFA5  F01A         	goto	l448
  9105   003492                     l6952:
  9106   003492  8A92               	bsf	146,5,c	;volatile
  9107   003494  EFA5  F01A         	goto	l448
  9108   003498                     l6954:
  9109   003498  8096               	bsf	150,0,c	;volatile
  9110   00349A  EFA5  F01A         	goto	l448
  9111   00349E                     l6956:
  9112   00349E  8296               	bsf	150,1,c	;volatile
  9113   0034A0  EFA5  F01A         	goto	l448
  9114   0034A4                     l6958:
  9115   0034A4  8496               	bsf	150,2,c	;volatile
  9116   0034A6  EFA5  F01A         	goto	l448
  9117   0034AA                     l6960:
  9118   0034AA  8493               	bsf	147,2,c	;volatile
  9119   0034AC  EFA5  F01A         	goto	l448
  9120   0034B0                     l6962:
  9121   0034B0  8693               	bsf	147,3,c	;volatile
  9122   0034B2  EFA5  F01A         	goto	l448
  9123   0034B6                     l6964:
  9124   0034B6  8293               	bsf	147,1,c	;volatile
  9125   0034B8  EFA5  F01A         	goto	l448
  9126   0034BC                     l6966:
  9127   0034BC  8893               	bsf	147,4,c	;volatile
  9128   0034BE  EFA5  F01A         	goto	l448
  9129   0034C2                     l6968:
  9130   0034C2  8093               	bsf	147,0,c	;volatile
  9131   0034C4  EFA5  F01A         	goto	l448
  9132   0034C8                     l6972:
  9133   0034C8  5004               	movf	adc_configure_pin@adc_obj^0,w,c
  9134   0034CA  6E02               	movwf	??_adc_configure_pin^0,c
  9135   0034CC  6A03               	clrf	(??_adc_configure_pin+1)^0,c
  9136                           
  9137                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9138                           ; Switch size 1, requested type "simple"
  9139                           ; Number of cases is 1, Range of values is 0 to 0
  9140                           ; switch strategies available:
  9141                           ; Name         Instructions Cycles
  9142                           ; simple_byte            4     3 (average)
  9143                           ;	Chosen strategy is simple_byte
  9144   0034CE  5003               	movf	(??_adc_configure_pin+1)^0,w,c
  9145   0034D0  0A00               	xorlw	0	; case 0
  9146   0034D2  B4D8               	btfsc	status,2,c
  9147   0034D4  EF6E  F01A         	goto	l9632
  9148   0034D8  EFA5  F01A         	goto	l448
  9149   0034DC                     l9632:
  9150                           
  9151                           ; Switch size 1, requested type "simple"
  9152                           ; Number of cases is 13, Range of values is 0 to 12
  9153                           ; switch strategies available:
  9154                           ; Name         Instructions Cycles
  9155                           ; simple_byte           40    21 (average)
  9156                           ;	Chosen strategy is simple_byte
  9157   0034DC  5002               	movf	??_adc_configure_pin^0,w,c
  9158   0034DE  0A00               	xorlw	0	; case 0
  9159   0034E0  B4D8               	btfsc	status,2,c
  9160   0034E2  EF3D  F01A         	goto	l6944
  9161   0034E6  0A01               	xorlw	1	; case 1
  9162   0034E8  B4D8               	btfsc	status,2,c
  9163   0034EA  EF40  F01A         	goto	l6946
  9164   0034EE  0A03               	xorlw	3	; case 2
  9165   0034F0  B4D8               	btfsc	status,2,c
  9166   0034F2  EF43  F01A         	goto	l6948
  9167   0034F6  0A01               	xorlw	1	; case 3
  9168   0034F8  B4D8               	btfsc	status,2,c
  9169   0034FA  EF46  F01A         	goto	l6950
  9170   0034FE  0A07               	xorlw	7	; case 4
  9171   003500  B4D8               	btfsc	status,2,c
  9172   003502  EF49  F01A         	goto	l6952
  9173   003506  0A01               	xorlw	1	; case 5
  9174   003508  B4D8               	btfsc	status,2,c
  9175   00350A  EF4C  F01A         	goto	l6954
  9176   00350E  0A03               	xorlw	3	; case 6
  9177   003510  B4D8               	btfsc	status,2,c
  9178   003512  EF4F  F01A         	goto	l6956
  9179   003516  0A01               	xorlw	1	; case 7
  9180   003518  B4D8               	btfsc	status,2,c
  9181   00351A  EF52  F01A         	goto	l6958
  9182   00351E  0A0F               	xorlw	15	; case 8
  9183   003520  B4D8               	btfsc	status,2,c
  9184   003522  EF55  F01A         	goto	l6960
  9185   003526  0A01               	xorlw	1	; case 9
  9186   003528  B4D8               	btfsc	status,2,c
  9187   00352A  EF58  F01A         	goto	l6962
  9188   00352E  0A03               	xorlw	3	; case 10
  9189   003530  B4D8               	btfsc	status,2,c
  9190   003532  EF5B  F01A         	goto	l6964
  9191   003536  0A01               	xorlw	1	; case 11
  9192   003538  B4D8               	btfsc	status,2,c
  9193   00353A  EF5E  F01A         	goto	l6966
  9194   00353E  0A07               	xorlw	7	; case 12
  9195   003540  B4D8               	btfsc	status,2,c
  9196   003542  EF61  F01A         	goto	l6968
  9197   003546  EFA5  F01A         	goto	l448
  9198   00354A                     l448:
  9199   00354A  0012               	return		;funcret
  9200   00354C                     __end_of_adc_configure_pin:
  9201                           	callstack 0
  9202                           
  9203 ;; *************** function _Adc_Get_conversion_result *****************
  9204 ;; Defined at:
  9205 ;;		line 120 in file "MCAL_Layer/ADC/hal_adc.c"
  9206 ;; Parameters:    Size  Location     Type
  9207 ;;  adc_obj         2    1[COMRAM] PTR const struct .
  9208 ;;		 -> temp_sens(7), 
  9209 ;;  conversion_r    1    3[COMRAM] PTR unsigned short 
  9210 ;;		 -> sens_res(2), 
  9211 ;; Auto vars:     Size  Location     Type
  9212 ;;  ret             1    7[COMRAM] unsigned char 
  9213 ;; Return value:  Size  Location     Type
  9214 ;;                  1    wreg      unsigned char 
  9215 ;; Registers used:
  9216 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9217 ;; Tracked objects:
  9218 ;;		On entry : 0/0
  9219 ;;		On exit  : 0/0
  9220 ;;		Unchanged: 0/0
  9221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9222 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9223 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9224 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9225 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9226 ;;Total ram usage:        7 bytes
  9227 ;; Hardware stack levels used: 1
  9228 ;; Hardware stack levels required when called: 2
  9229 ;; This function calls:
  9230 ;;		Nothing
  9231 ;; This function is called by:
  9232 ;;		_ADC_GetConversion_Blocking
  9233 ;; This function uses a non-reentrant model
  9234 ;;
  9235                           
  9236                           	psect	text47
  9237   003610                     __ptext47:
  9238                           	callstack 0
  9239   003610                     _Adc_Get_conversion_result:
  9240                           	callstack 27
  9241   003610                     
  9242                           ;MCAL_Layer/ADC/hal_adc.c: 122:     if((((void*)0) == adc_obj)&&(((void*)0) ==conversion
      +                          _result))
  9243   003610  5002               	movf	Adc_Get_conversion_result@adc_obj^0,w,c
  9244   003612  1003               	iorwf	(Adc_Get_conversion_result@adc_obj+1)^0,w,c
  9245   003614  A4D8               	btfss	status,2,c
  9246   003616  EF0F  F01B         	goto	u9201
  9247   00361A  EF11  F01B         	goto	u9200
  9248   00361E                     u9201:
  9249   00361E  EF1D  F01B         	goto	l9316
  9250   003622                     u9200:
  9251   003622  5004               	movf	Adc_Get_conversion_result@conversion_result^0,w,c
  9252   003624  A4D8               	btfss	status,2,c
  9253   003626  EF17  F01B         	goto	u9211
  9254   00362A  EF19  F01B         	goto	u9210
  9255   00362E                     u9211:
  9256   00362E  EF1D  F01B         	goto	l9316
  9257   003632                     u9210:
  9258   003632                     
  9259                           ;MCAL_Layer/ADC/hal_adc.c: 123:     {;MCAL_Layer/ADC/hal_adc.c: 124:         ret =(Std_R
      +                          eturnType)0x00 ;
  9260   003632  0E00               	movlw	0
  9261   003634  6E08               	movwf	Adc_Get_conversion_result@ret^0,c
  9262                           
  9263                           ;MCAL_Layer/ADC/hal_adc.c: 125:     }
  9264   003636  EF65  F01B         	goto	l9326
  9265   00363A                     l9316:
  9266                           
  9267                           ;MCAL_Layer/ADC/hal_adc.c: 127:         if(( 0x01) == adc_obj->result_format){
  9268   00363A  EE20 F006          	lfsr	2,6
  9269   00363E  5002               	movf	Adc_Get_conversion_result@adc_obj^0,w,c
  9270   003640  26D9               	addwf	fsr2l,f,c
  9271   003642  5003               	movf	(Adc_Get_conversion_result@adc_obj+1)^0,w,c
  9272   003644  22DA               	addwfc	fsr2h,f,c
  9273   003646  A0DF               	btfss	indf2,0,c
  9274   003648  EF28  F01B         	goto	u9221
  9275   00364C  EF2A  F01B         	goto	u9220
  9276   003650                     u9221:
  9277   003650  EF3D  F01B         	goto	l9320
  9278   003654                     u9220:
  9279   003654                     
  9280                           ;MCAL_Layer/ADC/hal_adc.c: 128:            *conversion_result = (uint16)((ADRESH << 8) +
      +                           ADRESL);
  9281   003654  50C3               	movf	195,w,c	;volatile
  9282   003656  CFC4 F005          	movff	4036,??_Adc_Get_conversion_result	;volatile
  9283   00365A  6A06               	clrf	(??_Adc_Get_conversion_result+1)^0,c
  9284   00365C  C005  F006         	movff	??_Adc_Get_conversion_result,??_Adc_Get_conversion_result+1
  9285   003660  6A05               	clrf	??_Adc_Get_conversion_result^0,c
  9286   003662  2605               	addwf	??_Adc_Get_conversion_result^0,f,c
  9287   003664  0E00               	movlw	0
  9288   003666  2206               	addwfc	(??_Adc_Get_conversion_result+1)^0,f,c
  9289   003668  5004               	movf	Adc_Get_conversion_result@conversion_result^0,w,c
  9290   00366A  6ED9               	movwf	fsr2l,c
  9291   00366C  6ADA               	clrf	fsr2h,c
  9292   00366E  C005  FFDE         	movff	??_Adc_Get_conversion_result,postinc2
  9293   003672  C006  FFDD         	movff	??_Adc_Get_conversion_result+1,postdec2
  9294                           
  9295                           ;MCAL_Layer/ADC/hal_adc.c: 130:         }
  9296   003676  EF63  F01B         	goto	l9324
  9297   00367A                     l9320:
  9298   00367A  EE20 F006          	lfsr	2,6
  9299   00367E  5002               	movf	Adc_Get_conversion_result@adc_obj^0,w,c
  9300   003680  26D9               	addwf	fsr2l,f,c
  9301   003682  5003               	movf	(Adc_Get_conversion_result@adc_obj+1)^0,w,c
  9302   003684  22DA               	addwfc	fsr2h,f,c
  9303   003686  B0DF               	btfsc	indf2,0,c
  9304   003688  EF48  F01B         	goto	u9231
  9305   00368C  EF4A  F01B         	goto	u9230
  9306   003690                     u9231:
  9307   003690  EF63  F01B         	goto	l9324
  9308   003694                     u9230:
  9309   003694                     
  9310                           ;MCAL_Layer/ADC/hal_adc.c: 132:         *conversion_result =(uint16)(((ADRESH << 8) + AD
      +                          RESL) >> 6) ;
  9311   003694  50C3               	movf	195,w,c	;volatile
  9312   003696  CFC4 F005          	movff	4036,??_Adc_Get_conversion_result	;volatile
  9313   00369A  6A06               	clrf	(??_Adc_Get_conversion_result+1)^0,c
  9314   00369C  C005  F006         	movff	??_Adc_Get_conversion_result,??_Adc_Get_conversion_result+1
  9315   0036A0  6A05               	clrf	??_Adc_Get_conversion_result^0,c
  9316   0036A2  2605               	addwf	??_Adc_Get_conversion_result^0,f,c
  9317   0036A4  0E00               	movlw	0
  9318   0036A6  2206               	addwfc	(??_Adc_Get_conversion_result+1)^0,f,c
  9319   0036A8  0E06               	movlw	6
  9320   0036AA  6E07               	movwf	(??_Adc_Get_conversion_result+2)^0,c
  9321   0036AC                     u9245:
  9322   0036AC  3406               	rlcf	(??_Adc_Get_conversion_result+1)^0,w,c
  9323   0036AE  3206               	rrcf	(??_Adc_Get_conversion_result+1)^0,f,c
  9324   0036B0  3205               	rrcf	??_Adc_Get_conversion_result^0,f,c
  9325   0036B2  2E07               	decfsz	(??_Adc_Get_conversion_result+2)^0,f,c
  9326   0036B4  EF56  F01B         	goto	u9245
  9327   0036B8  5004               	movf	Adc_Get_conversion_result@conversion_result^0,w,c
  9328   0036BA  6ED9               	movwf	fsr2l,c
  9329   0036BC  6ADA               	clrf	fsr2h,c
  9330   0036BE  C005  FFDE         	movff	??_Adc_Get_conversion_result,postinc2
  9331   0036C2  C006  FFDD         	movff	??_Adc_Get_conversion_result+1,postdec2
  9332   0036C6                     l9324:
  9333                           
  9334                           ;MCAL_Layer/ADC/hal_adc.c: 135:         ret = (Std_ReturnType)0x01 ;
  9335   0036C6  0E01               	movlw	1
  9336   0036C8  6E08               	movwf	Adc_Get_conversion_result@ret^0,c
  9337   0036CA                     l9326:
  9338                           
  9339                           ;MCAL_Layer/ADC/hal_adc.c: 137:     return ret;
  9340   0036CA  5008               	movf	Adc_Get_conversion_result@ret^0,w,c
  9341   0036CC  0012               	return		;funcret
  9342   0036CE                     __end_of_Adc_Get_conversion_result:
  9343                           	callstack 0
  9344                           
  9345 ;; *************** function _InterruptManager *****************
  9346 ;; Defined at:
  9347 ;;		line 104 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  9348 ;; Parameters:    Size  Location     Type
  9349 ;;		None
  9350 ;; Auto vars:     Size  Location     Type
  9351 ;;		None
  9352 ;; Return value:  Size  Location     Type
  9353 ;;                  1    wreg      void 
  9354 ;; Registers used:
  9355 ;;		wreg, status,2, status,0, cstack
  9356 ;; Tracked objects:
  9357 ;;		On entry : 0/0
  9358 ;;		On exit  : 0/0
  9359 ;;		Unchanged: 0/0
  9360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9365 ;;Total ram usage:        0 bytes
  9366 ;; Hardware stack levels used: 1
  9367 ;; Hardware stack levels required when called: 1
  9368 ;; This function calls:
  9369 ;;		_ADC_ISR
  9370 ;;		_CCP1_ISR
  9371 ;;		_CCP2_ISR
  9372 ;;		_EUSART_RX_ASY_ISR
  9373 ;;		_EUSART_TX_ASY_ISR
  9374 ;;		_I2C_BUS_COLLISION_ISR
  9375 ;;		_I2C_MODULE_TR_ISR
  9376 ;;		_INT0_ISR
  9377 ;;		_INT1_ISR
  9378 ;;		_INT2_ISR
  9379 ;;		_MSSP_Spi_ISR
  9380 ;;		_RB4_ISR
  9381 ;;		_RB5_ISR
  9382 ;;		_RB6_ISR
  9383 ;;		_RB7_ISR
  9384 ;;		_TMR0_ISR
  9385 ;;		_TMR1_ISR
  9386 ;;		_TMR2_ISR
  9387 ;;		_TMR3_ISR
  9388 ;; This function is called by:
  9389 ;;		Interrupt level 2
  9390 ;; This function uses a non-reentrant model
  9391 ;;
  9392                           
  9393                           	psect	intcode
  9394   000008                     __pintcode:
  9395                           	callstack 0
  9396   000008                     _InterruptManager:
  9397                           	callstack 23
  9398                           
  9399                           ;incstack = 0
  9400   000008  827E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9401   00000A  ED81  F00F         	call	int_func,f	;refresh shadow registers
  9402                           
  9403                           	psect	intcode_body
  9404   001F02                     __pintcode_body:
  9405                           	callstack 23
  9406   001F02                     int_func:
  9407                           	callstack 23
  9408   001F02  0006               	pop		; remove dummy address from shadow register refresh
  9409   001F04                     
  9410                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 106:     if((INTCONbits.INT0IE == 1) && 
      +                          (INTCONbits.INT0IF == 1)){
  9411   001F04  A8F2               	btfss	242,4,c	;volatile
  9412   001F06  EF87  F00F         	goto	i2u801_41
  9413   001F0A  EF89  F00F         	goto	i2u801_40
  9414   001F0E                     i2u801_41:
  9415   001F0E  EF92  F00F         	goto	i2l1179
  9416   001F12                     i2u801_40:
  9417   001F12  A2F2               	btfss	242,1,c	;volatile
  9418   001F14  EF8E  F00F         	goto	i2u802_41
  9419   001F18  EF90  F00F         	goto	i2u802_40
  9420   001F1C                     i2u802_41:
  9421   001F1C  EF92  F00F         	goto	i2l1179
  9422   001F20                     i2u802_40:
  9423   001F20                     
  9424                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 107:         INT0_ISR();
  9425   001F20  EC86  F021         	call	_INT0_ISR	;wreg free
  9426   001F24                     i2l1179:
  9427                           
  9428                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 112:     if((INTCON3bits.INT1E == 1) && 
      +                          (INTCON3bits.INT1F == 1)){
  9429   001F24  A6F0               	btfss	240,3,c	;volatile
  9430   001F26  EF97  F00F         	goto	i2u803_41
  9431   001F2A  EF99  F00F         	goto	i2u803_40
  9432   001F2E                     i2u803_41:
  9433   001F2E  EFA2  F00F         	goto	i2l1181
  9434   001F32                     i2u803_40:
  9435   001F32  A0F0               	btfss	240,0,c	;volatile
  9436   001F34  EF9E  F00F         	goto	i2u804_41
  9437   001F38  EFA0  F00F         	goto	i2u804_40
  9438   001F3C                     i2u804_41:
  9439   001F3C  EFA2  F00F         	goto	i2l1181
  9440   001F40                     i2u804_40:
  9441   001F40                     
  9442                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 113:         INT1_ISR();
  9443   001F40  EC84  F021         	call	_INT1_ISR	;wreg free
  9444   001F44                     i2l1181:
  9445                           
  9446                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 118:     if((INTCON3bits.INT2IE == 1) &&
      +                           (INTCON3bits.INT2IF == 1)){
  9447   001F44  A8F0               	btfss	240,4,c	;volatile
  9448   001F46  EFA7  F00F         	goto	i2u805_41
  9449   001F4A  EFA9  F00F         	goto	i2u805_40
  9450   001F4E                     i2u805_41:
  9451   001F4E  EFB2  F00F         	goto	i2l1183
  9452   001F52                     i2u805_40:
  9453   001F52  A2F0               	btfss	240,1,c	;volatile
  9454   001F54  EFAE  F00F         	goto	i2u806_41
  9455   001F58  EFB0  F00F         	goto	i2u806_40
  9456   001F5C                     i2u806_41:
  9457   001F5C  EFB2  F00F         	goto	i2l1183
  9458   001F60                     i2u806_40:
  9459   001F60                     
  9460                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 119:         INT2_ISR();
  9461   001F60  EC82  F021         	call	_INT2_ISR	;wreg free
  9462   001F64                     i2l1183:
  9463                           
  9464                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 127:     if((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
  9465   001F64  A6F2               	btfss	242,3,c	;volatile
  9466   001F66  EFB7  F00F         	goto	i2u807_41
  9467   001F6A  EFB9  F00F         	goto	i2u807_40
  9468   001F6E                     i2u807_41:
  9469   001F6E  EFD4  F00F         	goto	i2l1185
  9470   001F72                     i2u807_40:
  9471   001F72  A0F2               	btfss	242,0,c	;volatile
  9472   001F74  EFBE  F00F         	goto	i2u808_41
  9473   001F78  EFC0  F00F         	goto	i2u808_40
  9474   001F7C                     i2u808_41:
  9475   001F7C  EFD4  F00F         	goto	i2l1185
  9476   001F80                     i2u808_40:
  9477   001F80  A881               	btfss	129,4,c	;volatile
  9478   001F82  EFC5  F00F         	goto	i2u809_41
  9479   001F86  EFC7  F00F         	goto	i2u809_40
  9480   001F8A                     i2u809_41:
  9481   001F8A  EFD4  F00F         	goto	i2l1185
  9482   001F8E                     i2u809_40:
  9483   001F8E  047D               	decf	_RB4_Flag^0,w,c	;volatile
  9484   001F90  A4D8               	btfss	status,2,c
  9485   001F92  EFCD  F00F         	goto	i2u810_41
  9486   001F96  EFCF  F00F         	goto	i2u810_40
  9487   001F9A                     i2u810_41:
  9488   001F9A  EFD4  F00F         	goto	i2l1185
  9489   001F9E                     i2u810_40:
  9490   001F9E                     
  9491                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 128:             (PORTBbits.RB4 == LOGIC
      +                          _HIGH) && (RB4_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 129:         
      +                           RB4_Flag = 0;
  9492   001F9E  0E00               	movlw	0
  9493   001FA0  6E7D               	movwf	_RB4_Flag^0,c	;volatile
  9494   001FA2                     
  9495                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 130:          RB4_ISR(0);
  9496   001FA2  0E00               	movlw	0
  9497   001FA4  EC51  F021         	call	_RB4_ISR
  9498   001FA8                     i2l1185:
  9499                           
  9500                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 135:     if((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
  9501   001FA8  A6F2               	btfss	242,3,c	;volatile
  9502   001FAA  EFD9  F00F         	goto	i2u811_41
  9503   001FAE  EFDB  F00F         	goto	i2u811_40
  9504   001FB2                     i2u811_41:
  9505   001FB2  EFF6  F00F         	goto	i2l1187
  9506   001FB6                     i2u811_40:
  9507   001FB6  A0F2               	btfss	242,0,c	;volatile
  9508   001FB8  EFE0  F00F         	goto	i2u812_41
  9509   001FBC  EFE2  F00F         	goto	i2u812_40
  9510   001FC0                     i2u812_41:
  9511   001FC0  EFF6  F00F         	goto	i2l1187
  9512   001FC4                     i2u812_40:
  9513   001FC4  B881               	btfsc	129,4,c	;volatile
  9514   001FC6  EFE7  F00F         	goto	i2u813_41
  9515   001FCA  EFE9  F00F         	goto	i2u813_40
  9516   001FCE                     i2u813_41:
  9517   001FCE  EFF6  F00F         	goto	i2l1187
  9518   001FD2                     i2u813_40:
  9519   001FD2  507D               	movf	_RB4_Flag^0,w,c	;volatile
  9520   001FD4  A4D8               	btfss	status,2,c
  9521   001FD6  EFEF  F00F         	goto	i2u814_41
  9522   001FDA  EFF1  F00F         	goto	i2u814_40
  9523   001FDE                     i2u814_41:
  9524   001FDE  EFF6  F00F         	goto	i2l1187
  9525   001FE2                     i2u814_40:
  9526   001FE2                     
  9527                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 136:             (PORTBbits.RB4 == LOGIC
      +                          _LOW) && (RB4_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 137:          
      +                          RB4_Flag = 1;
  9528   001FE2  0E01               	movlw	1
  9529   001FE4  6E7D               	movwf	_RB4_Flag^0,c	;volatile
  9530   001FE6                     
  9531                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 138:          RB4_ISR(1);
  9532   001FE6  0E01               	movlw	1
  9533   001FE8  EC51  F021         	call	_RB4_ISR
  9534   001FEC                     i2l1187:
  9535                           
  9536                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 143:     if((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
  9537   001FEC  A6F2               	btfss	242,3,c	;volatile
  9538   001FEE  EFFB  F00F         	goto	i2u815_41
  9539   001FF2  EFFD  F00F         	goto	i2u815_40
  9540   001FF6                     i2u815_41:
  9541   001FF6  EF18  F010         	goto	i2l1189
  9542   001FFA                     i2u815_40:
  9543   001FFA  A0F2               	btfss	242,0,c	;volatile
  9544   001FFC  EF02  F010         	goto	i2u816_41
  9545   002000  EF04  F010         	goto	i2u816_40
  9546   002004                     i2u816_41:
  9547   002004  EF18  F010         	goto	i2l1189
  9548   002008                     i2u816_40:
  9549   002008  AA81               	btfss	129,5,c	;volatile
  9550   00200A  EF09  F010         	goto	i2u817_41
  9551   00200E  EF0B  F010         	goto	i2u817_40
  9552   002012                     i2u817_41:
  9553   002012  EF18  F010         	goto	i2l1189
  9554   002016                     i2u817_40:
  9555   002016  047C               	decf	_RB5_Flag^0,w,c	;volatile
  9556   002018  A4D8               	btfss	status,2,c
  9557   00201A  EF11  F010         	goto	i2u818_41
  9558   00201E  EF13  F010         	goto	i2u818_40
  9559   002022                     i2u818_41:
  9560   002022  EF18  F010         	goto	i2l1189
  9561   002026                     i2u818_40:
  9562   002026                     
  9563                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 144:             (PORTBbits.RB5 == LOGIC
      +                          _HIGH) && (RB5_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 145:         
      +                           RB5_Flag = 0;
  9564   002026  0E00               	movlw	0
  9565   002028  6E7C               	movwf	_RB5_Flag^0,c	;volatile
  9566   00202A                     
  9567                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 146:          RB5_ISR(0);
  9568   00202A  0E00               	movlw	0
  9569   00202C  EC44  F021         	call	_RB5_ISR
  9570   002030                     i2l1189:
  9571                           
  9572                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 151:      if((INTCONbits.RBIE == 1) && (
      +                          INTCONbits.RBIF == 1) &&
  9573   002030  A6F2               	btfss	242,3,c	;volatile
  9574   002032  EF1D  F010         	goto	i2u819_41
  9575   002036  EF1F  F010         	goto	i2u819_40
  9576   00203A                     i2u819_41:
  9577   00203A  EF3A  F010         	goto	i2l1191
  9578   00203E                     i2u819_40:
  9579   00203E  A0F2               	btfss	242,0,c	;volatile
  9580   002040  EF24  F010         	goto	i2u820_41
  9581   002044  EF26  F010         	goto	i2u820_40
  9582   002048                     i2u820_41:
  9583   002048  EF3A  F010         	goto	i2l1191
  9584   00204C                     i2u820_40:
  9585   00204C  BA81               	btfsc	129,5,c	;volatile
  9586   00204E  EF2B  F010         	goto	i2u821_41
  9587   002052  EF2D  F010         	goto	i2u821_40
  9588   002056                     i2u821_41:
  9589   002056  EF3A  F010         	goto	i2l1191
  9590   00205A                     i2u821_40:
  9591   00205A  507C               	movf	_RB5_Flag^0,w,c	;volatile
  9592   00205C  A4D8               	btfss	status,2,c
  9593   00205E  EF33  F010         	goto	i2u822_41
  9594   002062  EF35  F010         	goto	i2u822_40
  9595   002066                     i2u822_41:
  9596   002066  EF3A  F010         	goto	i2l1191
  9597   00206A                     i2u822_40:
  9598   00206A                     
  9599                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 152:             (PORTBbits.RB5 == LOGIC
      +                          _LOW) && (RB5_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 153:          
      +                          RB5_Flag = 1;
  9600   00206A  0E01               	movlw	1
  9601   00206C  6E7C               	movwf	_RB5_Flag^0,c	;volatile
  9602   00206E                     
  9603                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 154:          RB5_ISR(1);
  9604   00206E  0E01               	movlw	1
  9605   002070  EC44  F021         	call	_RB5_ISR
  9606   002074                     i2l1191:
  9607                           
  9608                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 159:     if((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
  9609   002074  A6F2               	btfss	242,3,c	;volatile
  9610   002076  EF3F  F010         	goto	i2u823_41
  9611   00207A  EF41  F010         	goto	i2u823_40
  9612   00207E                     i2u823_41:
  9613   00207E  EF5C  F010         	goto	i2l1193
  9614   002082                     i2u823_40:
  9615   002082  A0F2               	btfss	242,0,c	;volatile
  9616   002084  EF46  F010         	goto	i2u824_41
  9617   002088  EF48  F010         	goto	i2u824_40
  9618   00208C                     i2u824_41:
  9619   00208C  EF5C  F010         	goto	i2l1193
  9620   002090                     i2u824_40:
  9621   002090  AC81               	btfss	129,6,c	;volatile
  9622   002092  EF4D  F010         	goto	i2u825_41
  9623   002096  EF4F  F010         	goto	i2u825_40
  9624   00209A                     i2u825_41:
  9625   00209A  EF5C  F010         	goto	i2l1193
  9626   00209E                     i2u825_40:
  9627   00209E  047B               	decf	_RB6_Flag^0,w,c	;volatile
  9628   0020A0  A4D8               	btfss	status,2,c
  9629   0020A2  EF55  F010         	goto	i2u826_41
  9630   0020A6  EF57  F010         	goto	i2u826_40
  9631   0020AA                     i2u826_41:
  9632   0020AA  EF5C  F010         	goto	i2l1193
  9633   0020AE                     i2u826_40:
  9634   0020AE                     
  9635                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 160:             (PORTBbits.RB6 == LOGIC
      +                          _HIGH) && (RB6_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 161:         
      +                           RB6_Flag = 0;
  9636   0020AE  0E00               	movlw	0
  9637   0020B0  6E7B               	movwf	_RB6_Flag^0,c	;volatile
  9638   0020B2                     
  9639                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 162:          RB6_ISR(0);
  9640   0020B2  0E00               	movlw	0
  9641   0020B4  EC37  F021         	call	_RB6_ISR
  9642   0020B8                     i2l1193:
  9643                           
  9644                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 167:      if((INTCONbits.RBIE == 1) && (
      +                          INTCONbits.RBIF == 1) &&
  9645   0020B8  A6F2               	btfss	242,3,c	;volatile
  9646   0020BA  EF61  F010         	goto	i2u827_41
  9647   0020BE  EF63  F010         	goto	i2u827_40
  9648   0020C2                     i2u827_41:
  9649   0020C2  EF7E  F010         	goto	i2l1195
  9650   0020C6                     i2u827_40:
  9651   0020C6  A0F2               	btfss	242,0,c	;volatile
  9652   0020C8  EF68  F010         	goto	i2u828_41
  9653   0020CC  EF6A  F010         	goto	i2u828_40
  9654   0020D0                     i2u828_41:
  9655   0020D0  EF7E  F010         	goto	i2l1195
  9656   0020D4                     i2u828_40:
  9657   0020D4  BC81               	btfsc	129,6,c	;volatile
  9658   0020D6  EF6F  F010         	goto	i2u829_41
  9659   0020DA  EF71  F010         	goto	i2u829_40
  9660   0020DE                     i2u829_41:
  9661   0020DE  EF7E  F010         	goto	i2l1195
  9662   0020E2                     i2u829_40:
  9663   0020E2  507B               	movf	_RB6_Flag^0,w,c	;volatile
  9664   0020E4  A4D8               	btfss	status,2,c
  9665   0020E6  EF77  F010         	goto	i2u830_41
  9666   0020EA  EF79  F010         	goto	i2u830_40
  9667   0020EE                     i2u830_41:
  9668   0020EE  EF7E  F010         	goto	i2l1195
  9669   0020F2                     i2u830_40:
  9670   0020F2                     
  9671                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 168:             (PORTBbits.RB6 ==LOGIC_
      +                          LOW) && (RB6_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 169:          R
      +                          B6_Flag = 1;
  9672   0020F2  0E01               	movlw	1
  9673   0020F4  6E7B               	movwf	_RB6_Flag^0,c	;volatile
  9674   0020F6                     
  9675                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 170:          RB6_ISR(1);
  9676   0020F6  0E01               	movlw	1
  9677   0020F8  EC37  F021         	call	_RB6_ISR
  9678   0020FC                     i2l1195:
  9679                           
  9680                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 175:     if((INTCONbits.RBIE == 1) && (I
      +                          NTCONbits.RBIF == 1) &&
  9681   0020FC  A6F2               	btfss	242,3,c	;volatile
  9682   0020FE  EF83  F010         	goto	i2u831_41
  9683   002102  EF85  F010         	goto	i2u831_40
  9684   002106                     i2u831_41:
  9685   002106  EFA0  F010         	goto	i2l1197
  9686   00210A                     i2u831_40:
  9687   00210A  A0F2               	btfss	242,0,c	;volatile
  9688   00210C  EF8A  F010         	goto	i2u832_41
  9689   002110  EF8C  F010         	goto	i2u832_40
  9690   002114                     i2u832_41:
  9691   002114  EFA0  F010         	goto	i2l1197
  9692   002118                     i2u832_40:
  9693   002118  AE81               	btfss	129,7,c	;volatile
  9694   00211A  EF91  F010         	goto	i2u833_41
  9695   00211E  EF93  F010         	goto	i2u833_40
  9696   002122                     i2u833_41:
  9697   002122  EFA0  F010         	goto	i2l1197
  9698   002126                     i2u833_40:
  9699   002126  047A               	decf	_RB7_Flag^0,w,c	;volatile
  9700   002128  A4D8               	btfss	status,2,c
  9701   00212A  EF99  F010         	goto	i2u834_41
  9702   00212E  EF9B  F010         	goto	i2u834_40
  9703   002132                     i2u834_41:
  9704   002132  EFA0  F010         	goto	i2l1197
  9705   002136                     i2u834_40:
  9706   002136                     
  9707                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 176:             (PORTBbits.RB7 == LOGIC
      +                          _HIGH) && (RB7_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 177:         
      +                           RB7_Flag = 0;
  9708   002136  0E00               	movlw	0
  9709   002138  6E7A               	movwf	_RB7_Flag^0,c	;volatile
  9710   00213A                     
  9711                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 178:          RB7_ISR(0);
  9712   00213A  0E00               	movlw	0
  9713   00213C  EC2A  F021         	call	_RB7_ISR
  9714   002140                     i2l1197:
  9715                           
  9716                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 183:      if((INTCONbits.RBIE == 1) && (
      +                          INTCONbits.RBIF == 1) &&
  9717   002140  A6F2               	btfss	242,3,c	;volatile
  9718   002142  EFA5  F010         	goto	i2u835_41
  9719   002146  EFA7  F010         	goto	i2u835_40
  9720   00214A                     i2u835_41:
  9721   00214A  EFC2  F010         	goto	i2l1199
  9722   00214E                     i2u835_40:
  9723   00214E  A0F2               	btfss	242,0,c	;volatile
  9724   002150  EFAC  F010         	goto	i2u836_41
  9725   002154  EFAE  F010         	goto	i2u836_40
  9726   002158                     i2u836_41:
  9727   002158  EFC2  F010         	goto	i2l1199
  9728   00215C                     i2u836_40:
  9729   00215C  BE81               	btfsc	129,7,c	;volatile
  9730   00215E  EFB3  F010         	goto	i2u837_41
  9731   002162  EFB5  F010         	goto	i2u837_40
  9732   002166                     i2u837_41:
  9733   002166  EFC2  F010         	goto	i2l1199
  9734   00216A                     i2u837_40:
  9735   00216A  507A               	movf	_RB7_Flag^0,w,c	;volatile
  9736   00216C  A4D8               	btfss	status,2,c
  9737   00216E  EFBB  F010         	goto	i2u838_41
  9738   002172  EFBD  F010         	goto	i2u838_40
  9739   002176                     i2u838_41:
  9740   002176  EFC2  F010         	goto	i2l1199
  9741   00217A                     i2u838_40:
  9742   00217A                     
  9743                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 184:             (PORTBbits.RB7== LOGIC_
      +                          LOW) && (RB7_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 185:          R
      +                          B7_Flag = 1;
  9744   00217A  0E01               	movlw	1
  9745   00217C  6E7A               	movwf	_RB7_Flag^0,c	;volatile
  9746   00217E                     
  9747                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 186:          RB7_ISR(1);
  9748   00217E  0E01               	movlw	1
  9749   002180  EC2A  F021         	call	_RB7_ISR
  9750   002184                     i2l1199:
  9751                           
  9752                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 194:     if((PIE1bits.ADIE == 1) && (PIR
      +                          1bits.ADIF == 1)){
  9753   002184  AC9D               	btfss	157,6,c	;volatile
  9754   002186  EFC7  F010         	goto	i2u839_41
  9755   00218A  EFC9  F010         	goto	i2u839_40
  9756   00218E                     i2u839_41:
  9757   00218E  EFD2  F010         	goto	i2l1201
  9758   002192                     i2u839_40:
  9759   002192  AC9E               	btfss	158,6,c	;volatile
  9760   002194  EFCE  F010         	goto	i2u840_41
  9761   002198  EFD0  F010         	goto	i2u840_40
  9762   00219C                     i2u840_41:
  9763   00219C  EFD2  F010         	goto	i2l1201
  9764   0021A0                     i2u840_40:
  9765   0021A0                     
  9766                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 195:        ADC_ISR();
  9767   0021A0  EC92  F021         	call	_ADC_ISR	;wreg free
  9768   0021A4                     i2l1201:
  9769                           
  9770                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 201:     if((INTCONbits.TMR0IE == 1) && 
      +                          (INTCONbits.TMR0IF == 1)){
  9771   0021A4  AAF2               	btfss	242,5,c	;volatile
  9772   0021A6  EFD7  F010         	goto	i2u841_41
  9773   0021AA  EFD9  F010         	goto	i2u841_40
  9774   0021AE                     i2u841_41:
  9775   0021AE  EFE2  F010         	goto	i2l1203
  9776   0021B2                     i2u841_40:
  9777   0021B2  A4F2               	btfss	242,2,c	;volatile
  9778   0021B4  EFDE  F010         	goto	i2u842_41
  9779   0021B8  EFE0  F010         	goto	i2u842_40
  9780   0021BC                     i2u842_41:
  9781   0021BC  EFE2  F010         	goto	i2l1203
  9782   0021C0                     i2u842_40:
  9783   0021C0                     
  9784                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 202:         TMR0_ISR();
  9785   0021C0  EC73  F021         	call	_TMR0_ISR	;wreg free
  9786   0021C4                     i2l1203:
  9787                           
  9788                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 207:  if((PIE1bits.TMR1IE == 1) && (PIR1
      +                          bits.TMR1IF == 1)){
  9789   0021C4  A09D               	btfss	157,0,c	;volatile
  9790   0021C6  EFE7  F010         	goto	i2u843_41
  9791   0021CA  EFE9  F010         	goto	i2u843_40
  9792   0021CE                     i2u843_41:
  9793   0021CE  EFF2  F010         	goto	i2l1205
  9794   0021D2                     i2u843_40:
  9795   0021D2  A09E               	btfss	158,0,c	;volatile
  9796   0021D4  EFEE  F010         	goto	i2u844_41
  9797   0021D8  EFF0  F010         	goto	i2u844_40
  9798   0021DC                     i2u844_41:
  9799   0021DC  EFF2  F010         	goto	i2l1205
  9800   0021E0                     i2u844_40:
  9801   0021E0                     
  9802                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 208:         TMR1_ISR();
  9803   0021E0  EC6D  F021         	call	_TMR1_ISR	;wreg free
  9804   0021E4                     i2l1205:
  9805                           
  9806                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 213: if((PIE1bits.TMR2IE == 1) && (PIR1b
      +                          its.TMR2IF == 1)){
  9807   0021E4  A29D               	btfss	157,1,c	;volatile
  9808   0021E6  EFF7  F010         	goto	i2u845_41
  9809   0021EA  EFF9  F010         	goto	i2u845_40
  9810   0021EE                     i2u845_41:
  9811   0021EE  EF02  F011         	goto	i2l1207
  9812   0021F2                     i2u845_40:
  9813   0021F2  A29E               	btfss	158,1,c	;volatile
  9814   0021F4  EFFE  F010         	goto	i2u846_41
  9815   0021F8  EF00  F011         	goto	i2u846_40
  9816   0021FC                     i2u846_41:
  9817   0021FC  EF02  F011         	goto	i2l1207
  9818   002200                     i2u846_40:
  9819   002200                     
  9820                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 214:         TMR2_ISR();
  9821   002200  EC79  F021         	call	_TMR2_ISR	;wreg free
  9822   002204                     i2l1207:
  9823                           
  9824                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 219:     if((PIE2bits.TMR3IE == 1) && (P
      +                          IR2bits.TMR3IF == 1)){
  9825   002204  A2A0               	btfss	160,1,c	;volatile
  9826   002206  EF07  F011         	goto	i2u847_41
  9827   00220A  EF09  F011         	goto	i2u847_40
  9828   00220E                     i2u847_41:
  9829   00220E  EF12  F011         	goto	i2l1209
  9830   002212                     i2u847_40:
  9831   002212  A2A1               	btfss	161,1,c	;volatile
  9832   002214  EF0E  F011         	goto	i2u848_41
  9833   002218  EF10  F011         	goto	i2u848_40
  9834   00221C                     i2u848_41:
  9835   00221C  EF12  F011         	goto	i2l1209
  9836   002220                     i2u848_40:
  9837   002220                     
  9838                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 220:         TMR3_ISR();
  9839   002220  EC67  F021         	call	_TMR3_ISR	;wreg free
  9840   002224                     i2l1209:
  9841                           
  9842                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 225:      if((PIE1bits.CCP1IE == 1) && (
      +                          PIR1bits.CCP1IF == 1)){
  9843   002224  A49D               	btfss	157,2,c	;volatile
  9844   002226  EF17  F011         	goto	i2u849_41
  9845   00222A  EF19  F011         	goto	i2u849_40
  9846   00222E                     i2u849_41:
  9847   00222E  EF22  F011         	goto	i2l1211
  9848   002232                     i2u849_40:
  9849   002232  A49E               	btfss	158,2,c	;volatile
  9850   002234  EF1E  F011         	goto	i2u850_41
  9851   002238  EF20  F011         	goto	i2u850_40
  9852   00223C                     i2u850_41:
  9853   00223C  EF22  F011         	goto	i2l1211
  9854   002240                     i2u850_40:
  9855   002240                     
  9856                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 226:         CCP1_ISR();
  9857   002240  EC90  F021         	call	_CCP1_ISR	;wreg free
  9858   002244                     i2l1211:
  9859                           
  9860                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 231:      if((PIE2bits.CCP2IE == 1) && (
      +                          PIR2bits.CCP2IF == 1)){
  9861   002244  A0A0               	btfss	160,0,c	;volatile
  9862   002246  EF27  F011         	goto	i2u851_41
  9863   00224A  EF29  F011         	goto	i2u851_40
  9864   00224E                     i2u851_41:
  9865   00224E  EF32  F011         	goto	i2l1213
  9866   002252                     i2u851_40:
  9867   002252  A0A1               	btfss	161,0,c	;volatile
  9868   002254  EF2E  F011         	goto	i2u852_41
  9869   002258  EF30  F011         	goto	i2u852_40
  9870   00225C                     i2u852_41:
  9871   00225C  EF32  F011         	goto	i2l1213
  9872   002260                     i2u852_40:
  9873   002260                     
  9874                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 232:         CCP2_ISR();
  9875   002260  EC8E  F021         	call	_CCP2_ISR	;wreg free
  9876   002264                     i2l1213:
  9877                           
  9878                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 237:      if((PIE1bits.TXIE == 1) && (PI
      +                          R1bits.TXIF == 1)){
  9879   002264  A89D               	btfss	157,4,c	;volatile
  9880   002266  EF37  F011         	goto	i2u853_41
  9881   00226A  EF39  F011         	goto	i2u853_40
  9882   00226E                     i2u853_41:
  9883   00226E  EF42  F011         	goto	i2l1215
  9884   002272                     i2u853_40:
  9885   002272  A89E               	btfss	158,4,c	;volatile
  9886   002274  EF3E  F011         	goto	i2u854_41
  9887   002278  EF40  F011         	goto	i2u854_40
  9888   00227C                     i2u854_41:
  9889   00227C  EF42  F011         	goto	i2l1215
  9890   002280                     i2u854_40:
  9891   002280                     
  9892                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 238:         EUSART_TX_ASY_ISR();
  9893   002280  EC8C  F021         	call	_EUSART_TX_ASY_ISR	;wreg free
  9894   002284                     i2l1215:
  9895                           
  9896                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 243:          if((PIE1bits.RCIE == 1) &&
      +                           (PIR1bits.RCIF == 1)){
  9897   002284  AA9D               	btfss	157,5,c	;volatile
  9898   002286  EF47  F011         	goto	i2u855_41
  9899   00228A  EF49  F011         	goto	i2u855_40
  9900   00228E                     i2u855_41:
  9901   00228E  EF52  F011         	goto	i2l1217
  9902   002292                     i2u855_40:
  9903   002292  AA9E               	btfss	158,5,c	;volatile
  9904   002294  EF4E  F011         	goto	i2u856_41
  9905   002298  EF50  F011         	goto	i2u856_40
  9906   00229C                     i2u856_41:
  9907   00229C  EF52  F011         	goto	i2l1217
  9908   0022A0                     i2u856_40:
  9909   0022A0                     
  9910                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 244:         EUSART_RX_ASY_ISR();
  9911   0022A0  EC95  F021         	call	_EUSART_RX_ASY_ISR	;wreg free
  9912   0022A4                     i2l1217:
  9913                           
  9914                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 249:      if((PIE1bits.SSPIE == 1) && (P
      +                          IR1bits.SSPIF == 1)){
  9915   0022A4  A69D               	btfss	157,3,c	;volatile
  9916   0022A6  EF57  F011         	goto	i2u857_41
  9917   0022AA  EF59  F011         	goto	i2u857_40
  9918   0022AE                     i2u857_41:
  9919   0022AE  EF62  F011         	goto	i2l1219
  9920   0022B2                     i2u857_40:
  9921   0022B2  A69E               	btfss	158,3,c	;volatile
  9922   0022B4  EF5E  F011         	goto	i2u858_41
  9923   0022B8  EF60  F011         	goto	i2u858_40
  9924   0022BC                     i2u858_41:
  9925   0022BC  EF62  F011         	goto	i2l1219
  9926   0022C0                     i2u858_40:
  9927   0022C0                     
  9928                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 250:         I2C_MODULE_TR_ISR();
  9929   0022C0  EC88  F021         	call	_I2C_MODULE_TR_ISR	;wreg free
  9930   0022C4                     i2l1219:
  9931                           
  9932                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 255:          if((PIE2bits.BCLIE == 1) &
      +                          & (PIR2bits.BCLIF == 1)){
  9933   0022C4  A6A0               	btfss	160,3,c	;volatile
  9934   0022C6  EF67  F011         	goto	i2u859_41
  9935   0022CA  EF69  F011         	goto	i2u859_40
  9936   0022CE                     i2u859_41:
  9937   0022CE  EF72  F011         	goto	i2l1221
  9938   0022D2                     i2u859_40:
  9939   0022D2  A6A1               	btfss	161,3,c	;volatile
  9940   0022D4  EF6E  F011         	goto	i2u860_41
  9941   0022D8  EF70  F011         	goto	i2u860_40
  9942   0022DC                     i2u860_41:
  9943   0022DC  EF72  F011         	goto	i2l1221
  9944   0022E0                     i2u860_40:
  9945   0022E0                     
  9946                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 256:         I2C_BUS_COLLISION_ISR();
  9947   0022E0  EC8A  F021         	call	_I2C_BUS_COLLISION_ISR	;wreg free
  9948   0022E4                     i2l1221:
  9949                           
  9950                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 261:      if((PIE1bits.SSPIE == 1) && (P
      +                          IR1bits.SSPIF == 1)){
  9951   0022E4  A69D               	btfss	157,3,c	;volatile
  9952   0022E6  EF77  F011         	goto	i2u861_41
  9953   0022EA  EF79  F011         	goto	i2u861_40
  9954   0022EE                     i2u861_41:
  9955   0022EE  EF82  F011         	goto	i2l1224
  9956   0022F2                     i2u861_40:
  9957   0022F2  A69E               	btfss	158,3,c	;volatile
  9958   0022F4  EF7E  F011         	goto	i2u862_41
  9959   0022F8  EF80  F011         	goto	i2u862_40
  9960   0022FC                     i2u862_41:
  9961   0022FC  EF82  F011         	goto	i2l1224
  9962   002300                     i2u862_40:
  9963   002300                     
  9964                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 262:         MSSP_Spi_ISR();
  9965   002300  EC80  F021         	call	_MSSP_Spi_ISR	;wreg free
  9966   002304                     i2l1224:
  9967   002304  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9968   002306  0011               	retfie		f
  9969   002308                     __end_of_InterruptManager:
  9970                           	callstack 0
  9971                           
  9972 ;; *************** function _TMR3_ISR *****************
  9973 ;; Defined at:
  9974 ;;		line 91 in file "MCAL_Layer/TIMER3/hal_timer3.c"
  9975 ;; Parameters:    Size  Location     Type
  9976 ;;		None
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;		None
  9979 ;; Return value:  Size  Location     Type
  9980 ;;                  1    wreg      void 
  9981 ;; Registers used:
  9982 ;;		wreg, status,2
  9983 ;; Tracked objects:
  9984 ;;		On entry : 0/0
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9992 ;;Total ram usage:        0 bytes
  9993 ;; Hardware stack levels used: 1
  9994 ;; This function calls:
  9995 ;;		Nothing
  9996 ;; This function is called by:
  9997 ;;		_InterruptManager
  9998 ;; This function uses a non-reentrant model
  9999 ;;
 10000                           
 10001                           	psect	text49
 10002   0042CE                     __ptext49:
 10003                           	callstack 0
 10004   0042CE                     _TMR3_ISR:
 10005                           	callstack 23
 10006   0042CE                     
 10007                           ;MCAL_Layer/TIMER3/hal_timer3.c: 92:  (PIR2bits.TMR3IF = 0 );
 10008   0042CE  92A1               	bcf	161,1,c	;volatile
 10009   0042D0                     
 10010                           ;MCAL_Layer/TIMER3/hal_timer3.c: 93:   TMR3H = (preload_vall) >> 8;
 10011   0042D0  506B               	movf	(_preload_vall+1)^0,w,c	;volatile
 10012   0042D2  6EB3               	movwf	179,c	;volatile
 10013   0042D4                     
 10014                           ;MCAL_Layer/TIMER3/hal_timer3.c: 94:     TMR3L = (uint8)(preload_vall);
 10015   0042D4  C06A  FFB2         	movff	_preload_vall,4018	;volatile
 10016   0042D8  0012               	return		;funcret
 10017   0042DA                     __end_of_TMR3_ISR:
 10018                           	callstack 0
 10019                           
 10020 ;; *************** function _TMR2_ISR *****************
 10021 ;; Defined at:
 10022 ;;		line 74 in file "MCAL_Layer/TIMER2/hal_timer2.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;		None
 10025 ;; Auto vars:     Size  Location     Type
 10026 ;;		None
 10027 ;; Return value:  Size  Location     Type
 10028 ;;                  1    wreg      void 
 10029 ;; Registers used:
 10030 ;;		None
 10031 ;; Tracked objects:
 10032 ;;		On entry : 0/0
 10033 ;;		On exit  : 0/0
 10034 ;;		Unchanged: 0/0
 10035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10040 ;;Total ram usage:        0 bytes
 10041 ;; Hardware stack levels used: 1
 10042 ;; This function calls:
 10043 ;;		Nothing
 10044 ;; This function is called by:
 10045 ;;		_InterruptManager
 10046 ;; This function uses a non-reentrant model
 10047 ;;
 10048                           
 10049                           	psect	text50
 10050   0042F2                     __ptext50:
 10051                           	callstack 0
 10052   0042F2                     _TMR2_ISR:
 10053                           	callstack 23
 10054   0042F2                     
 10055                           ;MCAL_Layer/TIMER2/hal_timer2.c: 75:     (PIR1bits.TMR2IF = 0 );
 10056   0042F2  929E               	bcf	158,1,c	;volatile
 10057                           
 10058                           ;MCAL_Layer/TIMER2/hal_timer2.c: 76:     TMR2 = preload_val ;
 10059   0042F4  C071  FFCC         	movff	_preload_val,4044	;volatile
 10060   0042F8  0012               	return		;funcret
 10061   0042FA                     __end_of_TMR2_ISR:
 10062                           	callstack 0
 10063                           
 10064 ;; *************** function _TMR1_ISR *****************
 10065 ;; Defined at:
 10066 ;;		line 108 in file "MCAL_Layer/TIMER1/hal_timer1.c"
 10067 ;; Parameters:    Size  Location     Type
 10068 ;;		None
 10069 ;; Auto vars:     Size  Location     Type
 10070 ;;		None
 10071 ;; Return value:  Size  Location     Type
 10072 ;;                  1    wreg      void 
 10073 ;; Registers used:
 10074 ;;		wreg, status,2
 10075 ;; Tracked objects:
 10076 ;;		On entry : 0/0
 10077 ;;		On exit  : 0/0
 10078 ;;		Unchanged: 0/0
 10079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10084 ;;Total ram usage:        0 bytes
 10085 ;; Hardware stack levels used: 1
 10086 ;; This function calls:
 10087 ;;		Nothing
 10088 ;; This function is called by:
 10089 ;;		_InterruptManager
 10090 ;; This function uses a non-reentrant model
 10091 ;;
 10092                           
 10093                           	psect	text51
 10094   0042DA                     __ptext51:
 10095                           	callstack 0
 10096   0042DA                     _TMR1_ISR:
 10097                           	callstack 23
 10098   0042DA                     
 10099                           ;MCAL_Layer/TIMER1/hal_timer1.c: 109:     (PIR1bits.TMR1IF = 0 );
 10100   0042DA  909E               	bcf	158,0,c	;volatile
 10101   0042DC                     
 10102                           ;MCAL_Layer/TIMER1/hal_timer1.c: 110:      TMR1H = ((preload_value)>>8);
 10103   0042DC  506D               	movf	(_preload_value@hal_timer1$F4037+1)^0,w,c	;volatile
 10104   0042DE  6ECF               	movwf	207,c	;volatile
 10105   0042E0                     
 10106                           ;MCAL_Layer/TIMER1/hal_timer1.c: 111:        TMR1L = (uint8)(preload_value);
 10107   0042E0  C06C  FFCE         	movff	_preload_value@hal_timer1$F4037,4046	;volatile
 10108   0042E4  0012               	return		;funcret
 10109   0042E6                     __end_of_TMR1_ISR:
 10110                           	callstack 0
 10111                           
 10112 ;; *************** function _TMR0_ISR *****************
 10113 ;; Defined at:
 10114 ;;		line 149 in file "MCAL_Layer/TIMER0/hal_timer0.c"
 10115 ;; Parameters:    Size  Location     Type
 10116 ;;		None
 10117 ;; Auto vars:     Size  Location     Type
 10118 ;;		None
 10119 ;; Return value:  Size  Location     Type
 10120 ;;                  1    wreg      void 
 10121 ;; Registers used:
 10122 ;;		wreg, status,2
 10123 ;; Tracked objects:
 10124 ;;		On entry : 0/0
 10125 ;;		On exit  : 0/0
 10126 ;;		Unchanged: 0/0
 10127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10132 ;;Total ram usage:        0 bytes
 10133 ;; Hardware stack levels used: 1
 10134 ;; This function calls:
 10135 ;;		Nothing
 10136 ;; This function is called by:
 10137 ;;		_InterruptManager
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141                           	psect	text52
 10142   0042E6                     __ptext52:
 10143                           	callstack 0
 10144   0042E6                     _TMR0_ISR:
 10145                           	callstack 23
 10146   0042E6                     
 10147                           ;MCAL_Layer/TIMER0/hal_timer0.c: 150:     (INTCONbits.TMR0IF = 0);
 10148   0042E6  94F2               	bcf	242,2,c	;volatile
 10149   0042E8                     
 10150                           ;MCAL_Layer/TIMER0/hal_timer0.c: 151:     TMR0H = (preload_value >> 8);
 10151   0042E8  506F               	movf	(_preload_value+1)^0,w,c	;volatile
 10152   0042EA  6ED7               	movwf	215,c	;volatile
 10153   0042EC                     
 10154                           ;MCAL_Layer/TIMER0/hal_timer0.c: 152:     TMR0L =(uint8)(preload_value);
 10155   0042EC  C06E  FFD6         	movff	_preload_value,4054	;volatile
 10156   0042F0  0012               	return		;funcret
 10157   0042F2                     __end_of_TMR0_ISR:
 10158                           	callstack 0
 10159                           
 10160 ;; *************** function _RB7_ISR *****************
 10161 ;; Defined at:
 10162 ;;		line 609 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10163 ;; Parameters:    Size  Location     Type
 10164 ;;  RB7_source      1    wreg     unsigned char 
 10165 ;; Auto vars:     Size  Location     Type
 10166 ;;  RB7_source      1    0[COMRAM] unsigned char 
 10167 ;; Return value:  Size  Location     Type
 10168 ;;                  1    wreg      void 
 10169 ;; Registers used:
 10170 ;;		wreg, status,2, status,0
 10171 ;; Tracked objects:
 10172 ;;		On entry : 0/0
 10173 ;;		On exit  : 0/0
 10174 ;;		Unchanged: 0/0
 10175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10177 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10179 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10180 ;;Total ram usage:        1 bytes
 10181 ;; Hardware stack levels used: 1
 10182 ;; This function calls:
 10183 ;;		Nothing
 10184 ;; This function is called by:
 10185 ;;		_InterruptManager
 10186 ;; This function uses a non-reentrant model
 10187 ;;
 10188                           
 10189                           	psect	text53
 10190   004254                     __ptext53:
 10191                           	callstack 0
 10192   004254                     _RB7_ISR:
 10193                           	callstack 23
 10194                           
 10195                           ;incstack = 0
 10196                           ;RB7_ISR@RB7_source stored from wreg
 10197   004254  6E01               	movwf	RB7_ISR@RB7_source^0,c
 10198   004256                     
 10199                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 611:     (INTCONbits.RBIF = 0);
 10200   004256  90F2               	bcf	242,0,c	;volatile
 10201   004258                     
 10202                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 613:     if(0 == RB7_source){
 10203   004258  5001               	movf	RB7_ISR@RB7_source^0,w,c
 10204   00425A  A4D8               	btfss	status,2,c
 10205   00425C  EF32  F021         	goto	i2u713_41
 10206   004260  EF34  F021         	goto	i2u713_40
 10207   004264                     i2u713_41:
 10208   004264  EF36  F021         	goto	i2l7748
 10209   004268                     i2u713_40:
 10210   004268  EF36  F021         	goto	i2l1113
 10211   00426C                     i2l7748:
 10212   00426C                     i2l1113:
 10213   00426C  0012               	return		;funcret
 10214   00426E                     __end_of_RB7_ISR:
 10215                           	callstack 0
 10216                           
 10217 ;; *************** function _RB6_ISR *****************
 10218 ;; Defined at:
 10219 ;;		line 585 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10220 ;; Parameters:    Size  Location     Type
 10221 ;;  RB6_source      1    wreg     unsigned char 
 10222 ;; Auto vars:     Size  Location     Type
 10223 ;;  RB6_source      1    0[COMRAM] unsigned char 
 10224 ;; Return value:  Size  Location     Type
 10225 ;;                  1    wreg      void 
 10226 ;; Registers used:
 10227 ;;		wreg, status,2, status,0
 10228 ;; Tracked objects:
 10229 ;;		On entry : 0/0
 10230 ;;		On exit  : 0/0
 10231 ;;		Unchanged: 0/0
 10232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10236 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10237 ;;Total ram usage:        1 bytes
 10238 ;; Hardware stack levels used: 1
 10239 ;; This function calls:
 10240 ;;		Nothing
 10241 ;; This function is called by:
 10242 ;;		_InterruptManager
 10243 ;; This function uses a non-reentrant model
 10244 ;;
 10245                           
 10246                           	psect	text54
 10247   00426E                     __ptext54:
 10248                           	callstack 0
 10249   00426E                     _RB6_ISR:
 10250                           	callstack 23
 10251                           
 10252                           ;incstack = 0
 10253                           ;RB6_ISR@RB6_source stored from wreg
 10254   00426E  6E01               	movwf	RB6_ISR@RB6_source^0,c
 10255   004270                     
 10256                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 587:     (INTCONbits.RBIF = 0);
 10257   004270  90F2               	bcf	242,0,c	;volatile
 10258   004272                     
 10259                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 589:     if(0 == RB6_source){
 10260   004272  5001               	movf	RB6_ISR@RB6_source^0,w,c
 10261   004274  A4D8               	btfss	status,2,c
 10262   004276  EF3F  F021         	goto	i2u712_41
 10263   00427A  EF41  F021         	goto	i2u712_40
 10264   00427E                     i2u712_41:
 10265   00427E  EF43  F021         	goto	i2l7734
 10266   004282                     i2u712_40:
 10267   004282  EF43  F021         	goto	i2l1102
 10268   004286                     i2l7734:
 10269   004286                     i2l1102:
 10270   004286  0012               	return		;funcret
 10271   004288                     __end_of_RB6_ISR:
 10272                           	callstack 0
 10273                           
 10274 ;; *************** function _RB5_ISR *****************
 10275 ;; Defined at:
 10276 ;;		line 561 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10277 ;; Parameters:    Size  Location     Type
 10278 ;;  RB5_source      1    wreg     unsigned char 
 10279 ;; Auto vars:     Size  Location     Type
 10280 ;;  RB5_source      1    0[COMRAM] unsigned char 
 10281 ;; Return value:  Size  Location     Type
 10282 ;;                  1    wreg      void 
 10283 ;; Registers used:
 10284 ;;		wreg, status,2, status,0
 10285 ;; Tracked objects:
 10286 ;;		On entry : 0/0
 10287 ;;		On exit  : 0/0
 10288 ;;		Unchanged: 0/0
 10289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10291 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10293 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10294 ;;Total ram usage:        1 bytes
 10295 ;; Hardware stack levels used: 1
 10296 ;; This function calls:
 10297 ;;		Nothing
 10298 ;; This function is called by:
 10299 ;;		_InterruptManager
 10300 ;; This function uses a non-reentrant model
 10301 ;;
 10302                           
 10303                           	psect	text55
 10304   004288                     __ptext55:
 10305                           	callstack 0
 10306   004288                     _RB5_ISR:
 10307                           	callstack 23
 10308                           
 10309                           ;incstack = 0
 10310                           ;RB5_ISR@RB5_source stored from wreg
 10311   004288  6E01               	movwf	RB5_ISR@RB5_source^0,c
 10312   00428A                     
 10313                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 563:     (INTCONbits.RBIF = 0);
 10314   00428A  90F2               	bcf	242,0,c	;volatile
 10315   00428C                     
 10316                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 565:     if(0 == RB5_source){
 10317   00428C  5001               	movf	RB5_ISR@RB5_source^0,w,c
 10318   00428E  A4D8               	btfss	status,2,c
 10319   004290  EF4C  F021         	goto	i2u711_41
 10320   004294  EF4E  F021         	goto	i2u711_40
 10321   004298                     i2u711_41:
 10322   004298  EF50  F021         	goto	i2l7720
 10323   00429C                     i2u711_40:
 10324   00429C  EF50  F021         	goto	i2l1091
 10325   0042A0                     i2l7720:
 10326   0042A0                     i2l1091:
 10327   0042A0  0012               	return		;funcret
 10328   0042A2                     __end_of_RB5_ISR:
 10329                           	callstack 0
 10330                           
 10331 ;; *************** function _RB4_ISR *****************
 10332 ;; Defined at:
 10333 ;;		line 536 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10334 ;; Parameters:    Size  Location     Type
 10335 ;;  RB4_source      1    wreg     unsigned char 
 10336 ;; Auto vars:     Size  Location     Type
 10337 ;;  RB4_source      1    0[COMRAM] unsigned char 
 10338 ;; Return value:  Size  Location     Type
 10339 ;;                  1    wreg      void 
 10340 ;; Registers used:
 10341 ;;		wreg, status,2, status,0
 10342 ;; Tracked objects:
 10343 ;;		On entry : 0/0
 10344 ;;		On exit  : 0/0
 10345 ;;		Unchanged: 0/0
 10346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10350 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10351 ;;Total ram usage:        1 bytes
 10352 ;; Hardware stack levels used: 1
 10353 ;; This function calls:
 10354 ;;		Nothing
 10355 ;; This function is called by:
 10356 ;;		_InterruptManager
 10357 ;; This function uses a non-reentrant model
 10358 ;;
 10359                           
 10360                           	psect	text56
 10361   0042A2                     __ptext56:
 10362                           	callstack 0
 10363   0042A2                     _RB4_ISR:
 10364                           	callstack 23
 10365                           
 10366                           ;incstack = 0
 10367                           ;RB4_ISR@RB4_source stored from wreg
 10368   0042A2  6E01               	movwf	RB4_ISR@RB4_source^0,c
 10369   0042A4                     
 10370                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 538:     (INTCONbits.RBIF = 0);
 10371   0042A4  90F2               	bcf	242,0,c	;volatile
 10372   0042A6                     
 10373                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 540:     if(0 == RB4_source){
 10374   0042A6  5001               	movf	RB4_ISR@RB4_source^0,w,c
 10375   0042A8  A4D8               	btfss	status,2,c
 10376   0042AA  EF59  F021         	goto	i2u710_41
 10377   0042AE  EF5B  F021         	goto	i2u710_40
 10378   0042B2                     i2u710_41:
 10379   0042B2  EF5D  F021         	goto	i2l7706
 10380   0042B6                     i2u710_40:
 10381   0042B6  EF5D  F021         	goto	i2l1080
 10382   0042BA                     i2l7706:
 10383   0042BA                     i2l1080:
 10384   0042BA  0012               	return		;funcret
 10385   0042BC                     __end_of_RB4_ISR:
 10386                           	callstack 0
 10387                           
 10388 ;; *************** function _MSSP_Spi_ISR *****************
 10389 ;; Defined at:
 10390 ;;		line 177 in file "MCAL_Layer/MSSP_SPI/hal_spi.c"
 10391 ;; Parameters:    Size  Location     Type
 10392 ;;		None
 10393 ;; Auto vars:     Size  Location     Type
 10394 ;;		None
 10395 ;; Return value:  Size  Location     Type
 10396 ;;                  1    wreg      void 
 10397 ;; Registers used:
 10398 ;;		None
 10399 ;; Tracked objects:
 10400 ;;		On entry : 0/0
 10401 ;;		On exit  : 0/0
 10402 ;;		Unchanged: 0/0
 10403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10408 ;;Total ram usage:        0 bytes
 10409 ;; Hardware stack levels used: 1
 10410 ;; This function calls:
 10411 ;;		Nothing
 10412 ;; This function is called by:
 10413 ;;		_InterruptManager
 10414 ;; This function uses a non-reentrant model
 10415 ;;
 10416                           
 10417                           	psect	text57
 10418   004300                     __ptext57:
 10419                           	callstack 0
 10420   004300                     _MSSP_Spi_ISR:
 10421                           	callstack 23
 10422   004300                     
 10423                           ;MCAL_Layer/MSSP_SPI/hal_spi.c: 178:   (PIR1bits.SSPIF = 0 );
 10424   004300  969E               	bcf	158,3,c	;volatile
 10425   004302  0012               	return		;funcret
 10426   004304                     __end_of_MSSP_Spi_ISR:
 10427                           	callstack 0
 10428                           
 10429 ;; *************** function _INT2_ISR *****************
 10430 ;; Defined at:
 10431 ;;		line 522 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10432 ;; Parameters:    Size  Location     Type
 10433 ;;		None
 10434 ;; Auto vars:     Size  Location     Type
 10435 ;;		None
 10436 ;; Return value:  Size  Location     Type
 10437 ;;                  1    wreg      void 
 10438 ;; Registers used:
 10439 ;;		None
 10440 ;; Tracked objects:
 10441 ;;		On entry : 0/0
 10442 ;;		On exit  : 0/0
 10443 ;;		Unchanged: 0/0
 10444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10449 ;;Total ram usage:        0 bytes
 10450 ;; Hardware stack levels used: 1
 10451 ;; This function calls:
 10452 ;;		Nothing
 10453 ;; This function is called by:
 10454 ;;		_InterruptManager
 10455 ;; This function uses a non-reentrant model
 10456 ;;
 10457                           
 10458                           	psect	text58
 10459   004304                     __ptext58:
 10460                           	callstack 0
 10461   004304                     _INT2_ISR:
 10462                           	callstack 23
 10463   004304                     
 10464                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 524:     (INTCON3bits.INT2IF = 0);
 10465   004304  92F0               	bcf	240,1,c	;volatile
 10466   004306  0012               	return		;funcret
 10467   004308                     __end_of_INT2_ISR:
 10468                           	callstack 0
 10469                           
 10470 ;; *************** function _INT1_ISR *****************
 10471 ;; Defined at:
 10472 ;;		line 508 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10473 ;; Parameters:    Size  Location     Type
 10474 ;;		None
 10475 ;; Auto vars:     Size  Location     Type
 10476 ;;		None
 10477 ;; Return value:  Size  Location     Type
 10478 ;;                  1    wreg      void 
 10479 ;; Registers used:
 10480 ;;		None
 10481 ;; Tracked objects:
 10482 ;;		On entry : 0/0
 10483 ;;		On exit  : 0/0
 10484 ;;		Unchanged: 0/0
 10485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10490 ;;Total ram usage:        0 bytes
 10491 ;; Hardware stack levels used: 1
 10492 ;; This function calls:
 10493 ;;		Nothing
 10494 ;; This function is called by:
 10495 ;;		_InterruptManager
 10496 ;; This function uses a non-reentrant model
 10497 ;;
 10498                           
 10499                           	psect	text59
 10500   004308                     __ptext59:
 10501                           	callstack 0
 10502   004308                     _INT1_ISR:
 10503                           	callstack 23
 10504   004308                     
 10505                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 510:     (INTCON3bits.INT1IF = 0);
 10506   004308  90F0               	bcf	240,0,c	;volatile
 10507   00430A  0012               	return		;funcret
 10508   00430C                     __end_of_INT1_ISR:
 10509                           	callstack 0
 10510                           
 10511 ;; *************** function _INT0_ISR *****************
 10512 ;; Defined at:
 10513 ;;		line 497 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10514 ;; Parameters:    Size  Location     Type
 10515 ;;		None
 10516 ;; Auto vars:     Size  Location     Type
 10517 ;;		None
 10518 ;; Return value:  Size  Location     Type
 10519 ;;                  1    wreg      void 
 10520 ;; Registers used:
 10521 ;;		None
 10522 ;; Tracked objects:
 10523 ;;		On entry : 0/0
 10524 ;;		On exit  : 0/0
 10525 ;;		Unchanged: 0/0
 10526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10531 ;;Total ram usage:        0 bytes
 10532 ;; Hardware stack levels used: 1
 10533 ;; This function calls:
 10534 ;;		Nothing
 10535 ;; This function is called by:
 10536 ;;		_InterruptManager
 10537 ;; This function uses a non-reentrant model
 10538 ;;
 10539                           
 10540                           	psect	text60
 10541   00430C                     __ptext60:
 10542                           	callstack 0
 10543   00430C                     _INT0_ISR:
 10544                           	callstack 23
 10545   00430C                     
 10546                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 499:     (INTCONbits.INT0IF = 0);
 10547   00430C  92F2               	bcf	242,1,c	;volatile
 10548   00430E  0012               	return		;funcret
 10549   004310                     __end_of_INT0_ISR:
 10550                           	callstack 0
 10551                           
 10552 ;; *************** function _I2C_MODULE_TR_ISR *****************
 10553 ;; Defined at:
 10554 ;;		line 242 in file "MCAL_Layer/MSSP_I2C/hal_i2c.c"
 10555 ;; Parameters:    Size  Location     Type
 10556 ;;		None
 10557 ;; Auto vars:     Size  Location     Type
 10558 ;;		None
 10559 ;; Return value:  Size  Location     Type
 10560 ;;                  1    wreg      void 
 10561 ;; Registers used:
 10562 ;;		None
 10563 ;; Tracked objects:
 10564 ;;		On entry : 0/0
 10565 ;;		On exit  : 0/0
 10566 ;;		Unchanged: 0/0
 10567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10572 ;;Total ram usage:        0 bytes
 10573 ;; Hardware stack levels used: 1
 10574 ;; This function calls:
 10575 ;;		Nothing
 10576 ;; This function is called by:
 10577 ;;		_InterruptManager
 10578 ;; This function uses a non-reentrant model
 10579 ;;
 10580                           
 10581                           	psect	text61
 10582   004310                     __ptext61:
 10583                           	callstack 0
 10584   004310                     _I2C_MODULE_TR_ISR:
 10585                           	callstack 23
 10586   004310                     
 10587                           ;MCAL_Layer/MSSP_I2C/hal_i2c.c: 243: (PIR1bits.SSPIF = 0);
 10588   004310  969E               	bcf	158,3,c	;volatile
 10589   004312  0012               	return		;funcret
 10590   004314                     __end_of_I2C_MODULE_TR_ISR:
 10591                           	callstack 0
 10592                           
 10593 ;; *************** function _I2C_BUS_COLLISION_ISR *****************
 10594 ;; Defined at:
 10595 ;;		line 233 in file "MCAL_Layer/MSSP_I2C/hal_i2c.c"
 10596 ;; Parameters:    Size  Location     Type
 10597 ;;		None
 10598 ;; Auto vars:     Size  Location     Type
 10599 ;;		None
 10600 ;; Return value:  Size  Location     Type
 10601 ;;                  1    wreg      void 
 10602 ;; Registers used:
 10603 ;;		None
 10604 ;; Tracked objects:
 10605 ;;		On entry : 0/0
 10606 ;;		On exit  : 0/0
 10607 ;;		Unchanged: 0/0
 10608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10613 ;;Total ram usage:        0 bytes
 10614 ;; Hardware stack levels used: 1
 10615 ;; This function calls:
 10616 ;;		Nothing
 10617 ;; This function is called by:
 10618 ;;		_InterruptManager
 10619 ;; This function uses a non-reentrant model
 10620 ;;
 10621                           
 10622                           	psect	text62
 10623   004314                     __ptext62:
 10624                           	callstack 0
 10625   004314                     _I2C_BUS_COLLISION_ISR:
 10626                           	callstack 23
 10627   004314                     
 10628                           ;MCAL_Layer/MSSP_I2C/hal_i2c.c: 234: (PIR2bits.BCLIF = 0);
 10629   004314  96A1               	bcf	161,3,c	;volatile
 10630   004316  0012               	return		;funcret
 10631   004318                     __end_of_I2C_BUS_COLLISION_ISR:
 10632                           	callstack 0
 10633                           
 10634 ;; *************** function _EUSART_TX_ASY_ISR *****************
 10635 ;; Defined at:
 10636 ;;		line 267 in file "MCAL_Layer/EUSART/hal_usart.c"
 10637 ;; Parameters:    Size  Location     Type
 10638 ;;		None
 10639 ;; Auto vars:     Size  Location     Type
 10640 ;;		None
 10641 ;; Return value:  Size  Location     Type
 10642 ;;                  1    wreg      void 
 10643 ;; Registers used:
 10644 ;;		None
 10645 ;; Tracked objects:
 10646 ;;		On entry : 0/0
 10647 ;;		On exit  : 0/0
 10648 ;;		Unchanged: 0/0
 10649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10654 ;;Total ram usage:        0 bytes
 10655 ;; Hardware stack levels used: 1
 10656 ;; This function calls:
 10657 ;;		Nothing
 10658 ;; This function is called by:
 10659 ;;		_InterruptManager
 10660 ;; This function uses a non-reentrant model
 10661 ;;
 10662                           
 10663                           	psect	text63
 10664   004318                     __ptext63:
 10665                           	callstack 0
 10666   004318                     _EUSART_TX_ASY_ISR:
 10667                           	callstack 23
 10668   004318                     
 10669                           ;MCAL_Layer/EUSART/hal_usart.c: 268: (PIE1bits.TXIE =0);
 10670   004318  989D               	bcf	157,4,c	;volatile
 10671   00431A  0012               	return		;funcret
 10672   00431C                     __end_of_EUSART_TX_ASY_ISR:
 10673                           	callstack 0
 10674                           
 10675 ;; *************** function _EUSART_RX_ASY_ISR *****************
 10676 ;; Defined at:
 10677 ;;		line 276 in file "MCAL_Layer/EUSART/hal_usart.c"
 10678 ;; Parameters:    Size  Location     Type
 10679 ;;		None
 10680 ;; Auto vars:     Size  Location     Type
 10681 ;;		None
 10682 ;; Return value:  Size  Location     Type
 10683 ;;                  1    wreg      void 
 10684 ;; Registers used:
 10685 ;;		wreg, status,2, status,0
 10686 ;; Tracked objects:
 10687 ;;		On entry : 0/0
 10688 ;;		On exit  : 0/0
 10689 ;;		Unchanged: 0/0
 10690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10695 ;;Total ram usage:        0 bytes
 10696 ;; Hardware stack levels used: 1
 10697 ;; This function calls:
 10698 ;;		Nothing
 10699 ;; This function is called by:
 10700 ;;		_InterruptManager
 10701 ;; This function uses a non-reentrant model
 10702 ;;
 10703                           
 10704                           	psect	text64
 10705   00432A                     __ptext64:
 10706                           	callstack 0
 10707   00432A                     _EUSART_RX_ASY_ISR:
 10708                           	callstack 23
 10709   00432A  0012               	return		;funcret
 10710   00432C                     __end_of_EUSART_RX_ASY_ISR:
 10711                           	callstack 0
 10712                           
 10713 ;; *************** function _CCP2_ISR *****************
 10714 ;; Defined at:
 10715 ;;		line 188 in file "MCAL_Layer/CPP1/hal_ccp.c"
 10716 ;; Parameters:    Size  Location     Type
 10717 ;;		None
 10718 ;; Auto vars:     Size  Location     Type
 10719 ;;		None
 10720 ;; Return value:  Size  Location     Type
 10721 ;;                  1    wreg      void 
 10722 ;; Registers used:
 10723 ;;		None
 10724 ;; Tracked objects:
 10725 ;;		On entry : 0/0
 10726 ;;		On exit  : 0/0
 10727 ;;		Unchanged: 0/0
 10728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10733 ;;Total ram usage:        0 bytes
 10734 ;; Hardware stack levels used: 1
 10735 ;; This function calls:
 10736 ;;		Nothing
 10737 ;; This function is called by:
 10738 ;;		_InterruptManager
 10739 ;; This function uses a non-reentrant model
 10740 ;;
 10741                           
 10742                           	psect	text65
 10743   00431C                     __ptext65:
 10744                           	callstack 0
 10745   00431C                     _CCP2_ISR:
 10746                           	callstack 23
 10747   00431C                     
 10748                           ;MCAL_Layer/CPP1/hal_ccp.c: 189: (PIR2bits.CCP2IF = 0 );
 10749   00431C  90A1               	bcf	161,0,c	;volatile
 10750   00431E  0012               	return		;funcret
 10751   004320                     __end_of_CCP2_ISR:
 10752                           	callstack 0
 10753                           
 10754 ;; *************** function _CCP1_ISR *****************
 10755 ;; Defined at:
 10756 ;;		line 179 in file "MCAL_Layer/CPP1/hal_ccp.c"
 10757 ;; Parameters:    Size  Location     Type
 10758 ;;		None
 10759 ;; Auto vars:     Size  Location     Type
 10760 ;;		None
 10761 ;; Return value:  Size  Location     Type
 10762 ;;                  1    wreg      void 
 10763 ;; Registers used:
 10764 ;;		None
 10765 ;; Tracked objects:
 10766 ;;		On entry : 0/0
 10767 ;;		On exit  : 0/0
 10768 ;;		Unchanged: 0/0
 10769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10774 ;;Total ram usage:        0 bytes
 10775 ;; Hardware stack levels used: 1
 10776 ;; This function calls:
 10777 ;;		Nothing
 10778 ;; This function is called by:
 10779 ;;		_InterruptManager
 10780 ;; This function uses a non-reentrant model
 10781 ;;
 10782                           
 10783                           	psect	text66
 10784   004320                     __ptext66:
 10785                           	callstack 0
 10786   004320                     _CCP1_ISR:
 10787                           	callstack 23
 10788   004320                     
 10789                           ;MCAL_Layer/CPP1/hal_ccp.c: 180: (PIR1bits.CCP1IF = 0 );
 10790   004320  949E               	bcf	158,2,c	;volatile
 10791   004322  0012               	return		;funcret
 10792   004324                     __end_of_CCP1_ISR:
 10793                           	callstack 0
 10794                           
 10795 ;; *************** function _ADC_ISR *****************
 10796 ;; Defined at:
 10797 ;;		line 248 in file "MCAL_Layer/ADC/hal_adc.c"
 10798 ;; Parameters:    Size  Location     Type
 10799 ;;		None
 10800 ;; Auto vars:     Size  Location     Type
 10801 ;;		None
 10802 ;; Return value:  Size  Location     Type
 10803 ;;                  1    wreg      void 
 10804 ;; Registers used:
 10805 ;;		None
 10806 ;; Tracked objects:
 10807 ;;		On entry : 0/0
 10808 ;;		On exit  : 0/0
 10809 ;;		Unchanged: 0/0
 10810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10815 ;;Total ram usage:        0 bytes
 10816 ;; Hardware stack levels used: 1
 10817 ;; This function calls:
 10818 ;;		Nothing
 10819 ;; This function is called by:
 10820 ;;		_InterruptManager
 10821 ;; This function uses a non-reentrant model
 10822 ;;
 10823                           
 10824                           	psect	text67
 10825   004324                     __ptext67:
 10826                           	callstack 0
 10827   004324                     _ADC_ISR:
 10828                           	callstack 23
 10829   004324                     
 10830                           ;MCAL_Layer/ADC/hal_adc.c: 249: (PIR1bits.ADIF = 0);
 10831   004324  9C9E               	bcf	158,6,c	;volatile
 10832   004326  0012               	return		;funcret
 10833   004328                     __end_of_ADC_ISR:
 10834                           	callstack 0
 10835                           
 10836                           	psect	rparam
 10837   000000                     
 10838                           	psect	temp
 10839   00007E                     btemp:
 10840                           	callstack 0
 10841   00007E                     	ds	1
 10842   000000                     int$flags	set	btemp
 10843   000000                     wtemp8	set	btemp+1
 10844   000000                     ttemp5	set	btemp+1
 10845   000000                     ttemp6	set	btemp+4
 10846   000000                     ttemp7	set	btemp+8
 10847                           
 10848                           	psect	config
 10849                           
 10850                           ; Padding undefined space
 10851   300000                     	org	3145728
 10852   300000  FF                 	db	255
 10853                           
 10854                           ;Config register CONFIG1H @ 0x300001
 10855                           ;	Oscillator Selection bits
 10856                           ;	OSC = HS, HS oscillator
 10857                           ;	Fail-Safe Clock Monitor Enable bit
 10858                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10859                           ;	Internal/External Oscillator Switchover bit
 10860                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10861   300001                     	org	3145729
 10862   300001  02                 	db	2
 10863                           
 10864                           ;Config register CONFIG2L @ 0x300002
 10865                           ;	Power-up Timer Enable bit
 10866                           ;	PWRT = OFF, PWRT disabled
 10867                           ;	Brown-out Reset Enable bits
 10868                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 10869                           ;	Brown Out Reset Voltage bits
 10870                           ;	BORV = 1, 
 10871   300002                     	org	3145730
 10872   300002  09                 	db	9
 10873                           
 10874                           ;Config register CONFIG2H @ 0x300003
 10875                           ;	Watchdog Timer Enable bit
 10876                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10877                           ;	Watchdog Timer Postscale Select bits
 10878                           ;	WDTPS = 32768, 1:32768
 10879   300003                     	org	3145731
 10880   300003  1E                 	db	30
 10881                           
 10882                           ; Padding undefined space
 10883   300004                     	org	3145732
 10884   300004  FF                 	db	255
 10885                           
 10886                           ;Config register CONFIG3H @ 0x300005
 10887                           ;	CCP2 MUX bit
 10888                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 10889                           ;	PORTB A/D Enable bit
 10890                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 10891                           ;	Low-Power Timer1 Oscillator Enable bit
 10892                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10893                           ;	MCLR Pin Enable bit
 10894                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10895   300005                     	org	3145733
 10896   300005  81                 	db	129
 10897                           
 10898                           ;Config register CONFIG4L @ 0x300006
 10899                           ;	Stack Full/Underflow Reset Enable bit
 10900                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10901                           ;	Single-Supply ICSP Enable bit
 10902                           ;	LVP = OFF, Single-Supply ICSP disabled
 10903                           ;	Extended Instruction Set Enable bit
 10904                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10905                           ;	Background Debugger Enable bit
 10906                           ;	DEBUG = 0x1, unprogrammed default
 10907   300006                     	org	3145734
 10908   300006  81                 	db	129
 10909                           
 10910                           ; Padding undefined space
 10911   300007                     	org	3145735
 10912   300007  FF                 	db	255
 10913                           
 10914                           ;Config register CONFIG5L @ 0x300008
 10915                           ;	Code Protection bit
 10916                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 10917                           ;	Code Protection bit
 10918                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 10919                           ;	Code Protection bit
 10920                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 10921                           ;	Code Protection bit
 10922                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 10923   300008                     	org	3145736
 10924   300008  0F                 	db	15
 10925                           
 10926                           ;Config register CONFIG5H @ 0x300009
 10927                           ;	Boot Block Code Protection bit
 10928                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10929                           ;	Data EEPROM Code Protection bit
 10930                           ;	CPD = OFF, Data EEPROM not code-protected
 10931   300009                     	org	3145737
 10932   300009  C0                 	db	192
 10933                           
 10934                           ;Config register CONFIG6L @ 0x30000A
 10935                           ;	Write Protection bit
 10936                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 10937                           ;	Write Protection bit
 10938                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 10939                           ;	Write Protection bit
 10940                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 10941                           ;	Write Protection bit
 10942                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 10943   30000A                     	org	3145738
 10944   30000A  0F                 	db	15
 10945                           
 10946                           ;Config register CONFIG6H @ 0x30000B
 10947                           ;	Configuration Register Write Protection bit
 10948                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10949                           ;	Boot Block Write Protection bit
 10950                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 10951                           ;	Data EEPROM Write Protection bit
 10952                           ;	WRTD = OFF, Data EEPROM not write-protected
 10953   30000B                     	org	3145739
 10954   30000B  E0                 	db	224
 10955                           
 10956                           ;Config register CONFIG7L @ 0x30000C
 10957                           ;	Table Read Protection bit
 10958                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 10959                           ;	Table Read Protection bit
 10960                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10961                           ;	Table Read Protection bit
 10962                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 10963                           ;	Table Read Protection bit
 10964                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 10965   30000C                     	org	3145740
 10966   30000C  0F                 	db	15
 10967                           
 10968                           ;Config register CONFIG7H @ 0x30000D
 10969                           ;	Boot Block Table Read Protection bit
 10970                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10971   30000D                     	org	3145741
 10972   30000D  40                 	db	64
 10973                           tosu	equ	0xFFF
 10974                           tosh	equ	0xFFE
 10975                           tosl	equ	0xFFD
 10976                           stkptr	equ	0xFFC
 10977                           pclatu	equ	0xFFB
 10978                           pclath	equ	0xFFA
 10979                           pcl	equ	0xFF9
 10980                           tblptru	equ	0xFF8
 10981                           tblptrh	equ	0xFF7
 10982                           tblptrl	equ	0xFF6
 10983                           tablat	equ	0xFF5
 10984                           prodh	equ	0xFF4
 10985                           prodl	equ	0xFF3
 10986                           indf0	equ	0xFEF
 10987                           postinc0	equ	0xFEE
 10988                           postdec0	equ	0xFED
 10989                           preinc0	equ	0xFEC
 10990                           plusw0	equ	0xFEB
 10991                           fsr0h	equ	0xFEA
 10992                           fsr0l	equ	0xFE9
 10993                           wreg	equ	0xFE8
 10994                           indf1	equ	0xFE7
 10995                           postinc1	equ	0xFE6
 10996                           postdec1	equ	0xFE5
 10997                           preinc1	equ	0xFE4
 10998                           plusw1	equ	0xFE3
 10999                           fsr1h	equ	0xFE2
 11000                           fsr1l	equ	0xFE1
 11001                           bsr	equ	0xFE0
 11002                           indf2	equ	0xFDF
 11003                           postinc2	equ	0xFDE
 11004                           postdec2	equ	0xFDD
 11005                           preinc2	equ	0xFDC
 11006                           plusw2	equ	0xFDB
 11007                           fsr2h	equ	0xFDA
 11008                           fsr2l	equ	0xFD9
 11009                           status	equ	0xFD8

Data Sizes:
    Strings     39
    Constant    16
    Data        56
    BSS         143
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    103     125
    BANK0           128      0     128
    BANK1           256      1      50
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    Adc_Get_conversion_result@adc_obj	PTR const struct . size(2) Largest target is 7
		 -> temp_sens(BANK1[7]), 

    Adc_Get_conversion_result@adc_obj$ACD_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Adc_Get_conversion_result@conversion_result	PTR unsigned short  size(1) Largest target is 2
		 -> sens_res(BANK0[2]), 

    ADC_GetConversion_Blocking@adc_obj	PTR const struct . size(2) Largest target is 7
		 -> temp_sens(BANK1[7]), 

    ADC_GetConversion_Blocking@conversion_result	PTR unsigned short  size(1) Largest target is 2
		 -> sens_res(BANK0[2]), 

    ADC_INIT@adc_obj	PTR const struct . size(2) Largest target is 7
		 -> temp_sens(BANK1[7]), 

    ADC_INIT@adc_obj$ACD_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_INTERRUPT_HANDLERF	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Adc_select_Channel@adc_obj	PTR const struct . size(2) Largest target is 7
		 -> temp_sens(BANK1[7]), 

    adc_select_format@adc_obj	PTR const struct . size(3) Largest target is 65535
		 -> ROM(CODE[65535]), 

    adc_select_format@adc_obj$ACD_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    adc_select_Voltage@adc_obj	PTR const struct . size(3) Largest target is 65535
		 -> ROM(CODE[65535]), 

    adc_select_Voltage@adc_obj$ACD_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Adc_start_conversion@adc_obj	PTR const struct . size(2) Largest target is 7
		 -> temp_sens(BANK1[7]), 

    CCP1_INTERRUPT_HANDLERF	PTR FTN()void  size(2) Largest target is 2
		 -> ccp_obj$CCP1_INTERRUPT_HANDLER(BANK0[2]), NULL(), 

    CCP2_INTERRUPT_HANDLERF	PTR FTN()void  size(2) Largest target is 2
		 -> ccp_obj$CCP2_INTERRUPT_HANDLER(BANK0[2]), NULL(), 

    CCP_DEINIt@_ccp$CCP1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    CCP_DEINIt@_ccp$CCP2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    CCP_INIt@_ccp	PTR const struct . size(1) Largest target is 15
		 -> ccp_obj(BANK0[15]), 

    CCP_INIt@_ccp$CCP1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    CCP_INIt@_ccp$CCP2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    ccp_interrupt@_ccp	PTR const struct . size(1) Largest target is 15
		 -> ccp_obj(BANK0[15]), 

    ccp_interrupt@_ccp$CCP1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    ccp_interrupt@_ccp$CCP2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    ccp_obj$CCP1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    ccp_obj$CCP2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    configue_timer_mode@TMR$TIMER3_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    configure_mode@_ccp	PTR const struct . size(1) Largest target is 15
		 -> ccp_obj(BANK0[15]), 

    configure_mode@_ccp$CCP1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    configure_mode@_ccp$CCP2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    convert_uint16_to_string@str	PTR unsigned char  size(1) Largest target is 6
		 -> str(BANK0[6]), 

    EUSART_ASYC_Rx_init@_eusa$EUSART_FRAMING_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYC_Rx_init@_eusa$EUSART_OVERRUN_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYC_Rx_init@_eusa$EUSART_RX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYC_Rx_init@_eusa$EUSART_TX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYC_Tx_init@_eusa$EUSART_FRAMING_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYC_Tx_init@_eusa$EUSART_OVERRUN_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYC_Tx_init@_eusa$EUSART_RX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYC_Tx_init@_eusa$EUSART_TX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    eusart_baudrate_configuration@_eusa$EUSART_FRAMING_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    eusart_baudrate_configuration@_eusa$EUSART_OVERRUN_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    eusart_baudrate_configuration@_eusa$EUSART_RX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    eusart_baudrate_configuration@_eusa$EUSART_TX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    EUSART_FRAMING_ERROR_INTERRUPT_HANDLERF	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_OVERRUN_ERROR_INTERRUPT_HANDLERF	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RX_INTERRUPT_HANDLERF	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TX_INTERRUPT_HANDLERF	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_intialize@__pin_t	PTR const struct . size(1) Largest target is 15
		 -> ccp_obj(BANK0[15]), ccp_obj$ccp_pin(BANK0[1]), lcd_1(BANK0[6]), lcd_1$lcd_pins(BANK0[4]), 
		 -> lcd_1$pin_en(BANK0[1]), lcd_1$pin_Rs(BANK0[1]), led_intalize@obj(COMRAM[1]), motor_1(BANK0[2]), 
		 -> motor_1$motors(BANK0[2]), relay_initalize@obj(COMRAM[1]), spi_master_mode_configuration@SDI(COMRAM[1]), spi_master_mode_configuration@SDO(COMRAM[1]), 
		 -> spi_master_mode_configuration@SKL(COMRAM[1]), spi_slave_mode_configuration@SDI(COMRAM[1]), spi_slave_mode_configuration@SDO(COMRAM[1]), spi_slave_mode_configuration@SKL(COMRAM[1]), 
		 -> spi_slave_mode_configuration@SS_PIN(COMRAM[1]), 

    gpio_pin_intialize@_pin_t	PTR struct . size(1) Largest target is 15
		 -> ccp_obj(BANK0[15]), ccp_obj$ccp_pin(BANK0[1]), lcd_1(BANK0[6]), lcd_1$lcd_pins(BANK0[4]), 
		 -> lcd_1$pin_en(BANK0[1]), lcd_1$pin_Rs(BANK0[1]), led_intalize@obj(COMRAM[1]), motor_1(BANK0[2]), 
		 -> motor_1$motors(BANK0[2]), relay_initalize@obj(COMRAM[1]), spi_master_mode_configuration@SDI(COMRAM[1]), spi_master_mode_configuration@SDO(COMRAM[1]), 
		 -> spi_master_mode_configuration@SKL(COMRAM[1]), spi_slave_mode_configuration@SDI(COMRAM[1]), spi_slave_mode_configuration@SDO(COMRAM[1]), spi_slave_mode_configuration@SKL(COMRAM[1]), 
		 -> spi_slave_mode_configuration@SS_PIN(COMRAM[1]), 

    gpio_pin_write_logic@_pin_t	PTR const struct . size(1) Largest target is 15
		 -> ccp_obj(BANK0[15]), ccp_obj$ccp_pin(BANK0[1]), lcd_1(BANK0[6]), lcd_1$lcd_pins(BANK0[4]), 
		 -> lcd_1$pin_en(BANK0[1]), lcd_1$pin_Rs(BANK0[1]), led_intalize@obj(COMRAM[1]), led_off@obj(COMRAM[1]), 
		 -> led_on@obj(COMRAM[1]), motor_1(BANK0[2]), motor_1$motors(BANK0[2]), relay_initalize@obj(COMRAM[1]), 
		 -> relay_off@obj(COMRAM[1]), relay_on@obj(COMRAM[1]), spi_master_mode_configuration@SDI(COMRAM[1]), spi_master_mode_configuration@SDO(COMRAM[1]), 
		 -> spi_master_mode_configuration@SKL(COMRAM[1]), spi_slave_mode_configuration@SDI(COMRAM[1]), spi_slave_mode_configuration@SDO(COMRAM[1]), spi_slave_mode_configuration@SKL(COMRAM[1]), 
		 -> spi_slave_mode_configuration@SS_PIN(COMRAM[1]), 

    I2C_INTERRUPT_HANDLERF	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Receive_Overflow_IndicatoR_HANDLERF	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Write_Collision_HANDLERF	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@init_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@init_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_init@init_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@init_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_init@init_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandeler@init_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@init_obj$EXT_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@init_obj$EXT_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_init@init_obj$EXT_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_init@init_obj$EXT_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_data_char@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_data_char_posit@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_data_string_posit@data	PTR unsigned char  size(2) Largest target is 14
		 -> str(BANK0[6]), STR_11(CODE[8]), STR_5(CODE[7]), STR_7(CODE[14]), 
		 -> STR_9(CODE[7]), 

    lcd_4bit_send_data_string_posit@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_send_4bit_command_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_send_4bit_enable@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_set_cursor_4bit@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    memset@dest	PTR void  size(1) Largest target is 6
		 -> str(BANK0[6]), 

    memset@p	PTR unsigned char  size(1) Largest target is 6
		 -> str(BANK0[6]), 

    MODE_configure@hal_timer1$F3956@TMR$TIMER1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    MODE_configure@TMR$TIMER0_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    motor_initialize@motor	PTR const struct . size(1) Largest target is 2
		 -> motor_1(BANK0[2]), 

    motor_move_left@motor	PTR const struct . size(1) Largest target is 2
		 -> motor_1(BANK0[2]), 

    motor_stop@motor	PTR const struct . size(1) Largest target is 2
		 -> motor_1(BANK0[2]), 

    MSSP_12C_Interrupt_configuration@i2c$I2C_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    MSSP_12C_Interrupt_configuration@i2c$I2C_Receive_Overflow_IndicatoR_HANDLER	PTR FTN()void  size(2) Largest target is 0

    MSSP_12C_Interrupt_configuration@i2c$I2C_Write_Collision_HANDLER	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2c_MODE_Init@i2c$I2C_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2c_MODE_Init@i2c$I2C_Receive_Overflow_IndicatoR_HANDLER	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2c_MODE_Init@i2c$I2C_Write_Collision_HANDLER	PTR FTN()void  size(2) Largest target is 0

    MSSP_SPI_INTERRUPT_HANDLERF	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    OSC_configure@TMR$TIMER1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    Prescaler_configure@TMR$TIMER0_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    PWM_set_Duty@_ccp	PTR const struct . size(1) Largest target is 15
		 -> ccp_obj(BANK0[15]), 

    PWM_set_Duty@_ccp$CCP1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    PWM_set_Duty@_ccp$CCP2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    RB4_InterruptHandeler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandeler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandeler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandeler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandeler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandeler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandeler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandeler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    register_configure@hal_timer1$F3962@TMR$TIMER1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    register_configure@hal_timer3$F4327@TMR$TIMER3_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    register_configure@TMR$TIMER0_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S1102$CCP1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S1102$CCP2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S1701$EUSART_FRAMING_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S1701$EUSART_OVERRUN_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S1701$EUSART_RX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S1701$EUSART_TX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S2330$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2368$EXT_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 0

    S2368$EXT_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 0

    S2964$I2C_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S2964$I2C_Receive_Overflow_IndicatoR_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S2964$I2C_Write_Collision_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S3389$MSSP_SPI_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S3725$TIMER0_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S3895$TIMER1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S4143$TIMER2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4277$TIMER3_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S5145$buffer	PTR unsigned char  size(2) Largest target is 0

    S5145$source	PTR const unsigned char  size(2) Largest target is 0

    S659$ACD_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    selected_timer@_ccp	PTR const struct . size(1) Largest target is 15
		 -> ccp_obj(BANK0[15]), 

    selected_timer@_ccp$CCP1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    selected_timer@_ccp$CCP2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(1) Largest target is 6
		 -> str(BANK0[6]), 

    Spi_Init@spi$MSSP_SPI_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    spi_interrupt_configuration@spi$MSSP_SPI_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    spi_slave_mode_configuration@spi$MSSP_SPI_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 6
		 -> convert_uint16_to_string@temp(COMRAM[6]), 

    START_PWM@_ccp	PTR const struct . size(1) Largest target is 15
		 -> ccp_obj(BANK0[15]), 

    START_PWM@_ccp$CCP1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    START_PWM@_ccp$CCP2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    STOP_PWM@_ccp$CCP1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    STOP_PWM@_ccp$CCP2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    temp_sens$ACD_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TIMER0_INTERRUPPT	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TIMER1_INTERRUPPT_HANDLERF	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TIMER3_INTERRUPT_HANDLERF	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    tm2$TIMER2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TMR0_Init@TMR$TIMER0_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    TMR1_Init@TMR$TIMER1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    TMR2_Init@TMR	PTR const struct . size(1) Largest target is 6
		 -> tm2(BANK0[6]), 

    TMR2_Init@TMR$TIMER2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TMR2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    TMR3_Init@TMR$TIMER3_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(ABS[1]), TRISC(SFR[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _motor_stop->_gpio_pin_write_logic
    _motor_move_left->_gpio_pin_write_logic
    _lcd_4bit_send_data_string_posit->_lcd_set_cursor_4bit
    _lcd_4bit_send_data_char_posit->_lcd_set_cursor_4bit
    _lcd_set_cursor_4bit->_lcd_4bit_send_command
    _lcd_4bit_send_data_char->_lcd_send_4bit_command_data
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _ccp_init->_CCP_INIt
    _CCP_INIt->_configure_mode
    _configure_mode->___fltol
    ___fladd->___fldiv
    _app_initialize->_lcd_4bit_initialize
    _motor_initialize->_gpio_pin_intialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bit_command_data
    _lcd_send_4bit_enable->_gpio_pin_write_logic
    _lcd_send_4bit_command_data->_gpio_pin_write_logic
    _gpio_pin_intialize->_gpio_pin_write_logic
    _ADC_INIT->_adc_configure_pin
    _ADC_INIT->_adc_select_Voltage
    _ADC_INIT->_adc_select_format
    _TMR_INIT->_TMR2_Init
    _PWM_set_Duty->___fltol
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _ADC_GetConversion_Blocking->_Adc_select_Channel
    _Adc_select_Channel->_adc_configure_pin

Critical Paths under _InterruptManager in COMRAM

    _InterruptManager->_RB4_ISR
    _InterruptManager->_RB5_ISR
    _InterruptManager->_RB6_ISR
    _InterruptManager->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _ccp_init->_CCP_INIt

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  165159
         _ADC_GetConversion_Blocking
               _Adc_start_conversion
                       _PWM_set_Duty
                           _TMR_INIT
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                     _app_initialize
                           _ccp_init
           _convert_uint16_to_string
      _lcd_4bit_send_data_char_posit
    _lcd_4bit_send_data_string_posit
                    _motor_move_left
                         _motor_stop
 ---------------------------------------------------------------------------------
 (1) _motor_stop                                           2     1      1    5058
                                              9 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _motor_move_left                                      2     1      1    5286
                                              9 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_data_string_posit                      6     1      5   37188
                                             21 COMRAM     6     1      5
            _lcd_4bit_send_data_char
                _lcd_set_cursor_4bit
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_data_char_posit                        5     1      4   36253
                                             21 COMRAM     5     1      4
            _lcd_4bit_send_data_char
                _lcd_set_cursor_4bit
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor_4bit                                  6     3      3   18769
                                             15 COMRAM     6     3      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_data_char                              3     1      2   16718
                                             12 COMRAM     3     1      2
               _gpio_pin_write_logic
         _lcd_send_4bit_command_data
               _lcd_send_4bit_enable
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                            11     8      3    4798
                                             43 COMRAM    11     8      3
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    3591
                                             26 COMRAM    17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2936
                                             22 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    2586
                                             11 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              1 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              7 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     780
                                              1 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _ccp_init                                             0     0      0   21377
                           _CCP_INIt
                          _START_PWM
 ---------------------------------------------------------------------------------
 (2) _START_PWM                                            3     2      1     127
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _CCP_INIt                                             3     2      1   21250
                                            102 COMRAM     1     0      1
                                              0 BANK1      1     1      0
                      _ccp_interrupt
                     _configure_mode
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (3) _configure_mode                                      11    10      1   13384
                                             91 COMRAM    11    10      1
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                     _selected_timer
 ---------------------------------------------------------------------------------
 (4) _selected_timer                                       2     1      1     370
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3344
                                             65 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _ccp_interrupt                                        1     0      1     164
                                              1 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _app_initialize                                       1     1      0   34261
                                             19 COMRAM     1     1      0
                           _ADC_INIT
                _lcd_4bit_initialize
                   _motor_initialize
 ---------------------------------------------------------------------------------
 (2) _motor_initialize                                     2     1      1    7577
                                             12 COMRAM     2     1      1
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  4     3      1   25963
                                             15 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   18086
                                             12 COMRAM     3     1      2
               _gpio_pin_write_logic
         _lcd_send_4bit_command_data
               _lcd_send_4bit_enable
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bit_enable                                 2     1      1    5288
                                              9 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bit_command_data                           4     2      2    5726
                                              9 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   3     2      1    7410
                                              9 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    4891
                                              1 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         7     6      1     635
                                              1 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (2) _ADC_INIT                                             6     4      2     709
                                              4 COMRAM     6     4      2
                  _adc_configure_pin
                 _adc_select_Voltage
                  _adc_select_format
 ---------------------------------------------------------------------------------
 (3) _adc_select_format                                    4     1      3     151
                                              1 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _adc_select_Voltage                                   4     1      3     151
                                              1 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _TMR_INIT                                             0     0      0     216
                          _TMR2_Init
 ---------------------------------------------------------------------------------
 (2) _TMR2_Init                                            3     2      1     216
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _PWM_set_Duty                                        11    10      1    9602
                                             91 COMRAM    10     9      1
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1528
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     783
                                             81 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2940
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    3723
                                             40 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion_Blocking                           5     1      4    1805
                                              9 COMRAM     5     1      4
          _Adc_Get_conversion_result
                 _Adc_select_Channel
               _Adc_start_conversion
 ---------------------------------------------------------------------------------
 (1) _Adc_start_conversion                                 3     1      2     341
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _Adc_select_Channel                                   5     2      3     522
                                              4 COMRAM     5     2      3
                  _adc_configure_pin
 ---------------------------------------------------------------------------------
 (3) _adc_configure_pin                                    4     4      0      29
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Adc_Get_conversion_result                            7     4      3     406
                                              1 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManager                                     0     0      0     176
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                  _EUSART_RX_ASY_ISR
                  _EUSART_TX_ASY_ISR
              _I2C_BUS_COLLISION_ISR
                  _I2C_MODULE_TR_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                       _MSSP_Spi_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR3_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RB7_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB6_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB5_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _MSSP_Spi_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MODULE_TR_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_BUS_COLLISION_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_TX_ASY_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_RX_ASY_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CCP2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion_Blocking
     _Adc_Get_conversion_result
     _Adc_select_Channel
       _adc_configure_pin
     _Adc_start_conversion
   _Adc_start_conversion
   _PWM_set_Duty
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _TMR_INIT
     _TMR2_Init
   ___fldiv
   ___flmul
   ___fltol
   ___xxtofl
   _app_initialize
     _ADC_INIT
       _adc_configure_pin
       _adc_select_Voltage
       _adc_select_format
     _lcd_4bit_initialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_send_4bit_command_data
           _gpio_pin_write_logic
         _lcd_send_4bit_enable
           _gpio_pin_write_logic
     _motor_initialize
       _gpio_pin_intialize
   _ccp_init
     _CCP_INIt
       _ccp_interrupt
       _configure_mode
         ___fladd
         ___fldiv
         ___flmul
         ___fltol
         ___xxtofl
         _selected_timer
       _gpio_pin_intialize
     _START_PWM
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _lcd_4bit_send_data_char_posit
     _lcd_4bit_send_data_char
       _gpio_pin_write_logic
       _lcd_send_4bit_command_data
       _lcd_send_4bit_enable
     _lcd_set_cursor_4bit
       _lcd_4bit_send_command
   _lcd_4bit_send_data_string_posit
     _lcd_4bit_send_data_char
     _lcd_set_cursor_4bit
   _motor_move_left
     _gpio_pin_write_logic
   _motor_stop
     _gpio_pin_write_logic

 _InterruptManager (ROOT)
   _ADC_ISR
   _CCP1_ISR
   _CCP2_ISR
   _EUSART_RX_ASY_ISR
   _EUSART_TX_ASY_ISR
   _I2C_BUS_COLLISION_ISR
   _I2C_MODULE_TR_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _MSSP_Spi_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
   _TMR1_ISR
   _TMR2_ISR
   _TMR3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      1      32       7       19.5%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     67      7D       1       99.2%
BITBIGSFRhlhhlh     18      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlllhh       6      0       0      46        0.0%
BITBIGSFRhlhhll      5      0       0      39        0.0%
BITBIGSFRllhllh      4      0       0      43        0.0%
BITBIGSFRllllh       4      0       0      47        0.0%
BITBIGSFRllhllh      4      0       0      44        0.0%
BITBIGSFRlllll       4      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      42        0.0%
BITBIGSFRllhlh       1      0       0      41        0.0%
BITBIGSFRllhh        1      0       0      40        0.0%
BITBIGSFRllhlll      1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12F      12        0.0%
DATA                 0      0     12F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat May 18 17:29:56 2024

                         ??_InterruptManager 0002                  lcd_4bit_send_data_char@data 000E  
                      _I2C_BUS_COLLISION_ISR 4314                                 ___fldiv@aexp 0041  
                               ___fldiv@bexp 0040                                 ___fldiv@sign 0039  
                                _SSPSTATbits 0FC7                                           l71 3472  
                                         l81 3E52                                           l76 3EAE  
                                         l86 4052                                 ___awdiv@sign 0007  
                    Adc_start_conversion@ret 0004                                          l102 39F2  
                                        l200 38C2                                          l221 41C4  
                                        l231 40FC                                          l401 3C56  
                                        l170 395C                                          l180 3CC4  
                                        l236 40C4                                          l421 3B40  
                                        l413 3D30                                          l430 3B76  
                                        l190 4016                                          l415 3D32  
                                        l521 2BBE                                          l425 3B6A  
                                        l363 3192                                          l380 4210  
                                        l428 3B72                                          l365 3286  
                                        l509 3F4E                                          l375 408C  
                                        l448 354A                                          l544 132E  
                                        l393 36CC                                          l378 4208  
                                        l379 420E                                          l581 1616  
                                        l398 3C32                                          l815 3066  
                                        l495 3BE6                                          l834 3176  
                                        l587 3F04                                          l595 3D98  
                                        l855 3DF6                    _RB5_InterruptHandeler_Low 00A2  
                                        _PR2 0FCB      _I2C_Receive_Overflow_IndicatoR_HANDLERF 0096  
                                        _abs 4132                                          _tm2 00D6  
                            __end_of_ADC_ISR 4328                                          _ret 00BF  
                                        _str 00D0                                 ___awmod@sign 0007  
                            ?_configure_mode 005C                                          wreg 0FE8  
                                 _TXSTA1bits 0FAC                            ?_motor_initialize 000D  
                                led_on@F3059 0077                                 ___flmul@aexp 0021  
                               ___flmul@bexp 0022                                 ___flmul@sign 001C  
                               ___flmul@temp 0027                                 ___flmul@prod 0023  
                           ??_app_initialize 0014                    ?_convert_uint16_to_string 002C  
                         ??_motor_initialize 000E                              __end_of_RB4_ISR 42BC  
                            __end_of_RB5_ISR 42A2                              __end_of_RB6_ISR 4288  
                            __end_of_RB7_ISR 426E                                 ___fltol@exp1 005B  
                                       ?_abs 0008                                         l2042 377C  
                                       l2029 360E                                         l2412 1B9C  
                                       l2421 1E0A                                         l2422 1DF8  
                                       l2326 1806                                         l2095 338C  
                                       l1631 3A96                                         l2343 1920  
                                       l2335 1AD6                                         l2327 17F4  
                                       l2416 1F00                                         l2352 19F0  
                                       l2328 17BA                                         l2520 2D8C  
                          ??_motor_move_left 000B                                         l1633 3B02  
                                       l2353 19DE                                         l2530 414C  
                                       l2419 1D92                                         l2380 26A0  
                                       l2460 2E7C                                         l2429 1EC2  
                                       l2453 2DE4                                         l2533 4164  
                                       l2382 2500                                         l2526 3FD6  
                                       l2391 2546                                         l2456 2F40  
                                       l2393 25BE                                         l2385 24C4  
                                       l2545 3826                                         l2394 25AC  
                                       l2482 4130                                         l2467 2ED8  
                                       l2475 4194                                         l1764 3F96  
                                       l2556 4328                                         l1759 4252  
                                       l7000 3B18                                         l6200 36E8  
                                       l7002 3B1C                                         l6130 307C  
                                       l7010 103A                                         l6210 371C  
                                       l6202 36EC                                         l1795 41EC  
                                       l7004 3B48                                         l6140 314A  
                                       l6132 309C                                         l6300 3D4E  
                                       l7020 108A                                         l7012 1054  
                                       l6220 3756                                         l6212 3724  
                                       l6204 36FA                                         l7006 3B76  
                                       l6134 30A4                                         l6142 3174  
                                       l6310 1618                                         l6302 3D56  
                                       l7022 1096                                         l7030 1108  
                                       l6150 354C                                         l6214 3732  
                                       l6222 375C                                         l6206 3702  
                                       l6230 377E                                         l6136 30F4  
                                       l6128 3068                                         l7120 3ED2  
                                       l6400 17D4                                         l6320 1654  
                                       l6312 1624                                         l6304 3D70  
                                       l7040 114A                                         l7024 10A2  
                                       l7016 1072                                         l6160 3578  
                                       l6152 3550                                         l6224 376C  
                                       l6216 3748                                         l6208 3714  
                                       l6240 37F6                                         l6232 378E  
                                       l7200 3828                                         l6250 2F56  
                                       l7130 3F00                                         l7122 3ED4  
                                       l7114 3EB0                                         l6410 1814  
                                       l6402 17D8                                         l6330 1684  
                                       l6322 1664                                         l6314 1632  
                                       l6306 3D78                                         l7050 11D6  
                                       l7034 1126                                         l7042 1156  
                                       l7018 107E                                         l7026 10AE  
                                       l6170 35A6                                         l6162 3580  
                                       l6154 355E                                         l6226 3774  
                                       l6218 3750                                         l6234 379E  
                                       l7210 387E                                         l7202 382E  
                                       l6260 3024                                         l6252 2F76  
                                       l7132 3F02                                         l7116 3EC0  
                                       l7124 3EDA                                         l6500 1AAE  
                                       l6420 1856                                         l6412 1824  
                                       l6404 17E6                                         l6340 16AE  
                                       l6332 1696                                         l6324 1666  
                                       l6316 1634                                         l6308 3D94  
                                       l7060 136A                                         l7052 11DE  
                                       l7036 1132                                         l7028 10FC  
                                       l6180 35E0                                         l6172 35AE  
                                       l6164 3584                                         l6156 3566  
                                       l6244 4132                                         l6236 37A8  
                                       l7140 3FCE                                         l7204 3842  
                                       l7212 3886                                         l6254 2F7E  
                                       l6262 3064                                         l6270 3C58  
                                       l7150 33BE                                         l7126 3EEA  
                                       l7118 3EC4                                         l6502 1AB0  
                                       l6430 1884                                         l6422 1864  
                                       l6406 17E8                                         l6342 16BE  
                                       l6350 16E8                                         l6334 1698  
                                       l6318 1644                                         l6326 166E  
                                       l7062 1376                                         l7070 13A6  
                                       l7038 113E                                         l7046 119C  
                                       l7054 1332                                         l6190 3606  
                                       l6182 35E2                                         l6174 35BC  
                                       l6166 358C                                         l6158 356A  
                                       l6246 4140                                         l6238 37C4  
                                       l7134 3F98                                         l7206 3856  
                                       l7214 38C0                                         l6600 252C  
                                       l6520 2334                                         l6512 2308  
                                       l6256 2FD4                                         l6248 2F42  
                                       l6272 3C68                                         l7160 33D0  
                                       l7144 338E                                         l7128 3EEE  
                                       l6504 1AB6                                         l6440 18F0  
                                       l6432 188E                                         l6424 1870  
                                       l6416 1838                                         l6408 17F2  
                                       l6360 1720                                         l6352 16F8  
                                       l6344 16CE                                         l6336 169E  
                                       l6328 167E                                         l7080 141E  
                                       l7064 1382                                         l7056 134C  
                                       l7048 11B8                                         l6184 35E8  
                                       l6176 35C2                                         l6168 359E  
                                       l7136 3FA0                                         l7208 386A  
                                       l6610 2568                                         l6602 2536  
                                       l6530 236E                                         l6522 2344  
                                       l6514 2314                                         l6274 3C70  
                                       l6290 4004                                         l6282 3FD8  
                                       l7170 341A                                         l7162 33E0  
                                       l7146 33A2                                         l6506 1AC4  
                                       l6442 1900                                         l6426 1874  
                                       l6418 1848                                         l6434 1894  
                                       l6370 1734                                         l6362 1724  
                                       l6354 170A                                         l6346 16DE  
                                       l6338 16AC                                         l7082 142A  
                                       l7090 1488                                         l7066 138E  
                                       l7074 13F4                                         l7410 3F46  
                                       l7402 3F06                                         l6178 35D8  
                                       l6186 35EE                                         l6194 36CE  
                                       l7138 3FB0                                         l6620 25DA  
                                       l6612 2576                                         l6604 2544  
                                       l6540 239A                                         l6532 2374  
                                       l6524 2354                                         l6516 2322  
                                       l6700 1C20                                         l7420 3AEA  
                                       l6276 3CC2                                         l6292 4010  
                                       l6284 3FE8                                         l7180 3456  
                                       l7172 3426                                         l7164 33EE  
                                       l7156 33C2                                         l7148 33AA  
                                       l6508 1AC6                                         l6460 1982  
                                       l6452 195A                                         l6436 18BA  
                                       l6444 1910                                         l6428 1882  
                                       l6380 1748                                         l6372 1738  
                                       l6364 1728                                         l6356 1718  
                                       l6348 16E0                                         l7092 14A4  
                                       l7084 1436                                         l7068 139A  
                                       l7404 3F06                                         l6188 35FE  
                                       l6196 36D2                                         l6630 2646  
                                       l6622 25E8                                         l6614 25A4  
                                       l6606 2556                                         l6550 23D4  
                                       l6542 23AA                                         l6534 237A  
                                       l6526 2356                                         l6518 2324  
                                       l6710 1C62                                         l6702 1C2C  
                                       l7430 3B00                                         l7422 3AEC  
                                       l7414 3A82                                         l6278 3CC2  
                                       l6294 4014                                         l6286 3FF0  
                                       l7182 3462                                         l7174 3432  
                                       l7166 33FA                                         l7158 33CE  
                                       l6462 198A                                         l6454 1964  
                                       l6446 1936                                         l6438 18EE  
                                       l6470 19AE                                         l6390 175C  
                                       l6382 174C                                         l6374 173C  
                                       l6366 172C                                         l6358 171C  
                                       l7094 14C2                                         l7078 1412  
                                       l7086 1442                                         l7406 3F20  
                                       l7270 4178                                         l6198 36E0  
                                       l7190 3E08                                         l6640 2694  
                                       l6632 2660                                         l6624 2612  
                                       l6608 2564                                         l6552 23EA  
                                       l6544 23BA                                         l6536 2388  
                                       l6528 235E                                         l6720 1CC4  
                                       l6712 1C6E                                         l6704 1C38  
                                       l7600 2AC2                                         l7424 3AEE  
                                       l7416 3A92                                         l6288 3FFC  
                                       l7176 343E                                         l7168 3414  
                                       l7184 3470                                         l6480 1A00  
                                       l6472 19B2                                         l6464 198E  
                                       l6456 1972                                         l6448 1946  
                                       l6392 1786                                         l6384 1750  
                                       l6376 1740                                         l6368 1730  
                                       l7096 14CA                                         l7408 3F2C  
                                       l7272 417A                                         l7280 4116  
                                       l7520 38D8                                         l7192 3E10  
                                       l7440 4050                                         l6642 2696  
                                       l6634 267C                                         l6618 25CE  
                                       l6626 2616                                         l6570 243E  
                                       l6554 23FA                                         l6562 241A  
                                       l6546 23BC                                         l6538 238A  
                                       l6730 1D5A                                         l6722 1CD0  
                                       l6714 1C7E                                         l6706 1C46  
                                       l6650 1AD8                                         l6802 3318  
                                       l7602 2B90                                         l7426 3AF0  
                                       l7418 3A98                                         l7178 344A  
                                       l7290 41AE                                         l6490 1A66  
                                       l6482 1A0C                                         l6474 19C0  
                                       l6466 199E                                         l6458 1974  
                                       l6394 17A2                                         l6386 1754  
                                       l6378 1744                                         l6298 3D34  
                                       l7266 4166                                         l7282 4126  
                                       l7274 40FE                                         l7530 392C  
                                       l7522 38E8                                         l7514 38C4  
                                       l7194 3E50                                         l7434 4018  
                                       l7450 398C                                         l9300 41EE  
                                       l6636 2680                                         l6628 2630  
                                       l6580 2490                                         l6572 2458  
                                       l6564 242A                                         l6556 2402  
                                       l6548 23C4                                         l6740 1DB0  
                                       l6732 1D78                                         l6724 1CEC  
                                       l6716 1C98                                         l6708 1C52  
                                       l6660 1B14                                         l6652 1AE4  
                                       l6820 337C                                         l6812 3340  
                                       l6804 3322                                         l7604 2BA4  
                                       l7428 3AF2                                         l7292 41BE  
                                       l6492 1A76                                         l6484 1A1A  
                                       l6476 19D6                                         l6468 19A0  
                                       l6396 17B2                                         l6388 1758  
                                       l7268 416E                                         l6900 2D00  
                                       l7276 4106                                         l7532 3940  
                                       l7524 38F0                                         l7516 38C8  
                                       l7188 3DF8                                         l7436 4028  
                                       l7452 39BA                                         l7444 395E  
                                       l7540 40C6                                         l9310 3610  
                                       l9302 4200                                         l6638 268E  
                                       l6590 24EC                                         l6582 24A0  
                                       l6574 2468                                         l6566 242A  
                                       l6558 2406                                         l6750 1E1A  
                                       l6742 1DB4                                         l6734 1D82  
                                       l6726 1D16                                         l6718 1CA8  
                                       l6670 1B46                                         l6662 1B24  
                                       l6654 1AF2                                         l6814 334C  
                                       l6806 332C                                         l6830 2DF4  
                                       l7606 2BBC                                         l7294 41C2  
                                       l7286 4196                                         l6494 1A96  
                                       l6486 1A54                                         l6398 17C8  
                                       l6902 2D10                                         l6910 2D5C  
                                       l7278 410E                                         l7534 3942  
                                       l7526 3908                                         l7518 38D4  
                                       l7198 3828                                         l7438 4030  
                                       l7454 39BE                                         l7446 396E  
                                       l7542 40D6                                         l9320 367A  
                                       l9312 3622                                         l9304 420A  
                                       l6592 24EE                                         l6584 24B4  
                                       l6576 2478                                         l6760 1E7C  
                                       l6752 1E26                                         l6744 1DC2  
                                       l6736 1D90                                         l6728 1D4C  
                                       l6680 1B86                                         l6672 1B54  
                                       l6664 1B2A                                         l6656 1AF4  
                                       l6816 335C                                         l6840 2E32  
                                       l6832 2E0A                                         l6824 2D90  
                                       l6920 3D9A                                         l7288 41A6  
                                       l6496 1A9A                                         l6488 1A56  
                                       l6904 2D26                                         l7528 3914  
                                       l7536 395A                                         l7456 39F0  
                                       l7448 3976                                         l7544 40DE  
                                       l7560 40C2                                         l7552 408E  
                                       l9400 26A6                                         l9322 3694  
                                       l9314 3632                                         l6594 24FE  
                                       l6586 24C2                                         l6578 2488  
                                       l6770 1EE4                                         l6762 1E90  
                                       l6754 1E34                                         l6746 1DF0  
                                       l6738 1DA2                                         l6690 1BD0  
                                       l6682 1B8C                                         l6674 1B56  
                                       l6666 1B3A                                         l6658 1B04  
                                       l6818 336C                                         l6850 2EBA  
                                       l6842 2E64                                         l6826 2DA0  
                                       l7810 423E                                         l9250 318A  
                                       l6922 3DAA                                         l6498 1AA8  
                                       l9330 3B78                                         l6906 2D44  
                                       l6914 2D68                                         l7546 40F6  
                                       l7554 409E                                         l9410 2728  
                                       l9402 26AA                                         l9324 36C6  
                                       l9316 363A                                         l9308 3610  
                                       l6596 2510                                         l6588 24CE  
                                       l6772 1EE6                                         l6764 1EAA  
                                       l6756 1E5E                                         l6692 1BDC  
                                       l6684 1BAC                                         l6676 1B66  
                                       l6668 1B40                                         l6780 3288  
                                       l6860 2F10                                         l6852 2EC8  
                                       l6844 2E66                                         l6836 2E1E  
                                       l6828 2DAE                                         l7812 4242  
                                       l9260 31FE                                         l9252 3194  
                                       l6924 3DCA                                         l6932 3E54  
                                       l9340 3BC8                                         l9332 3B88  
                                       l6908 2D46                                         l7548 40FA  
                                       l7556 40A6                                         l9420 27E8  
                                       l9412 277A                                         l9404 26AE  
                                       l9318 3654                                         l9326 36CA  
                                       l6950 348C                                         l6942 3476  
                                       l9350 3BE8                                         l6598 2526  
                                       l6766 1EC6                                         l6774 1EEC  
                                       l6758 1E62                                         l6694 1BE6  
                                       l6686 1BBC                                         l6678 1B76  
                                       l6790 32DE                                         l6782 329E  
                                       l6862 2F20                                         l6854 2EE6  
                                       l6846 2E72                                         l6838 2E26  
                                       l7590 2990                                         l7814 4246  
                                       l9270 326C                                         l9262 3232  
                                       l9254 31B2                                         l9246 3178  
                                       l6926 3DD2                                         l6934 3E64  
                                       l9342 3BCC                                         l9334 3B8C  
                                       l6870 2BC0                                         l7558 40BE  
                                       l9430 284C                                         l9422 27FE  
                                       l9414 279A                                         l9406 26BE  
                                       l6960 34AA                                         l6952 3492  
                                       l6944 347A                                         l9360 3C40  
                                       l9352 3BE8                                         l6776 1EF0  
                                       l6768 1ED6                                         l6696 1BFC  
                                       l6792 32EE                                         l6864 2F2E  
                                       l6856 2EE8                                         l6848 2EAE  
                                       l7592 29AA                                         l7816 424A  
                                       l7808 4234                                         l9272 326E  
                                       l9264 3266                                         l9256 31C4  
                                       l9248 3178                                         l6928 3DF4  
                                       l6936 3E6C                                         l9344 3BD6  
                                       l9336 3BA6                                         l6880 2C08  
                                       l6872 2BE4                                         l9440 28B4  
                                       l9432 2866                                         l9424 2818  
                                       l9416 27AE                                         l9408 26D6  
                                       l6962 34B0                                         l6954 3498  
                                       l6946 3480                                         l9290 4080  
                                       l9282 4054                                         l9362 3C50  
                                       l9354 3BFA                                         l6698 1C08  
                                       l6794 32F2                                         l6786 32B2  
                                       l6866 2F30                                         l6858 2EEC  
                                       l7594 2A78                                         l9274 327E  
                                       l9266 3268                                         l9258 31E4  
                                       l6938 3EAC                                         l9346 3BDE  
                                       l9338 3BAE                                         l9370 3F72  
                                       l6890 2C7E                                         l6882 2C26  
                                       l6874 2BEC                                         l9450 290E  
                                       l9442 28BC                                         l9434 286E  
                                       l9426 2820                                         l9418 27C8  
                                       l6964 34B6                                         l6956 349E  
                                       l6948 3486                                         l6972 34C8  
                                       l9292 4086                                         l9284 4054  
                                       l9364 3C54                                         l9356 3C0A  
                                       l6796 3300                                         l6788 32DC  
                                       l7596 2A8C                                         l7588 2988  
                                       l6980 3CC6                                         l9276 3280  
                                       l9268 326A                                         l9380 41CA  
                                       l9620 10CE                                         l9372 3F74  
                                       l6892 2CB2                                         l6884 2C44  
                                       l6876 2BFA                                         l9444 28D2  
                                       l9436 2884                                         l9428 2836  
                                       l9452 2912                                         l6966 34BC  
                                       l6958 34A4                                         l9294 408A  
                                       l9286 4066                                         l9358 3C12  
                                       l7598 2AA8                                         l6990 3D2A  
                                       l6982 3CDA                                         l9278 3284  
                                       l9630 304E                                         l9382 41D4  
                                       l9622 1176                                         l9374 3F86  
                                       l6894 2CCE                                         l6886 2C5C  
                                       l6878 2BFE                                         l9454 293A  
                                       l9446 28EC                                         l9438 289A  
                                       l9632 34DC                                         l6968 34C2  
                                       l9288 406E                                         l6992 3D32  
                                       l6984 3CDE                                         l9384 41DE  
                                       l9624 13C6                                         l9376 3F8E  
                                       l9368 3F50                                         l6896 2CE0  
                                       l6888 2C66                                         l9456 295E  
                                       l9448 28F4                                         l9298 41EE  
                                       l6986 3D02                                         l6978 3CC6  
                                       l9378 41C6                                         l9626 1462  
                                       l6898 2CF0                                         l9618 389A  
                                       l6996 3B04                                         l6988 3D08  
                                       l9628 315E                                         l6998 3B04  
                                       l9398 26A2                                         STR_1 1035  
                                       STR_2 1035                                         STR_4 1027  
                 _RB5_InterruptHandeler_High 00A4                                         STR_5 1027  
                                       STR_6 1011                                         STR_7 1011  
                                       STR_8 102E                                         STR_9 102E  
                                       _LATA 0F89                                         _LATB 0F8A  
                                       _LATC 0F8B                                         _LATD 0F8C  
                                       _LATE 0F8D                                         u5000 309C  
                                       u5001 3098                                         u5100 36FA  
                                       u5101 36F6                                         u5014 30C2  
                                       u5030 355E                                         u5110 3714  
                                       u5015 30BE                                         u5031 355A  
                                       u5111 3710                                         u6000 1BBC  
                                       u5200 2F56                                         u5024 3112  
                                       u5040 3578                                         u5120 3732  
                                       u6001 1BB8                                         u5201 2F52  
                                       u5025 310E                                         u5041 3574  
                                       u5121 372E                                         u6010 1D36  
                                       u5210 2F76                                         u5050 359E  
                                       u5130 3748                                         u5211 2F72  
                                       u5051 359A                                         u5131 3744  
                                       u6100 1EAA                                         u6020 1D90  
                                       u5300 3D94                                         u5060 35BC  
                                       u5140 376C                                         u6101 1EA6  
                                       u6021 1D8C                                         u5301 3D90  
                                       u5061 35B8                                         u5141 3768  
                                       u6110 1EE4                                         u6030 1DB0  
                                       u5310 1632                                         u5070 35D8  
                                       u5150 378E                                         u6111 1EE0  
                                       u6031 1DAC                                         u6015 1D2C  
                                       u5311 162E                                         u5071 35D4  
                                       u5151 378A                                         u6040 1DC2  
                                       u6120 329E                                         u6200 2DAE  
                                       u5240 303A                                         u5224 2F9C  
                                       u5400 1786                                         u5320 1644  
                                       u5080 35FE                                         u5160 379E  
                                       u7000 40D6                                         u6041 1DBE  
                                       u6121 329A                                         u6201 2DAA  
                                       u5241 3034                                         u5225 2F98  
                                       u5401 1782                                         u5321 1640  
                                       u5081 35FA                                         u5161 379A  
                                       u7001 40D2                                         u6050 1DF0  
                                       u6130 32D2                                         u6210 2E0A  
                                       u5250 303C                                         u5234 2FF2  
                                       u5410 179E                                         u5330 1654  
                                       u5090 36E0                                         u5170 37C4  
                                       u7010 409E                                         u6051 1DEC  
                                       u6211 2E06                                         u5235 2FEE  
                                       u5411 1798                                         u5331 1650  
                                       u5091 36DC                                         u5171 37C0  
                                       u7011 409A                                         u6060 1E06  
                                       u6140 3300                                         u6220 2E60  
                                       u5260 3C68                                         u5500 1882  
                                       u5420 17A0                                         u5340 1696  
                                       u5180 37F6                                         u6300 2C26  
                                       u6061 1E02                                         u6141 32FC  
                                       u6221 2E5C                                         u5261 3C64  
                                       u5501 187E                                         u5341 1692  
                                       u5181 37F2                                         u6301 2C22  
                                       u6070 1E1A                                         u6150 3314  
                                       u6230 2EAA                                         u5270 3FE8  
                                       u5510 18BA                                         u5430 17C8  
                                       u5350 16AC                                         u5190 4140  
                                       u6310 2C44                                         u6071 1E16  
                                       u6151 3310                                         u6135 32C8  
                                       u6231 2EA6                                         u5271 3FE4  
                                       u5511 18B6                                         u5431 17C4  
                                       u5351 16A8                                         u5191 413C  
                                       u6311 2C40                                         u6080 1E34  
                                       u6160 333C                                         u6240 2EC8  
                                       u6400 3DCA                                         u5600 19D6  
                                       u5520 1900                                         u5440 17E6  
                                       u5360 16BE                                         u5280 3D4E  
                                       u6320 2C7A                                         u6081 1E30  
                                       u6161 3338                                         u6241 2EC4  
                                       u6401 3DC6                                         u5601 19D2  
                                       u5521 18FC                                         u5441 17E2  
                                       u5361 16BA                                         u5281 3D4A  
                                       u6321 2C74                                         u6090 1E7C  
                                       u6170 335C                                         u6250 2ED8  
                                       u7050 29AA                                         u6410 3E64  
                                       u5610 19EC                                         u5530 1936  
                                       u5450 1806                                         u5370 16CE  
                                       u5290 3D70                                         u6330 2C7C  
                                       u6091 1E78                                         u6171 3358  
                                       u6251 2ED4                                         u7051 29A6  
                                       u6411 3E60                                         u5611 19E8  
                                       u5531 1932                                         u5451 1802  
                                       u5371 16CA                                         u5291 3D6C  
                                       u5700 2322                                         u6180 336C  
                                       u6260 2EE6                                         u7060 2AC2  
                                       u6420 3CDA                                         u5620 1A00  
                                       u5540 1946                                         u5460 1814  
                                       u5380 170A                                         u6500 1122  
                                       u6340 2CE0                                         u5701 231E  
                                       u6181 3368                                         u6261 2EE2  
                                       u7061 2ABE                                         u6421 3CD6  
                                       u5621 19FC                                         u5541 1942  
                                       u5461 1810                                         u5381 1706  
                                       u6501 111E                                         u6341 2CDC  
                                       u5710 2334                                         u6270 2F20  
                                       u6190 2DA0                                         u6430 3D02  
                                       u5630 1A1A                                         u5550 1972  
                                       u5470 1824                                         u5390 1718  
                                       u6510 11B8                                         u6350 2CF0  
                                       u5711 2330                                         u6271 2F1C  
                                       u6191 2D9C                                         u6431 3CFE  
                                       u5631 1A16                                         u5551 196E  
                                       u5471 1820                                         u5391 1714  
                                       u6511 11B4                                         u6351 2CEC  
                                       u5800 24EC                                         u5720 2344  
                                       u6280 2F2E                                         u6440 3D2A  
                                       u5640 1A54                                         u5560 1982  
                                       u5480 1856                                         u6520 11D6  
                                       u6360 2D00                                         u6600 3FCE  
                                       u5801 24E8                                         u5721 2340  
                                       u6281 2F2A                                         u6441 3D26  
                                       u5641 1A50                                         u5561 197E  
                                       u5481 1852                                         u6521 11D2  
                                       u6361 2CFC                                         u6601 3FCA  
                                       u5810 2510                                         u5730 2388  
                                       u6450 3B18                                         u6610 33A2  
                                       u5650 1A66                                         u5570 199E  
                                       u5490 1864                                         u6530 134C  
                                       u6370 2D10                                         u6290 2BE4  
                                       u5811 250C                                         u5731 2384  
                                       u6451 3B14                                         u6611 339E  
                                       u5651 1A62                                         u5571 199A  
                                       u5491 1860                                         u6531 1348  
                                       u6371 2D0C                                         u6291 2BE0  
                                       u5900 2630                                         u5820 2526  
                                       u5740 239A                                         u6460 3B40  
                                       u6620 33E0                                         u5660 1A76  
                                       u5580 19AE                                         u6540 1366  
                                       u6380 2D58                                         u5901 262C  
                                       u5821 2522                                         u5741 2396  
                                       u6461 3B3C                                         u6621 33DC  
                                       u5661 1A72                                         u5581 19AA  
                                       u6541 1362                                         u6381 2D54  
                                       u5910 2660                                         u5830 2544  
                                       u5750 23AA                                         u6470 3B6A  
                                       u6390 3DAA                                         u5670 1A96  
                                       u5590 19C0                                         u6550 140E  
                                       u6630 3E08                                         u5911 265C  
                                       u5831 2540                                         u5751 23A6  
                                       u6471 3B66                                         u6391 3DA6  
                                       u5671 1A92                                         u5591 19BC  
                                       u6551 140A                                         u6631 3E04  
                                       u9200 3622                                         u5920 268E  
                                       u5840 2564                                         u5760 23EA  
                                       u5680 1AA8                                         u6560 14A4  
                                       u6480 1054                                         u9201 361E  
                                       u5921 268A                                         u5841 2560  
                                       u5761 23E6                                         u5681 1AA4  
                                       u6561 14A0                                         u6481 1050  
                                       u9210 3632                                         u5850 2576  
                                       u5770 242A                                         u5930 1AF2  
                                       u5690 1AC4                                         u6570 14C2  
                                       u6490 106E                                         u9211 362E  
                                       u5851 2572                                         u5771 2426  
                                       u5931 1AEE                                         u5691 1AC0  
                                       u6571 14BE                                         u6491 106A  
                                       u9220 3654                                         u9300 3C40  
                                       u5860 25A4                                         u5780 24A0  
                                       u5940 1B04                                         u6580 3EC0  
                                       u6900 39F0                                         u9221 3650  
                                       u9301 3C3C                                         u5861 25A0  
                                       u5781 249C                                         u5941 1B00  
                                       u6581 3EBC                                         u6901 39EC  
                                       u9230 3694                                         u5870 25BA  
                                       u5790 24C2                                         u5950 1B14  
                                       u9150 318A                                         u4990 307C  
                                       u6590 3EEA                                         u6830 3F20  
                                       u9231 3690                                         u5871 25B6  
                                       u5791 24BE                                         u5951 1B10  
                                       u9151 3186                                         u4991 3078  
                                       u6591 3EE6                                         u6831 3F1C  
                                       u5880 25CE                                         u5960 1B54  
                                       u9160 321A                                         u6840 3F46  
                                       u6680 4194                                         u9320 27FE  
                                       u5881 25CA                                         u5961 1B50  
                                       u9161 3214                                         u6841 3F42  
                                       u6681 4190                                         u9321 27FA  
                                       u5890 25E8                                         u5970 1B66  
                                       u6850 3A92                                         u9170 324E  
                                       u6690 41A6                                         u9250 3B88  
                                       u9330 2836                                         u5891 25E4  
                                       u5971 1B62                                         u6851 3A8E  
                                       u9171 3248                                         u6691 41A2  
                                       u9251 3B84                                         u9331 2832  
                                       u9180 4066                                         u5980 1B76  
                                       u9260 3BA6                                         u6860 4028  
                                       u9340 284C                                         u9245 36AC  
                                       u9181 4062                                         u5981 1B72  
                                       u9261 3BA2                                         u6861 4024  
                                       u9341 2848                                         u9190 4200  
                                       u5990 1BAC                                         u9166 321C  
                                       u9270 3BC8                                         u6870 396E  
                                       u9350 2884                                         u9191 41FC  
                                       u5991 1BA8                                         u9407 3400  
                                       u9271 3BC4                                         u6871 396A  
                                       u9351 2880                                         u9280 3BFA  
                                       u9176 3250                                         u6880 39B2  
                                       u9360 289A                                         u9281 3BF6  
                                       u9417 3416                                         u9361 2896  
                                       u9290 3C0A                                         u6890 39E0  
                                       u9370 28D2                                         u9291 3C06  
                                       u9427 3FFE                                         u6971 38CE  
                                       u9371 28CE                                         u6980 38E8  
                                       u9380 293A                                         u6981 38E4  
                                       u9381 2936                                         u6990 395A  
                                       u6991 3956                                         u6887 39A8  
                                       u6897 39D6                                         u9397 33E6  
                                       _TMR2 0FCC                                         abs@a 0008  
                                       _dbuf 0100                             __end_of_ADC_INIT 3288  
                                       _main 26A2                             __end_of_CCP1_ISR 4324  
                           __end_of_CCP2_ISR 4320                                         _prec 0088  
                                       fsr0h 0FEA                                         fsr1h 0FE2  
                                       indf0 0FEF                                         fsr2h 0FDA  
                                       fsr0l 0FE9                                         indf1 0FE7  
                                       indf2 0FDF                                         fsr1l 0FE1  
                                       fsr2l 0FD9                                         btemp 007E  
                                       prodh 0FF4                                         prodl 0FF3  
                         _adc_select_Voltage 3B04                                         start 000E  
                            ___fldiv@new_exp 003A                        __end_of_ccp_interrupt 3F06  
                           __end_of_CCP_INIt 3BE8                                 ___param_bank 0000  
                      _lcd_4bit_send_command 3E54                            _PWM_set_Duty$5773 0060  
                        ?_adc_select_Voltage 0002                                        ??_abs 000A  
                       _gpio_pin_write_logic 3068                             __end_of_INT0_ISR 4310  
                           __end_of_INT1_ISR 430C                             __end_of_INT2_ISR 4308  
                              ___fltol@sign1 005A                              __end_of___fladd 1AD8  
                                      ?_main 0001                              __end_of___fldiv 26A2  
                            __end_of___awdiv 3610                                        _EEADR 0FA9  
                                      STR_10 101F                                        STR_11 101F  
                            __end_of___awmod 377E                              __end_of___flmul 1F02  
                            __end_of___fltol 338E                              ___awdiv@divisor 0004  
                               led_off@F3064 0076                                        i2l531 431E  
                                      i2l453 4326                                        i2l526 4322  
                                      i2l758 431A                                        i2l767 432A  
                            ___awdiv@counter 0006                                        _RCREG 0FAE  
                               vfpfcnvrt@fmt 000D                                        _TMR0H 0FD7  
                                      _TMR1H 0FCF                                        _TMR0L 0FD6  
                                      _TMR1L 0FCE                                        _TMR3H 0FB3  
                                      _TMR3L 0FB2                                        _SPBRG 0FAF  
                                      _PORTA 0F80                                        _PORTB 0F81  
                                      _PORTC 0F82                                        _PORTD 0F83  
                                      _PORTE 0F84                                        _TRISA 0F92  
                                      _TRISB 0F93                                        _TRISC 0F94  
                                      _TRISD 0F95                                        _TRISE 0F96  
         __end_of_lcd_send_4bit_command_data 3CC6                   _lcd_send_4bit_command_data 3C58  
                                      _TXREG 0FAD                             __end_of_TMR0_ISR 42F2  
                           __end_of_TMR1_ISR 42E6                             __end_of_TMR2_ISR 42FA  
                           __end_of_TMR3_ISR 42DA                                        _lcd_1 00F8  
      __end_of_lcd_4bit_send_data_char_posit 4054                _lcd_4bit_send_data_char_posit 4018  
                                      _flags 00BE        lcd_4bit_send_data_string_posit@colunm 0018  
                                      _fputc 377E                         ??_adc_select_Voltage 0005  
                                      _width 0086                                        _putch 4328  
                           __end_of_TMR_INIT 4254                                        tablat 0FF5  
                                      ttemp5 007F                                        ttemp6 0082  
                                      ttemp7 0086                                        status 0FD8  
                                      wtemp8 007F                              __end_of_sprintf 4132  
                         selected_timer@_ccp 0002                                 _PWM_set_Duty 2986  
                     ?_I2C_BUS_COLLISION_ISR 0001                              __initialization 39F4  
                               __end_of_main 2986           lcd_4bit_send_data_string_posit@lcd 0016  
         lcd_4bit_send_data_string_posit@ret 001B           lcd_4bit_send_data_string_posit@row 0017  
                      ?_gpio_pin_write_logic 0002                  Adc_start_conversion@adc_obj 0002  
          lcd_4bit_send_data_char_posit@data 0019                                    ??_ADC_ISR 0001  
                              _lat_registers 00DE                      _CCP1_INTERRUPT_HANDLERF 00BA  
                                     ??_main 0068                                __activetblptr 0003  
                                  ??_RB4_ISR 0001                                    ??_RB5_ISR 0001  
                                  ??_RB6_ISR 0001                                    ??_RB7_ISR 0001  
                                     ?_fputc 0002                                       _ADRESH 0FC4  
                                     _EEADRH 0FAA                                       _ADRESL 0FC3  
                                     _EEDATA 0FA8                                       _CCPR1L 0FBE  
                                     _CCPR2L 0FBB                                       _EECON2 0FA7  
                           ___awdiv@dividend 0002                                       ?_putch 0001  
                                     i2l1102 4286                                       i2l1113 426C  
                                     i2l1201 21A4                                       i2l1211 2244  
                                     i2l1203 21C4                                       i2l1221 22E4  
                                     i2l1213 2264                                       i2l1205 21E4  
                                     i2l1215 2284                                       i2l1207 2204  
                                     i2l1064 430A                                       i2l1080 42BA  
                                     i2l1224 2304                                       i2l1217 22A4  
                                     i2l1209 2224                                       i2l1059 430E  
                                     i2l1091 42A0                                       i2l1219 22C4  
                                     i2l1069 4306                                       i2l1181 1F44  
                                     i2l1191 2074                                       i2l1183 1F64  
                                     i2l1193 20B8                                       i2l1185 1FA8  
                                     i2l1362 4316                                       i2l1195 20FC  
                                     i2l1187 1FEC                                       i2l1179 1F24  
                                     i2l1197 2140                                       i2l1189 2030  
                                     i2l1367 4312                                       i2l1199 2184  
                                     i2l1536 42F0                                       i2l1466 4302  
                                     i2l1653 42F8                                       i2l1583 42E4  
                                     i2l1698 42D8                                       i2l7610 4320  
                                     i2l7700 42A6                                       i2l7622 4318  
                                     i2l7616 431C                                       i2l7720 42A0  
                                     i2l7712 428A                                       i2l7802 4300  
                                     i2l7706 42BA                                       i2l7714 428C  
                                     i2l8610 1F32                                       i2l7628 432A  
                                     i2l7740 4256                                       i2l8700 21A0  
                                     i2l8620 1F80                                       i2l8612 1F40  
                                     i2l8604 1F04                                       i2l7582 4324  
                                     i2l7734 4286                                       i2l7726 4270  
                                     i2l7742 4258                                       i2l8710 21F2  
                                     i2l8702 21B2                                       i2l8630 1FC4  
                                     i2l8622 1F8E                                       i2l8614 1F52  
                                     i2l8606 1F12                                       i2l7728 4272  
                                     i2l8720 2240                                       i2l8712 2200  
                                     i2l8704 21C0                                       i2l8640 2008  
                                     i2l8632 1FD2                                       i2l8624 1F9E  
                                     i2l8616 1F60                                       i2l8608 1F20  
                                     i2l7682 430C                                       i2l7754 42E6  
                                     i2l8730 2292                                       i2l8722 2252  
                                     i2l8714 2212                                       i2l8706 21D2  
                                     i2l8650 204C                                       i2l8642 2016  
                                     i2l8634 1FE2                                       i2l8626 1FA2  
                                     i2l8618 1F72                                       i2l7692 4304  
                                     i2l7748 426C                                       i2l7756 42E8  
                                     i2l7764 42DA                                       i2l7780 42CE  
                                     i2l8740 22E0                                       i2l8732 22A0  
                                     i2l8724 2260                                       i2l8716 2220  
                                     i2l8708 21E0                                       i2l8660 2090  
                                     i2l8652 205A                                       i2l8644 2026  
                                     i2l8636 1FE6                                       i2l8628 1FB6  
                                     i2l7790 4310                                       i2l7686 4308  
                                     i2l7758 42EC                                       i2l7766 42DC  
                                     i2l7774 42F2                                       i2l7782 42D0  
                                     i2l8742 22F2                                       i2l8734 22B2  
                                     i2l8726 2272                                       i2l8718 2232  
                                     i2l8670 20D4                                       i2l8662 209E  
                                     i2l8654 206A                                       i2l8646 202A  
                                     i2l8638 1FFA                                       i2l7768 42E0  
                                     i2l7784 42D4                                       i2l8744 2300  
                                     i2l8736 22C0                                       i2l8728 2280  
                                     i2l8680 2118                                       i2l8672 20E2  
                                     i2l8664 20AE                                       i2l8656 206E  
                                     i2l8648 203E                                       i2l7698 42A4  
                                     i2l8738 22D2                                       i2l8690 215C  
                                     i2l8682 2126                                       i2l8674 20F2  
                                     i2l8666 20B2                                       i2l8658 2082  
                                     i2l7796 4314                                       i2l8692 216A  
                                     i2l8684 2136                                       i2l8676 20F6  
                                     i2l8668 20C6                                       i2l8694 217A  
                                     i2l8686 213A                                       i2l8678 210A  
                                     i2l8696 217E                                       i2l8688 214E  
                                     i2l8698 2192            ADC_GetConversion_Blocking@adc_obj 000A  
                 ?_Adc_Get_conversion_result 0002                          _lcd_set_cursor_4bit 3828  
                              vfpfcnvrt@done 0010                                       _SPBRGH 0FB0  
                                     _SSPADD 0FC8                                       _SSPBUF 0FC9  
          ADC_GetConversion_Blocking@channel 000C                             __end_of___xxtofl 2F42  
                           __end_of_ccp_init 3F98             Adc_Get_conversion_result@adc_obj 0002  
                     ?_lcd_4bit_send_command 000D                                 vfprintf@cfmt 001A  
                          __end_of_TMR2_Init 3B04                                    ??___fladd 004A  
                                  ??___fldiv 0031                                    ??___awdiv 0006  
                                  ??___awmod 0006                                    ??___flmul 0018  
                                  ??___fltol 0056                            __end_of_START_PWM 3F50  
                                     _memset 4166                                       clear_0 3A5A  
                                     clear_1 3A66                                       clear_2 3A72  
                           ___awdiv@quotient 0008                         ?_lcd_set_cursor_4bit 0010  
                            ___awmod@divisor 0004                       lcd_set_cursor_4bit@lcd 0010  
                                     isa$std 0001                       lcd_set_cursor_4bit@ret 0015  
                     lcd_set_cursor_4bit@row 0011                              ___awmod@counter 0006  
                  PWM_set_Duty@set_duty_valu 0064                                       fputc@c 0002  
                                  ?_ADC_INIT 0005                                    ?_CCP1_ISR 0001  
                               __pdataCOMRAM 0079                                    ?_CCP2_ISR 0001  
                         motor_move_left@ret 000B                                 __mediumconst 0000  
                                     tblptrh 0FF7                                       tblptrl 0FF6  
                                     tblptru 0FF8                    _TIMER3_INTERRUPT_HANDLERF 008A  
                                  ?_CCP_INIt 0067                                       putch@c 0001  
                           __end_of_vfprintf 3FD8                                    ??_sprintf 001F  
                            ADC_INIT@adc_obj 0005                                 ___xxtofl@arg 000C  
                               ___xxtofl@exp 000B                                 ___xxtofl@val 0002  
                                 __accesstop 0080                      __end_of__initialization 3A78  
             ?_lcd_4bit_send_data_char_posit 0016                 Adc_Get_conversion_result@ret 0008  
                                  ?_INT0_ISR 0001                                    ?_INT1_ISR 0001  
                                  ?_INT2_ISR 0001                             PWM_set_Duty@_ccp 005C  
          __end_of_Adc_Get_conversion_result 36CE                             PWM_set_Duty@duty 005F  
                              ___rparam_used 0001                                   ___fltol@f1 0052  
                    _lcd_4bit_send_data_char 3DF8                               _selected_timer 3D34  
                  Adc_select_Channel@adc_obj 0005                       ??_gpio_pin_write_logic 0004  
                             __pcstackCOMRAM 0001                                 __pidataBANK0 4212  
                               __pidataBANK1 42BC                    Adc_select_Channel@channal 0007  
                                  ?_TMR0_ISR 0001                                    ?_TMR1_ISR 0001  
                                  ?_TMR2_ISR 0001                                    ?_TMR3_ISR 0001  
               ??_ADC_GetConversion_Blocking 000E          lcd_4bit_send_data_string_posit@data 0019  
                              __end_of_fputc 3828                        ??_lcd_set_cursor_4bit 0013  
                              __end_of_putch 432A                             ??_configure_mode 005D  
                                  ?_TMR_INIT 0001                     lcd_4bit_send_command@lcd 000D  
               convert_uint16_to_string@temp 002F                            RB5_ISR@RB5_source 0001  
                   lcd_4bit_send_command@ret 000F                              _motor_move_left 40C6  
                                 ??_ADC_INIT 0007                                   ??_CCP1_ISR 0001  
                                 ??_CCP2_ISR 0001                        Adc_select_Channel@ret 0009  
                                 ??_CCP_INIt 0131                       _INT2_InterruptHandeler 00AA  
                                    ??_fputc 0005               _preload_value@hal_timer1$F4037 006C  
                                    ??_putch 0002                                   __pbssBANK0 0080  
                                 __pbssBANK1 0100                 __end_of_lcd_send_4bit_enable 4018  
                                 ??_INT0_ISR 0001                                   ??_INT1_ISR 0001  
                                 ??_INT2_ISR 0001                    lcd_set_cursor_4bit@column 0012  
                     __end_of_selected_timer 3D9A                                   ??_TMR0_ISR 0001  
                                 ??_TMR1_ISR 0001                                   ??_TMR2_ISR 0001  
                                 ??_TMR3_ISR 0001                  convert_uint16_to_string@ret 0035  
                                    _ADC_ISR 4324                  convert_uint16_to_string@num 002C  
                convert_uint16_to_string@str 002E                              led_toggle@F3069 0075  
                                    ?_memset 0002                            _EUSART_RX_ASY_ISR 432A  
                                 ??_TMR_INIT 0004                            led_intalize@F3054 0078  
                         ?_EUSART_RX_ASY_ISR 0001   Adc_Get_conversion_result@conversion_result 0004  
                  _RB6_InterruptHandeler_Low 009E                                      _RB4_ISR 42A2  
                                    _RB5_ISR 4288                                      _RB6_ISR 426E  
                                    _RB7_ISR 4254                                    ?___xxtofl 0002  
                                  ?_ccp_init 0001                  ?_lcd_send_4bit_command_data 000A  
                          _EUSART_TX_ASY_ISR 4318                                _keypad_values 1001  
                    lcd_send_4bit_enable@lcd 000A                      lcd_send_4bit_enable@ret 000B  
                          RB7_ISR@RB7_source 0001                          ??_EUSART_RX_ASY_ISR 0001  
                         ?_EUSART_TX_ASY_ISR 0001                   _RB4_InterruptHandeler_High 00A8  
                          ccp_interrupt@_ccp 0002                               _tris_registers 00E8  
                 _RB7_InterruptHandeler_High 009C                    ??_lcd_4bit_send_data_char 000F  
                    ??_I2C_BUS_COLLISION_ISR 0001                          ??_EUSART_TX_ASY_ISR 0001  
                            ?_selected_timer 0002                                      __Hparam 0000  
                                    __Lparam 0000                      __end_of_motor_move_left 40FE  
                 __end_of_Adc_select_Channel 408E                                      ___fladd 1618  
                  __end_of_EUSART_RX_ASY_ISR 432C                                      ___fldiv 2308  
                                    ___awdiv 354C                                      ___awmod 36CE  
                                    ___flmul 1AD8                                      ___fltol 3288  
                                  ?_vfprintf 0017                                 __psmallconst 1000  
                                    _ccp_obj 00C1                   __end_of_gpio_pin_intialize 3DF8  
                                    __pcinit 39F4                                ?_MSSP_Spi_ISR 0001  
                                    __ramtop 1000                                      __ptext0 26A2  
                              relay_on@F3057 0073                                      __ptext1 408E  
                                    __ptext2 40C6                                      __ptext3 395E  
                                    __ptext4 4018                                      __ptext5 3828  
                                    __ptext6 3DF8                                      __ptext7 38C4  
                                    __ptext8 40FE                                      __ptext9 3F98  
                                  _T0CONbits 0FD5                    __end_of_EUSART_TX_ASY_ISR 431C  
                                  _T1CONbits 0FCD                     _convert_uint16_to_string 38C4  
                                  _T2CONbits 0FCA                                   ??___xxtofl 0006  
                                  _T3CONbits 0FB1                                   ??_ccp_init 0068  
                           ___awmod@dividend 0002                       _TMR2_INTERRUPT_HANDLER 008C  
                                    _motor_1 00FE                            _I2C_MODULE_TR_ISR 4310  
                                    _sprintf 40FE                               __pintcode_body 1F02  
                       end_of_initialization 3A78                           ?_I2C_MODULE_TR_ISR 0001  
ADC_GetConversion_Blocking@conversion_result 000D                                      fputc@fp 0004  
                ??_Adc_Get_conversion_result 0005                                      memset@c 0003  
                                    memset@n 0005                                      memset@p 0007  
                                    int_func 1F02                      ??_lcd_4bit_send_command 000F  
                        ??_I2C_MODULE_TR_ISR 0001                        gpio_pin_intialize@ret 000C  
    __end_of_lcd_4bit_send_data_string_posit 39F4            ??_lcd_4bit_send_data_string_posit 001B  
           ?_lcd_4bit_send_data_string_posit 0016              _lcd_4bit_send_data_string_posit 395E  
                          __end_of_vfpfcnvrt 2D8E                                    _RCSTAbits 0FAB  
         __end_of_ADC_GetConversion_Blocking 3C58                   _ADC_GetConversion_Blocking 3BE8  
                                    postdec1 0FE5                                      postdec2 0FDD  
                                    postinc0 0FEE                                      postinc1 0FE6  
                                    postinc2 0FDE                             vfpfcnvrt@convarg 0012  
                                 ??_vfprintf 001A               lcd_send_4bit_command_data@data 000B  
                                 _motor_stop 408E                               ??_MSSP_Spi_ISR 0001  
                        _lcd_4bit_initialize 338E      _EUSART_FRAMING_ERROR_INTERRUPT_HANDLERF 00B2  
               _I2C_Write_Collision_HANDLERF 0098                                    _TMR2_Init 3A82  
                                  _PORTBbits 0F81              __end_of_lcd_4bit_send_data_char 3E54  
                     _ADC_INTERRUPT_HANDLERF 00BC                         _lcd_send_4bit_enable 3FD8  
                           _InterruptManager 0008                                    _START_PWM 3F06  
                                ___fladd@grs 0051                    __end_of_I2C_MODULE_TR_ISR 4314  
       __end_of_gpio_pin_direction_intialize 3068                 _gpio_pin_direction_intialize 2F42  
                              ___xxtofl@sign 000A                                    _TRISCbits 0F94  
                 lcd_4bit_send_data_char@lcd 000D                   lcd_4bit_send_data_char@ret 000F  
                                ___fldiv@grs 003C                                  ___fldiv@rem 0035  
                       ?_lcd_4bit_initialize 0010                 _EUSART_TX_INTERRUPT_HANDLERF 00B6  
                                ___flmul@grs 001D                                  _CCP1CONbits 0FBD  
                         configure_mode@_ccp 005C                                  _CCP2CONbits 0FBA  
                                  _TXSTAbits 0FAC                             _motor_initialize 4196  
                              _ccp_interrupt 3EB0                            _adc_select_format 3CC6  
                           ?_motor_move_left 000A                convert_uint16_to_string@F3208 0080  
               __end_of_Adc_start_conversion 4212                                  vfpfcnvrt@ap 000E  
                                vfpfcnvrt@cp 0011                                  vfpfcnvrt@fp 000C  
                         ?_adc_select_format 0002                                  _BAUDCONbits 0FB8  
                              __pidataCOMRAM 42FA                    _Adc_Get_conversion_result 3610  
                                 ?_TMR2_Init 0002                        ?_lcd_send_4bit_enable 000A  
                             __end_of_memset 4196                                   ?_START_PWM 0002  
                        ??_adc_select_format 0005                          start_initialization 39F4  
                                __end_of_abs 4166                ?_gpio_pin_direction_intialize 0002  
           lcd_4bit_send_data_char_posit@lcd 0016             lcd_4bit_send_data_char_posit@ret 001A  
           lcd_4bit_send_data_char_posit@row 0017                        ??_lcd_4bit_initialize 0011  
        lcd_4bit_send_data_char_posit@colunm 0018                               ?_ccp_interrupt 0002  
                  __end_of_adc_select_format 3D34                  __end_of_lcd_set_cursor_4bit 38C4  
                                vfprintf@fmt 0018                                  __pdataBANK0 00DE  
                                __pdataBANK1 0120                                  ?_motor_stop 000A  
                                   ?_ADC_ISR 0001                                     ??_memset 0007  
                                 memset@dest 0002                                 CCP_INIt@_ccp 0067  
               lcd_4bit_send_command@command 000E                                    ___fladd@a 0046  
                                  ___fladd@b 0042            spi_slave_mode_configuration@F3141 00F4  
          spi_slave_mode_configuration@F3143 00F3            spi_slave_mode_configuration@F3145 00F2  
          spi_slave_mode_configuration@F3139 00F5                                    ___fldiv@a 002D  
                                  ___fldiv@b 0029                                     ?_RB4_ISR 0001  
                                   ?_RB5_ISR 0001                                     ?_RB6_ISR 0001  
                                   ?_RB7_ISR 0001                                    ___flmul@a 0014  
                                  ___flmul@b 0010                                  __pbssCOMRAM 0068  
                              __pcstackBANK1 0131                       _INT0_InterruptHandeler 00AE  
                                ADC_INIT@ret 000A                             ??_selected_timer 0003  
                       __end_of_MSSP_Spi_ISR 4304                            _TIMER0_INTERRUPPT 0090  
            gpio_pin_direction_intialize@ret 0008                               _app_initialize 41C6  
                              ?_PWM_set_Duty 005C                __end_of_I2C_BUS_COLLISION_ISR 4318  
                                  __pintcode 0008                   ??_convert_uint16_to_string 002F  
                                   ?___fladd 0042                                     ?___fldiv 0029  
                                   ?___awdiv 0002                                     ?___awmod 0002  
                                   ?___flmul 0010                                     ?___fltol 0052  
              ADC_GetConversion_Blocking@ret 000E                       ??_lcd_send_4bit_enable 000B  
                  gpio_pin_write_logic@logic 0003                                  ??_TMR2_Init 0003  
                  _RB4_InterruptHandeler_Low 00A6                                  ??_START_PWM 0003  
                                __smallconst 1000                     gpio_pin_intialize@_pin_t 000A  
                                   _ADC_INIT 3178                                     _CCP1_ISR 4320  
                                   _CCP2_ISR 431C                    _RB7_InterruptHandeler_Low 009A  
                         _Adc_select_Channel 4054                                     _CCP_INIt 3B78  
                                   ?_sprintf 001B                           _gpio_pin_intialize 3D9A  
                            motor_stop@motor 000A                          ?_Adc_select_Channel 0005  
                 _RB6_InterruptHandeler_High 00A0                         _Adc_start_conversion 41EE  
                     __end_of_app_initialize 41EE               ??_gpio_pin_direction_intialize 0003  
                                   _INT0_ISR 430C                                     _INT1_ISR 4308  
                                   _INT2_ISR 4304                                     _RB4_Flag 007D  
                                   _RB5_Flag 007C                                     _RB6_Flag 007B  
                            ??_ccp_interrupt 0003                                     _RB7_Flag 007A  
                             ??_PWM_set_Duty 005D                          motor_initialize@ret 000E  
    _EUSART_OVERRUN_ERROR_INTERRUPT_HANDLERF 00B0                          ?_gpio_pin_intialize 000A  
                   __end_of_InterruptManager 2308                                     _PIE1bits 0F9D  
                                   _PIE2bits 0FA0          gpio_pin_direction_intialize@__pin_t 0002  
              __end_of_lcd_4bit_send_command 3EB0                                     _PIR1bits 0F9E  
                                   _PIR2bits 0FA1                                     i2u710_40 42B6  
                                   i2u710_41 42B2                                     i2u711_40 429C  
                                   i2u711_41 4298                                     i2u712_40 4282  
                                   i2u712_41 427E                                     i2u713_40 4268  
                                   i2u801_40 1F12                                     i2u713_41 4264  
                                   i2u801_41 1F0E                                     i2u810_40 1F9E  
                                   i2u802_40 1F20                                     i2u810_41 1F9A  
                                   i2u802_41 1F1C                                     i2u811_40 1FB6  
                                   i2u803_40 1F32                                     i2u811_41 1FB2  
                                   i2u803_41 1F2E                                     i2u820_40 204C  
                                   i2u812_40 1FC4                                     i2u804_40 1F40  
                                   i2u820_41 2048                                     i2u812_41 1FC0  
                                   i2u804_41 1F3C                                     i2u821_40 205A  
                                   i2u813_40 1FD2                                     i2u805_40 1F52  
                                   i2u821_41 2056                                     i2u813_41 1FCE  
                                   i2u805_41 1F4E                                     i2u830_40 20F2  
                                   i2u822_40 206A                                     i2u814_40 1FE2  
                                   i2u806_40 1F60                                     i2u830_41 20EE  
                                   i2u822_41 2066                                     i2u814_41 1FDE  
                                   i2u806_41 1F5C                                     i2u831_40 210A  
                                   i2u823_40 2082                                     i2u815_40 1FFA  
                                   i2u807_40 1F72                                     i2u831_41 2106  
                                   i2u823_41 207E                                     i2u815_41 1FF6  
                                   i2u807_41 1F6E                                     i2u840_40 21A0  
                                   i2u832_40 2118                                     i2u824_40 2090  
                                   i2u816_40 2008                                     i2u808_40 1F80  
                                   i2u840_41 219C                                     i2u832_41 2114  
                                   i2u824_41 208C                                     i2u816_41 2004  
                                   i2u808_41 1F7C                                     i2u841_40 21B2  
                                   i2u833_40 2126                                     i2u825_40 209E  
                                   i2u817_40 2016                                     i2u809_40 1F8E  
                                   i2u841_41 21AE                                     i2u833_41 2122  
                                   i2u825_41 209A                                     i2u817_41 2012  
                                   i2u809_41 1F8A                                     i2u850_40 2240  
                                   i2u842_40 21C0                                     i2u834_40 2136  
                                   i2u826_40 20AE                                     i2u818_40 2026  
                                   i2u850_41 223C                                     i2u842_41 21BC  
                                   i2u834_41 2132                                     i2u826_41 20AA  
                                   i2u818_41 2022                                     i2u851_40 2252  
                                   i2u843_40 21D2                                     i2u835_40 214E  
                                   i2u827_40 20C6                                     i2u819_40 203E  
                                   i2u851_41 224E                                     i2u843_41 21CE  
                                   i2u835_41 214A                                     i2u827_41 20C2  
                                   i2u819_41 203A                                     i2u860_40 22E0  
                                   i2u852_40 2260                                     i2u844_40 21E0  
                                   i2u836_40 215C                                     i2u828_40 20D4  
                                   i2u860_41 22DC                                     i2u852_41 225C  
                                   i2u844_41 21DC                                     i2u836_41 2158  
                                   i2u828_41 20D0                                     i2u861_40 22F2  
                                   i2u853_40 2272                                     i2u845_40 21F2  
                                   i2u837_40 216A                                     i2u829_40 20E2  
                                   i2u861_41 22EE                                     i2u853_41 226E  
                                   i2u845_41 21EE                                     i2u837_41 2166  
                                   i2u829_41 20DE                                     i2u862_40 2300  
                                   i2u854_40 2280                                     i2u846_40 2200  
                                   i2u838_40 217A                                     i2u862_41 22FC  
                                   i2u854_41 227C                                     i2u846_41 21FC  
                                   i2u838_41 2176                                     i2u855_40 2292  
                                   i2u847_40 2212                                     i2u839_40 2192  
                                   i2u855_41 228E                                     i2u847_41 220E  
                                   i2u839_41 218E                                     i2u856_40 22A0  
                                   i2u848_40 2220                                     i2u856_41 229C  
                                   i2u848_41 221C                                     i2u857_40 22B2  
                                   i2u849_40 2232                                     i2u857_41 22AE  
                                   i2u849_41 222E                                     i2u858_40 22C0  
                                   i2u858_41 22BC                                     i2u859_40 22D2  
                                   i2u859_41 22CE                                    _temp_sens 012A  
                ?_ADC_GetConversion_Blocking 000A                   _TIMER1_INTERRUPPT_HANDLERF 008E  
                          RB4_ISR@RB4_source 0001                                     _TMR0_ISR 42E6  
                                   _TMR1_ISR 42DA                                     _TMR2_ISR 42F2  
                                   _TMR3_ISR 42CE                         ??_Adc_select_Channel 0008  
                                  _vfpfcnvrt 2BC0                                     _TMR_INIT 4234  
                                 _ADCON0bits 0FC2                                   _ADCON1bits 0FC1  
                                 _ADCON2bits 0FC0                         ??_gpio_pin_intialize 000B  
                   __end_of_motor_initialize 41C6                   __end_of_adc_select_Voltage 3B78  
                                 vfpfcnvrt@c 0016                      gpio_pin_write_logic@ret 0009  
                                _INTCON2bits 0FF1                                  _INTCON3bits 0FF0  
                                  copy_data0 3A08                                    copy_data1 3A28  
                                  copy_data2 3A48                     ?_lcd_4bit_send_data_char 000D  
                      ?_Adc_start_conversion 0002                              ?_app_initialize 0001  
                                 _EECON1bits 0FA6                                     __Hrparam 0000  
                                 vfprintf@ap 0019                                     __Lrparam 0000  
                                 vfprintf@fp 0017                                 _tmr1_counter 00C0  
                _MSSP_SPI_INTERRUPT_HANDLERF 0092                                   ?_vfpfcnvrt 000C  
                    _CCP2_INTERRUPT_HANDLERF 00B8                       _I2C_INTERRUPT_HANDLERF 0094  
                              _preload_value 006E                                   sprintf@fmt 001C  
                          RB6_ISR@RB6_source 0001                                     ___xxtofl 2D8E  
                                   _ccp_init 3F50                                     _degr_cel 0068  
                                   _fan_mode 0070                                     __ptext10 2BC0  
                                   __ptext11 377E                                     __ptext20 103A  
                                   __ptext12 4328                                     __ptext21 3D34  
                                   __ptext13 4132                                     __ptext30 3D9A  
                                   __ptext22 1618                                     __ptext14 36CE  
                                   __ptext31 3068                                     __ptext23 3EB0  
                                   __ptext15 354C                                     __ptext40 3288  
                                   __ptext32 2F42                                     __ptext24 41C6  
                                   __ptext16 4166                                     __ptext41 1AD8  
                                   __ptext33 3178                                     __ptext25 4196  
                                   __ptext17 3F50                                     __ptext50 42F2  
                                   __ptext42 2308                                     __ptext34 3CC6  
                                   __ptext26 338E                                     __ptext18 3F06  
                                   __ptext51 42DA                                     __ptext43 3BE8  
                                   __ptext35 3B04                                     __ptext27 3E54  
                                   __ptext19 3B78                                     __ptext60 430C  
                                   __ptext52 42E6                                     __ptext44 41EE  
                                   __ptext36 4234                                     __ptext28 3FD8  
                                   __ptext61 4310                                     __ptext53 4254  
                                   __ptext45 4054                                     __ptext37 3A82  
                                   __ptext29 3C58                                     __ptext62 4314  
                                   __ptext54 426E                                     __ptext46 3474  
                                   __ptext38 2986                                     __ptext63 4318  
                                   __ptext55 4288                                     __ptext47 3610  
                                   __ptext39 2D8E                                     __ptext64 432A  
                                   __ptext56 42A2                                     __ptext65 431C  
                                   __ptext57 4300                                     __ptext49 42CE  
                                   __ptext66 4320                                     __ptext58 4304  
                                   __ptext67 4324                                     __ptext59 4308  
                          app_initialize@ret 0014                 _EUSART_RX_INTERRUPT_HANDLERF 00B4  
            convert_uint16_to_string@counter 0036                            _adc_configure_pin 3474  
                        _configure_mode$5774 005F                          _configure_mode$5775 0063  
                             relay_off@F3062 0072                           ?_adc_configure_pin 0001  
         spi_master_mode_configuration@F3131 0079           spi_master_mode_configuration@F3133 00F7  
         spi_master_mode_configuration@F3135 00F6                                     _sens_res 00DC  
           __end_of_convert_uint16_to_string 395E                                     isa$xinst 0000  
               lcd_4bit_initialize@l_counter 0012                                     int$flags 007E  
                                   _vfprintf 3F98                                 ??_motor_stop 000B  
                        ??_adc_configure_pin 0002                                 _MSSP_Spi_ISR 4300  
                               TMR2_Init@TMR 0002                        motor_initialize@motor 000D  
                       __end_of_PWM_set_Duty 2BC0                        __end_of_keypad_values 1011  
                                 _INTCONbits 0FF2                  __end_of_lcd_4bit_initialize 3474  
               ??_lcd_send_4bit_command_data 000C                               _configure_mode 103A  
               __end_of_gpio_pin_write_logic 3178                       ??_Adc_start_conversion 0004  
                   adc_configure_pin@adc_obj 0004                                 _preload_vall 006A  
                       motor_move_left@motor 000A                                     intlevel2 0000  
                                  sprintf@ap 001F                    __end_of_adc_configure_pin 354C  
                         __end_of_motor_stop 40C6                                motor_stop@ret 000B  
                  adc_select_Voltage@adc_obj 0002                     adc_select_format@adc_obj 0002  
              lcd_send_4bit_command_data@lcd 000A                lcd_send_4bit_command_data@ret 000C  
                                ??_vfpfcnvrt 000F                   gpio_pin_write_logic@_pin_t 0002  
                       relay_initalize@F3052 0074                                  _preload_val 0071  
                                   sprintf@f 0020                                     sprintf@s 001B  
            ??_lcd_4bit_send_data_char_posit 001A                               _port_registers 0120  
                     __end_of_configure_mode 1618                                  _SSPCON1bits 0FC6  
                                _SSPCON2bits 0FC5                       _INT1_InterruptHandeler 00AC  
                              START_PWM@_ccp 0002                                ___fladd@signs 004E  
                               ___fladd@aexp 004F                                 ___fladd@bexp 0050  
                          ?_InterruptManager 0001                       lcd_4bit_initialize@lcd 0010  
                     lcd_4bit_initialize@ret 0013  
