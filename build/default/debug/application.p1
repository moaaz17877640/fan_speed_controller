Version 4.0 HI-TECH Software Intermediate Code
"57 ./MCAL_Layer/CPP1/../../MCAL_Layer/GPIO/hal_gpio.h
[s S273 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S273 . port pin direction logic ]
"26 ./ECU_Layer/DC_MOTOR/ecu_dc_motor.h
[; ;./ECU_Layer/DC_MOTOR/ecu_dc_motor.h: 26: typedef struct{
[s S274 `S273 -> 2 `i ]
[n S274 . motors ]
"10 application.c
[; ;application.c: 10: motor_t motor_1 ={
[c E2986 0 1 2 3 4 .. ]
[n E2986 . PORTA_INDEX PORTB_INDEX PORTC_INDEX PORTD_INDEX PORTE_INDEX  ]
[c E2993 0 1 2 3 4 5 6 7 .. ]
[n E2993 . PIN0 PIN1 PIN2 PIN3 PIN4 PIN5 PIN6 PIN7  ]
[c E2982 0 1 .. ]
[n E2982 . OUTPUT INPUT  ]
"35 ./ECU_Layer/CHR_LCD/ecu_chr_lcd.h
[; ;./ECU_Layer/CHR_LCD/ecu_chr_lcd.h: 35: typedef struct{
[s S275 `S273 1 `S273 1 `S273 -> 4 `i ]
[n S275 . pin_Rs pin_en lcd_pins ]
"20 application.c
[; ;application.c: 20:  chr_lcd_4bit_t lcd_1 = {
[c E2978 0 1 .. ]
[n E2978 . LOGIC_LOW LOGIC_HIGH  ]
[v F3220 `(v ~T0 @X0 0 tf ]
"51
[; ;application.c: 51:  ADc_t temp_sens ={
[c E3122 0 1 .. ]
[n E3122 . INTERRUPT_LOW_PRIORITY INTERRUPT_HIGH_PRIORITY  ]
[c E3184 0 1 2 3 4 5 6 7 8 9 10 11 12 .. ]
[n E3184 . AN0_CHANNEL AN1_CHANNEL AN2_CHANNEL AN3_CHANNEL AN4_CHANNEL AN5_CHANNEL AN6_CHANNEL AN7_CHANNEL AN8_CHANNEL AN9_CHANNEL AN10_CHANNEL AN11_CHANNEL AN12_CHANNEL  ]
[c E3199 0 1 2 3 4 5 6 7 .. ]
[n E3199 . TAD0 TAD2 TAD4 TAD6 TAD8 TAD12 TAD16 TAD20  ]
[c E3209 0 1 2 3 4 5 6 .. ]
[n E3209 . FOSC_2 FOSC_8 FOSC_32 FOSC_ FOSC_4 FOSC_16 FOSC_64  ]
"54 ./MCAL_Layer/ADC/hal_adc.h
[; ;./MCAL_Layer/ADC/hal_adc.h: 54: typedef struct{
[s S279 `*F3220 1 `E3122 1 `E3184 1 `E3199 1 `E3209 1 :1 `uc 1 :1 `uc 1 :6 `uc 1 ]
[n S279 . ACD_INTERRUPT_HANDLER priority channal time_aq clock_con result_format voltage_reference Reserved ]
[v F3371 `(v ~T0 @X0 0 tf ]
[v F3276 `(v ~T0 @X0 0 tf ]
"59 application.c
[; ;application.c: 59:  Timer2_t tm2;
[c E3251 0 1 2 .. ]
[n E3251 . TIMER2_PRESCALER_DIV_1 TIMER2_PRESCALER_DIV_4 TIMER2_PRESCALER_DIV_16  ]
[c E3256 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 .. ]
[n E3256 . TIMER2_POSTSCALER_DIV_1 TIMER2_POSTSCALER_DIV_2 TIMER2_POSTSCALER_DIV_3 TIMER2_POSTSCALER_DIV_4 TIMER2_POSTSCALER_DIV_5 TIMER2_POSTSCALER_DIV_6 TIMER2_POSTSCALER_DIV_7 TIMER2_POSTSCALER_DIV_8 TIMER2_POSTSCALER_DIV_9 TIMER2_POSTSCALER_DIV_10 TIMER2_POSTSCALER_DIV_11 TIMER2_POSTSCALER_DIV_12 TIMER2_POSTSCALER_DIV_13 TIMER2_POSTSCALER_DIV_14 TIMER2_POSTSCALER_DIV_15 TIMER2_POSTSCALER_DIV_16  ]
"51 ./MCAL_Layer/TIMER2/hal_timer2.h
[; ;./MCAL_Layer/TIMER2/hal_timer2.h: 51: typedef struct {
[s S280 `*F3276 1 `E3122 1 `E3251 1 `E3256 1 `uc 1 ]
[n S280 . TIMER2_INTERRUPT_HANDLER timer2_priority prescaler_valu postscaler_valu preload_value ]
[v F3375 `(v ~T0 @X0 0 tf ]
"62
[; ;./MCAL_Layer/TIMER2/hal_timer2.h: 62:  Std_ReturnType TMR2_Init(const Timer2_t *TMR);
[v _TMR2_Init `(uc ~T0 @X0 0 ef1`*CS280 ]
[v F3340 `(v ~T0 @X0 0 tf ]
[v F3343 `(v ~T0 @X0 0 tf ]
"67 application.c
[; ;application.c: 67:  ccp_t ccp_obj ;
[c E3310 1 2 3 .. ]
[n E3310 . CCP_TIMER2_PRESCALER_DIV_1 CCP_TIMER2_PRESCALER_DIV_4 CCP_TIMER2_PRESCALER_DIV_16  ]
[c E3292 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 .. ]
[n E3292 . CCP_TIMER2_POSTSCALER_DIV_1 CCP_TIMER2_POSTSCALER_DIV_2 CCP_TIMER2_POSTSCALER_DIV_3 CCP_TIMER2_POSTSCALER_DIV_4 CCP_TIMER2_POSTSCALER_DIV_5 CCP_TIMER2_POSTSCALER_DIV_6 CCP_TIMER2_POSTSCALER_DIV_7 CCP_TIMER2_POSTSCALER_DIV_8 CCP_TIMER2_POSTSCALER_DIV_9 CCP_TIMER2_POSTSCALER_DIV_10 CCP_TIMER2_POSTSCALER_DIV_11 CCP_TIMER2_POSTSCALER_DIV_12 CCP_TIMER2_POSTSCALER_DIV_13 CCP_TIMER2_POSTSCALER_DIV_14 CCP_TIMER2_POSTSCALER_DIV_15 CCP_TIMER2_POSTSCALER_DIV_16  ]
[c E3325 0 1 .. ]
[n E3325 . CCP1_INST CCP2_INST  ]
[c E3315 0 1 2 .. ]
[n E3315 . CCP_MODULE_COMPARE_MODE CCP_MODULE_CAPTURE_MODE CCP_MODULE_PWM_MODE  ]
[c E3320 0 1 2 .. ]
[n E3320 . TIMER1_FOR_CCP1_CCP2 TIMER1_FOR_CCP1_TIMER3_FOR_CCP2 TIMER3_FOR_CCP1_CCP2  ]
"105 ./MCAL_Layer/CPP1/hal_ccp.h
[; ;./MCAL_Layer/CPP1/hal_ccp.h: 105: typedef struct {
[s S284 `*F3340 1 `E3122 1 `*F3343 1 `E3122 1 `us 1 `E3310 1 `E3292 1 `E3325 1 `E3315 1 :4 `uc 1 :2 `uc 1 `E3320 1 `S273 1 ]
[n S284 . CCP1_INTERRUPT_HANDLER priority_CCP1 CCP2_INTERRUPT_HANDLER priority_CCP2 PWM_Freq timer2_prescaler timer2_postscaler ccp_inst CCP_Mode Sub_mode Reserved tmr ccp_pin ]
"127
[; ;./MCAL_Layer/CPP1/hal_ccp.h: 127: Std_ReturnType CCP_INIt(const ccp_t *_ccp);
[v _CCP_INIt `(uc ~T0 @X0 0 ef1`*CS284 ]
"130
[; ;./MCAL_Layer/CPP1/hal_ccp.h: 130: Std_ReturnType START_PWM(const ccp_t *_ccp);
[v _START_PWM `(uc ~T0 @X0 0 ef1`*CS284 ]
[p mainexit ]
"9 application.c
[; ;application.c: 9: void app_initialize(void);
[v _app_initialize `(v ~T0 @X0 0 ef ]
"69 ./MCAL_Layer/ADC/hal_adc.h
[; ;./MCAL_Layer/ADC/hal_adc.h: 69: Std_ReturnType Adc_start_conversion(const ADc_t *adc_obj );
[v _Adc_start_conversion `(uc ~T0 @X0 0 ef1`*CS279 ]
"72
[; ;./MCAL_Layer/ADC/hal_adc.h: 72: Std_ReturnType ADC_GetConversion_Blocking(const ADc_t *_adc, Adc_select_Channel_t channel,
[v _ADC_GetConversion_Blocking `(uc ~T0 @X0 0 ef3`*CS279`E3184`*us ]
"58 ./ECU_Layer/CHR_LCD/ecu_chr_lcd.h
[; ;./ECU_Layer/CHR_LCD/ecu_chr_lcd.h: 58: Std_ReturnType lcd_4bit_send_data_string_posit(const chr_lcd_4bit_t *lcd ,uint8 row , uint8 colunm , uint8 *data);
[v _lcd_4bit_send_data_string_posit `(uc ~T0 @X0 0 ef4`*CS275`uc`uc`*uc ]
"69
[; ;./ECU_Layer/CHR_LCD/ecu_chr_lcd.h: 69: Std_ReturnType convert_uint16_to_string(uint16 num ,uint8 *str );
[v _convert_uint16_to_string `(uc ~T0 @X0 0 ef2`us`*uc ]
"132 ./MCAL_Layer/CPP1/hal_ccp.h
[; ;./MCAL_Layer/CPP1/hal_ccp.h: 132: Std_ReturnType PWM_set_Duty(uint8 duty ,const ccp_t *_ccp);
[v _PWM_set_Duty `(uc ~T0 @X0 0 ef2`uc`*CS284 ]
"32 ./ECU_Layer/DC_MOTOR/ecu_dc_motor.h
[; ;./ECU_Layer/DC_MOTOR/ecu_dc_motor.h: 32: Std_ReturnType motor_move_left(const motor_t *motor);
[v _motor_move_left `(uc ~T0 @X0 0 ef1`*CS274 ]
"33
[; ;./ECU_Layer/DC_MOTOR/ecu_dc_motor.h: 33: Std_ReturnType motor_stop(const motor_t *motor);
[v _motor_stop `(uc ~T0 @X0 0 ef1`*CS274 ]
"56 ./ECU_Layer/CHR_LCD/ecu_chr_lcd.h
[; ;./ECU_Layer/CHR_LCD/ecu_chr_lcd.h: 56: Std_ReturnType lcd_4bit_send_data_char_posit(const chr_lcd_4bit_t *lcd ,uint8 row , uint8 colunm , uint8 data);
[v _lcd_4bit_send_data_char_posit `(uc ~T0 @X0 0 ef4`*CS275`uc`uc`uc ]
"52
[; ;./ECU_Layer/CHR_LCD/ecu_chr_lcd.h: 52: Std_ReturnType lcd_4bit_initialize(const chr_lcd_4bit_t *lcd );
[v _lcd_4bit_initialize `(uc ~T0 @X0 0 ef1`*CS275 ]
"30 ./ECU_Layer/DC_MOTOR/ecu_dc_motor.h
[; ;./ECU_Layer/DC_MOTOR/ecu_dc_motor.h: 30: Std_ReturnType motor_initialize(const motor_t *motor);
[v _motor_initialize `(uc ~T0 @X0 0 ef1`*CS274 ]
"66 ./MCAL_Layer/ADC/hal_adc.h
[; ;./MCAL_Layer/ADC/hal_adc.h: 66: Std_ReturnType ADC_INIT(const ADc_t *adc_obj);
[v _ADC_INIT `(uc ~T0 @X0 0 ef1`*CS279 ]
"54 C:/Program Files/Microchip/MPLABX/v6.15/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"191
[; <" PORTB equ 0F81h ;# ">
"362
[; <" PORTC equ 0F82h ;# ">
"537
[; <" PORTD equ 0F83h ;# ">
"679
[; <" PORTE equ 0F84h ;# ">
"882
[; <" LATA equ 0F89h ;# ">
"994
[; <" LATB equ 0F8Ah ;# ">
"1106
[; <" LATC equ 0F8Bh ;# ">
"1218
[; <" LATD equ 0F8Ch ;# ">
"1330
[; <" LATE equ 0F8Dh ;# ">
"1382
[; <" TRISA equ 0F92h ;# ">
"1387
[; <" DDRA equ 0F92h ;# ">
"1604
[; <" TRISB equ 0F93h ;# ">
"1609
[; <" DDRB equ 0F93h ;# ">
"1826
[; <" TRISC equ 0F94h ;# ">
"1831
[; <" DDRC equ 0F94h ;# ">
"2048
[; <" TRISD equ 0F95h ;# ">
"2053
[; <" DDRD equ 0F95h ;# ">
"2270
[; <" TRISE equ 0F96h ;# ">
"2275
[; <" DDRE equ 0F96h ;# ">
"2434
[; <" OSCTUNE equ 0F9Bh ;# ">
"2499
[; <" PIE1 equ 0F9Dh ;# ">
"2576
[; <" PIR1 equ 0F9Eh ;# ">
"2653
[; <" IPR1 equ 0F9Fh ;# ">
"2730
[; <" PIE2 equ 0FA0h ;# ">
"2796
[; <" PIR2 equ 0FA1h ;# ">
"2862
[; <" IPR2 equ 0FA2h ;# ">
"2928
[; <" EECON1 equ 0FA6h ;# ">
"2994
[; <" EECON2 equ 0FA7h ;# ">
"3001
[; <" EEDATA equ 0FA8h ;# ">
"3008
[; <" EEADR equ 0FA9h ;# ">
"3015
[; <" EEADRH equ 0FAAh ;# ">
"3022
[; <" RCSTA equ 0FABh ;# ">
"3027
[; <" RCSTA1 equ 0FABh ;# ">
"3232
[; <" TXSTA equ 0FACh ;# ">
"3237
[; <" TXSTA1 equ 0FACh ;# ">
"3488
[; <" TXREG equ 0FADh ;# ">
"3493
[; <" TXREG1 equ 0FADh ;# ">
"3500
[; <" RCREG equ 0FAEh ;# ">
"3505
[; <" RCREG1 equ 0FAEh ;# ">
"3512
[; <" SPBRG equ 0FAFh ;# ">
"3517
[; <" SPBRG1 equ 0FAFh ;# ">
"3524
[; <" SPBRGH equ 0FB0h ;# ">
"3531
[; <" T3CON equ 0FB1h ;# ">
"3643
[; <" TMR3 equ 0FB2h ;# ">
"3650
[; <" TMR3L equ 0FB2h ;# ">
"3657
[; <" TMR3H equ 0FB3h ;# ">
"3664
[; <" CMCON equ 0FB4h ;# ">
"3754
[; <" CVRCON equ 0FB5h ;# ">
"3833
[; <" ECCP1AS equ 0FB6h ;# ">
"3915
[; <" PWM1CON equ 0FB7h ;# ">
"3985
[; <" BAUDCON equ 0FB8h ;# ">
"3990
[; <" BAUDCTL equ 0FB8h ;# ">
"4157
[; <" CCP2CON equ 0FBAh ;# ">
"4236
[; <" CCPR2 equ 0FBBh ;# ">
"4243
[; <" CCPR2L equ 0FBBh ;# ">
"4250
[; <" CCPR2H equ 0FBCh ;# ">
"4257
[; <" CCP1CON equ 0FBDh ;# ">
"4354
[; <" CCPR1 equ 0FBEh ;# ">
"4361
[; <" CCPR1L equ 0FBEh ;# ">
"4368
[; <" CCPR1H equ 0FBFh ;# ">
"4375
[; <" ADCON2 equ 0FC0h ;# ">
"4446
[; <" ADCON1 equ 0FC1h ;# ">
"4531
[; <" ADCON0 equ 0FC2h ;# ">
"4650
[; <" ADRES equ 0FC3h ;# ">
"4657
[; <" ADRESL equ 0FC3h ;# ">
"4664
[; <" ADRESH equ 0FC4h ;# ">
"4671
[; <" SSPCON2 equ 0FC5h ;# ">
"4733
[; <" SSPCON1 equ 0FC6h ;# ">
"4803
[; <" SSPSTAT equ 0FC7h ;# ">
"5024
[; <" SSPADD equ 0FC8h ;# ">
"5031
[; <" SSPBUF equ 0FC9h ;# ">
"5038
[; <" T2CON equ 0FCAh ;# ">
"5109
[; <" PR2 equ 0FCBh ;# ">
"5114
[; <" MEMCON equ 0FCBh ;# ">
"5219
[; <" TMR2 equ 0FCCh ;# ">
"5226
[; <" T1CON equ 0FCDh ;# ">
"5329
[; <" TMR1 equ 0FCEh ;# ">
"5336
[; <" TMR1L equ 0FCEh ;# ">
"5343
[; <" TMR1H equ 0FCFh ;# ">
"5350
[; <" RCON equ 0FD0h ;# ">
"5483
[; <" WDTCON equ 0FD1h ;# ">
"5511
[; <" HLVDCON equ 0FD2h ;# ">
"5516
[; <" LVDCON equ 0FD2h ;# ">
"5781
[; <" OSCCON equ 0FD3h ;# ">
"5858
[; <" T0CON equ 0FD5h ;# ">
"5935
[; <" TMR0 equ 0FD6h ;# ">
"5942
[; <" TMR0L equ 0FD6h ;# ">
"5949
[; <" TMR0H equ 0FD7h ;# ">
"5956
[; <" STATUS equ 0FD8h ;# ">
"6027
[; <" FSR2 equ 0FD9h ;# ">
"6034
[; <" FSR2L equ 0FD9h ;# ">
"6041
[; <" FSR2H equ 0FDAh ;# ">
"6048
[; <" PLUSW2 equ 0FDBh ;# ">
"6055
[; <" PREINC2 equ 0FDCh ;# ">
"6062
[; <" POSTDEC2 equ 0FDDh ;# ">
"6069
[; <" POSTINC2 equ 0FDEh ;# ">
"6076
[; <" INDF2 equ 0FDFh ;# ">
"6083
[; <" BSR equ 0FE0h ;# ">
"6090
[; <" FSR1 equ 0FE1h ;# ">
"6097
[; <" FSR1L equ 0FE1h ;# ">
"6104
[; <" FSR1H equ 0FE2h ;# ">
"6111
[; <" PLUSW1 equ 0FE3h ;# ">
"6118
[; <" PREINC1 equ 0FE4h ;# ">
"6125
[; <" POSTDEC1 equ 0FE5h ;# ">
"6132
[; <" POSTINC1 equ 0FE6h ;# ">
"6139
[; <" INDF1 equ 0FE7h ;# ">
"6146
[; <" WREG equ 0FE8h ;# ">
"6158
[; <" FSR0 equ 0FE9h ;# ">
"6165
[; <" FSR0L equ 0FE9h ;# ">
"6172
[; <" FSR0H equ 0FEAh ;# ">
"6179
[; <" PLUSW0 equ 0FEBh ;# ">
"6186
[; <" PREINC0 equ 0FECh ;# ">
"6193
[; <" POSTDEC0 equ 0FEDh ;# ">
"6200
[; <" POSTINC0 equ 0FEEh ;# ">
"6207
[; <" INDF0 equ 0FEFh ;# ">
"6214
[; <" INTCON3 equ 0FF0h ;# ">
"6306
[; <" INTCON2 equ 0FF1h ;# ">
"6376
[; <" INTCON equ 0FF2h ;# ">
"6493
[; <" PROD equ 0FF3h ;# ">
"6500
[; <" PRODL equ 0FF3h ;# ">
"6507
[; <" PRODH equ 0FF4h ;# ">
"6514
[; <" TABLAT equ 0FF5h ;# ">
"6523
[; <" TBLPTR equ 0FF6h ;# ">
"6530
[; <" TBLPTRL equ 0FF6h ;# ">
"6537
[; <" TBLPTRH equ 0FF7h ;# ">
"6544
[; <" TBLPTRU equ 0FF8h ;# ">
"6553
[; <" PCLAT equ 0FF9h ;# ">
"6560
[; <" PC equ 0FF9h ;# ">
"6567
[; <" PCL equ 0FF9h ;# ">
"6574
[; <" PCLATH equ 0FFAh ;# ">
"6581
[; <" PCLATU equ 0FFBh ;# ">
"6588
[; <" STKPTR equ 0FFCh ;# ">
"6694
[; <" TOS equ 0FFDh ;# ">
"6701
[; <" TOSL equ 0FFDh ;# ">
"6708
[; <" TOSH equ 0FFEh ;# ">
"6715
[; <" TOSU equ 0FFFh ;# ">
"8 application.c
[; ;application.c: 8: volatile uint8 tmr1_counter = 0 ;
[v _tmr1_counter `Vuc ~T0 @X0 1 e ]
[i _tmr1_counter
-> -> 0 `i `uc
]
"10
[; ;application.c: 10: motor_t motor_1 ={
[v _motor_1 `S274 ~T0 @X0 1 e ]
[i _motor_1
:U ..
:U ..
:U ..
:U ..
-> . `E2986 3 `uc
-> . `E2993 0 `uc
-> . `E2982 0 `uc
-> -> 0 `ui `uc
..
:U ..
-> . `E2986 3 `uc
-> . `E2993 1 `uc
-> . `E2982 0 `uc
-> -> 0 `ui `uc
..
..
..
..
]
"20
[; ;application.c: 20:  chr_lcd_4bit_t lcd_1 = {
[v _lcd_1 `S275 ~T0 @X0 1 e ]
[i _lcd_1
:U ..
:U ..
:U ..
:U ..
-> . `E2986 2 `uc
-> . `E2993 0 `uc
-> . `E2982 0 `uc
-> . `E2978 0 `uc
..
..
:U ..
:U ..
-> . `E2986 2 `uc
-> . `E2993 1 `uc
-> . `E2982 0 `uc
-> . `E2978 0 `uc
..
..
:U ..
:U ..
-> . `E2986 2 `uc
-> . `E2993 3 `uc
-> . `E2982 0 `uc
-> . `E2978 0 `uc
..
:U ..
-> . `E2986 2 `uc
-> . `E2993 4 `uc
-> . `E2982 0 `uc
-> . `E2978 0 `uc
..
:U ..
-> . `E2986 2 `uc
-> . `E2993 5 `uc
-> . `E2982 0 `uc
-> . `E2978 0 `uc
..
:U ..
-> . `E2986 2 `uc
-> . `E2993 6 `uc
-> . `E2982 0 `uc
-> . `E2978 0 `uc
..
..
..
..
]
"51
[; ;application.c: 51:  ADc_t temp_sens ={
[v _temp_sens `S279 ~T0 @X0 1 e ]
[i _temp_sens
:U ..
:U ..
-> -> -> 0 `i `*v `*F3371
-> -> 0 `i `E3122
. `E3184 0
. `E3199 7
. `E3209 2
-> -> 1 `i `uc
-> -> 0 `ui `uc
..
..
]
"59
[; ;application.c: 59:  Timer2_t tm2;
[v _tm2 `S280 ~T0 @X0 1 e ]
"60
[; ;application.c: 60: void TMR_INIT(void){
[v _TMR_INIT `(v ~T0 @X0 1 ef ]
{
[e :U _TMR_INIT ]
[f ]
"61
[; ;application.c: 61: tm2.TIMER2_INTERRUPT_HANDLER = ((void*)0) ;
[e = . _tm2 0 -> -> -> 0 `i `*v `*F3375 ]
"62
[; ;application.c: 62: tm2.postscaler_valu = TIMER2_POSTSCALER_DIV_1;
[e = . _tm2 3 . `E3256 0 ]
"63
[; ;application.c: 63: tm2.prescaler_valu =TIMER2_PRESCALER_DIV_1 ;
[e = . _tm2 2 . `E3251 0 ]
"64
[; ;application.c: 64: tm2.preload_value = 0 ;
[e = . _tm2 4 -> -> 0 `i `uc ]
"65
[; ;application.c: 65: TMR2_Init(&tm2);
[e ( _TMR2_Init (1 -> &U _tm2 `*CS280 ]
"66
[; ;application.c: 66: }
[e :UE 285 ]
}
"67
[; ;application.c: 67:  ccp_t ccp_obj ;
[v _ccp_obj `S284 ~T0 @X0 1 e ]
"68
[; ;application.c: 68: void ccp_init(void){
[v _ccp_init `(v ~T0 @X0 1 ef ]
{
[e :U _ccp_init ]
[f ]
"69
[; ;application.c: 69: ccp_obj.PWM_Freq =5000 ;
[e = . _ccp_obj 4 -> -> 5000 `i `us ]
"70
[; ;application.c: 70: ccp_obj.CCP_Mode = CCP_MODULE_PWM_MODE ;
[e = . _ccp_obj 8 . `E3315 2 ]
"71
[; ;application.c: 71: ccp_obj.Sub_mode = (uint8)(0x0C) ;
[e = . _ccp_obj 9 -> -> 12 `i `uc ]
"72
[; ;application.c: 72: ccp_obj.ccp_inst= CCP1_INST ;
[e = . _ccp_obj 7 . `E3325 0 ]
"73
[; ;application.c: 73: ccp_obj.timer2_postscaler = CCP_TIMER2_POSTSCALER_DIV_1 ;
[e = . _ccp_obj 6 . `E3292 0 ]
"74
[; ;application.c: 74: ccp_obj.timer2_prescaler =CCP_TIMER2_PRESCALER_DIV_1 ;
[e = . _ccp_obj 5 . `E3310 0 ]
"75
[; ;application.c: 75: ccp_obj.ccp_pin.direction = OUTPUT ;
[e = . . _ccp_obj 12 2 -> . `E2982 0 `uc ]
"76
[; ;application.c: 76: ccp_obj.ccp_pin.logic = LOGIC_LOW ;
[e = . . _ccp_obj 12 3 -> . `E2978 0 `uc ]
"77
[; ;application.c: 77: ccp_obj.ccp_pin.pin =PIN2;
[e = . . _ccp_obj 12 1 -> . `E2993 2 `uc ]
"78
[; ;application.c: 78: ccp_obj.ccp_pin.port =PORTC_INDEX ;
[e = . . _ccp_obj 12 0 -> . `E2986 2 `uc ]
"79
[; ;application.c: 79: CCP_INIt(&ccp_obj);
[e ( _CCP_INIt (1 -> &U _ccp_obj `*CS284 ]
"80
[; ;application.c: 80: START_PWM(&ccp_obj);
[e ( _START_PWM (1 -> &U _ccp_obj `*CS284 ]
"81
[; ;application.c: 81: }
[e :UE 286 ]
}
"82
[; ;application.c: 82: Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 e ]
[i _ret
-> -> 0 `i `uc
]
"83
[; ;application.c: 83: uint16 sens_res = 0;
[v _sens_res `us ~T0 @X0 1 e ]
[i _sens_res
-> -> 0 `i `us
]
"84
[; ;application.c: 84: uint16 degr_cel=0 ;
[v _degr_cel `us ~T0 @X0 1 e ]
[i _degr_cel
-> -> 0 `i `us
]
"85
[; ;application.c: 85: uint8 fan_mode = 0;
[v _fan_mode `uc ~T0 @X0 1 e ]
[i _fan_mode
-> -> 0 `i `uc
]
"86
[; ;application.c: 86: uint8 str[6] ;
[v _str `uc ~T0 @X0 -> 6 `i e ]
[v $root$_main `(v ~T0 @X0 0 e ]
"87
[; ;application.c: 87: int main() {
[v _main `(i ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
"88
[; ;application.c: 88:     TMR_INIT();
[e ( _TMR_INIT ..  ]
"89
[; ;application.c: 89:     ccp_init();
[e ( _ccp_init ..  ]
"90
[; ;application.c: 90:      app_initialize();
[e ( _app_initialize ..  ]
"91
[; ;application.c: 91:     ret|= Adc_start_conversion(&temp_sens);
[e =| _ret -> ( _Adc_start_conversion (1 -> &U _temp_sens `*CS279 `uc ]
"93
[; ;application.c: 93:     while(1){
[e :U 289 ]
{
"94
[; ;application.c: 94:        ret|= ADC_GetConversion_Blocking(&temp_sens ,AN0_CHANNEL, &sens_res);
[e =| _ret -> ( _ADC_GetConversion_Blocking (3 , , -> &U _temp_sens `*CS279 . `E3184 0 &U _sens_res `uc ]
"95
[; ;application.c: 95:        degr_cel = (sens_res * 4.88f) ;
[e = _degr_cel -> * -> -> _sens_res `ui `f -> .4.88 `f `us ]
"96
[; ;application.c: 96:        degr_cel/=10.0;
[e =/ _degr_cel .10.0 ]
"97
[; ;application.c: 97:        ret|= lcd_4bit_send_data_string_posit(&lcd_1 , 1 , 1 , "temp =");
[e =| _ret -> ( _lcd_4bit_send_data_string_posit (4 , , , -> &U _lcd_1 `*CS275 -> -> 1 `i `uc -> -> 1 `i `uc :s 2C `uc ]
"98
[; ;application.c: 98:         ret|=convert_uint16_to_string(degr_cel ,str );
[e =| _ret -> ( _convert_uint16_to_string (2 , _degr_cel &U _str `uc ]
"99
[; ;application.c: 99:         ret|=lcd_4bit_send_data_string_posit(&lcd_1 , 1 , 8 , str);
[e =| _ret -> ( _lcd_4bit_send_data_string_posit (4 , , , -> &U _lcd_1 `*CS275 -> -> 1 `i `uc -> -> 8 `i `uc &U _str `uc ]
"101
[; ;application.c: 101:        ret|= lcd_4bit_send_data_string_posit(&lcd_1 , 2 , 2, "st speed mode");
[e =| _ret -> ( _lcd_4bit_send_data_string_posit (4 , , , -> &U _lcd_1 `*CS275 -> -> 2 `i `uc -> -> 2 `i `uc :s 4C `uc ]
"102
[; ;application.c: 102:         if(degr_cel > 80){
[e $ ! > -> _degr_cel `ui -> -> 80 `i `ui 291  ]
{
"103
[; ;application.c: 103:             ret|=PWM_set_Duty(100, &ccp_obj);
[e =| _ret -> ( _PWM_set_Duty (2 , -> -> 100 `i `uc -> &U _ccp_obj `*CS284 `uc ]
"104
[; ;application.c: 104:            ret|= motor_move_left(&motor_1);
[e =| _ret -> ( _motor_move_left (1 -> &U _motor_1 `*CS274 `uc ]
"105
[; ;application.c: 105:             fan_mode ='4';
[e = _fan_mode -> -> 52 `ui `uc ]
"107
[; ;application.c: 107:         }else if(degr_cel >= 50 && degr_cel < 80){
}
[e $U 292  ]
[e :U 291 ]
[e $ ! && >= -> _degr_cel `ui -> -> 50 `i `ui < -> _degr_cel `ui -> -> 80 `i `ui 293  ]
{
"108
[; ;application.c: 108:           ret|= PWM_set_Duty(80, &ccp_obj);
[e =| _ret -> ( _PWM_set_Duty (2 , -> -> 80 `i `uc -> &U _ccp_obj `*CS284 `uc ]
"109
[; ;application.c: 109:            ret|= motor_move_left(&motor_1);
[e =| _ret -> ( _motor_move_left (1 -> &U _motor_1 `*CS274 `uc ]
"110
[; ;application.c: 110:           fan_mode ='3';
[e = _fan_mode -> -> 51 `ui `uc ]
"112
[; ;application.c: 112:         }else if(degr_cel >= 30 && degr_cel <50){
}
[e $U 294  ]
[e :U 293 ]
[e $ ! && >= -> _degr_cel `ui -> -> 30 `i `ui < -> _degr_cel `ui -> -> 50 `i `ui 295  ]
{
"113
[; ;application.c: 113:            ret|= PWM_set_Duty(80, &ccp_obj);
[e =| _ret -> ( _PWM_set_Duty (2 , -> -> 80 `i `uc -> &U _ccp_obj `*CS284 `uc ]
"114
[; ;application.c: 114:             ret|=motor_move_left(&motor_1);
[e =| _ret -> ( _motor_move_left (1 -> &U _motor_1 `*CS274 `uc ]
"115
[; ;application.c: 115:           fan_mode ='2';
[e = _fan_mode -> -> 50 `ui `uc ]
"117
[; ;application.c: 117:         }else if(degr_cel >= 20){
}
[e $U 296  ]
[e :U 295 ]
[e $ ! >= -> _degr_cel `ui -> -> 20 `i `ui 297  ]
{
"118
[; ;application.c: 118:           ret|= PWM_set_Duty(60, &ccp_obj);
[e =| _ret -> ( _PWM_set_Duty (2 , -> -> 60 `i `uc -> &U _ccp_obj `*CS284 `uc ]
"119
[; ;application.c: 119:            ret|= motor_move_left(&motor_1);
[e =| _ret -> ( _motor_move_left (1 -> &U _motor_1 `*CS274 `uc ]
"120
[; ;application.c: 120:          fan_mode ='1';
[e = _fan_mode -> -> 49 `ui `uc ]
"121
[; ;application.c: 121:         }
}
[e $U 298  ]
"122
[; ;application.c: 122:         else{
[e :U 297 ]
{
"123
[; ;application.c: 123:         ret|= PWM_set_Duty(0, &ccp_obj);
[e =| _ret -> ( _PWM_set_Duty (2 , -> -> 0 `i `uc -> &U _ccp_obj `*CS284 `uc ]
"124
[; ;application.c: 124:           ret|= motor_stop(&motor_1);
[e =| _ret -> ( _motor_stop (1 -> &U _motor_1 `*CS274 `uc ]
"125
[; ;application.c: 125:        fan_mode ='0';
[e = _fan_mode -> -> 48 `ui `uc ]
"126
[; ;application.c: 126:         }
}
[e :U 298 ]
[e :U 296 ]
[e :U 294 ]
[e :U 292 ]
"127
[; ;application.c: 127:        ret|= lcd_4bit_send_data_char_posit(&lcd_1 , 2 , 1 ,fan_mode );
[e =| _ret -> ( _lcd_4bit_send_data_char_posit (4 , , , -> &U _lcd_1 `*CS275 -> -> 2 `i `uc -> -> 1 `i `uc _fan_mode `uc ]
"128
[; ;application.c: 128:         if(fan_mode){
[e $ ! != -> _fan_mode `i -> 0 `i 299  ]
{
"129
[; ;application.c: 129:        ret|= lcd_4bit_send_data_string_posit(&lcd_1 , 1 , 11 , "fan on");
[e =| _ret -> ( _lcd_4bit_send_data_string_posit (4 , , , -> &U _lcd_1 `*CS275 -> -> 1 `i `uc -> -> 11 `i `uc :s 6C `uc ]
"130
[; ;application.c: 130:         }else{
}
[e $U 300  ]
[e :U 299 ]
{
"131
[; ;application.c: 131:        ret|= lcd_4bit_send_data_string_posit(&lcd_1 , 1 , 11 , "fan off");
[e =| _ret -> ( _lcd_4bit_send_data_string_posit (4 , , , -> &U _lcd_1 `*CS275 -> -> 1 `i `uc -> -> 11 `i `uc :s 8C `uc ]
"132
[; ;application.c: 132:         }
}
[e :U 300 ]
"135
[; ;application.c: 135:     }
}
[e :U 288 ]
[e $U 289  ]
[e :U 290 ]
"137
[; ;application.c: 137:      return (0);
[e ) -> 0 `i ]
[e $UE 287  ]
"138
[; ;application.c: 138: }
[e :UE 287 ]
}
"140
[; ;application.c: 140: void app_initialize(void) {
[v _app_initialize `(v ~T0 @X0 1 ef ]
{
[e :U _app_initialize ]
[f ]
"141
[; ;application.c: 141:   Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"142
[; ;application.c: 142:   ret|=lcd_4bit_initialize(&lcd_1);
[e =| _ret -> ( _lcd_4bit_initialize (1 -> &U _lcd_1 `*CS275 `uc ]
"143
[; ;application.c: 143:  ret|=motor_initialize(&motor_1);
[e =| _ret -> ( _motor_initialize (1 -> &U _motor_1 `*CS274 `uc ]
"144
[; ;application.c: 144:  ret|= ADC_INIT(&temp_sens);
[e =| _ret -> ( _ADC_INIT (1 -> &U _temp_sens `*CS279 `uc ]
"146
[; ;application.c: 146: }
[e :UE 301 ]
}
[a 5C 102 97 110 32 111 110 0 ]
[a 6C 102 97 110 32 111 110 0 ]
[a 7C 102 97 110 32 111 102 102 0 ]
[a 8C 102 97 110 32 111 102 102 0 ]
[a 3C 115 116 32 115 112 101 101 100 32 109 111 100 101 0 ]
[a 4C 115 116 32 115 112 101 101 100 32 109 111 100 101 0 ]
[a 1C 116 101 109 112 32 61 0 ]
[a 2C 116 101 109 112 32 61 0 ]
